export default {
  abi: [
    {
      type: 'constructor',
      inputs: [
        { name: '_base', type: 'address', internalType: 'address' },
        { name: '_quote', type: 'address', internalType: 'address' },
        { name: '_feedId', type: 'bytes32', internalType: 'bytes32' },
        { name: '_feedDecimals', type: 'uint8', internalType: 'uint8' },
        { name: '_maxStaleness', type: 'uint256', internalType: 'uint256' },
      ],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      name: 'aggregateValues',
      inputs: [{ name: 'values', type: 'uint256[]', internalType: 'uint256[]' }],
      outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'base',
      inputs: [],
      outputs: [{ name: '', type: 'address', internalType: 'address' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'cache',
      inputs: [],
      outputs: [
        { name: 'price', type: 'uint208', internalType: 'uint208' },
        { name: 'priceTimestamp', type: 'uint48', internalType: 'uint48' },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'extractTimestampsAndAssertAllAreEqual',
      inputs: [],
      outputs: [
        {
          name: 'extractedTimestamp',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
      stateMutability: 'pure',
    },
    {
      type: 'function',
      name: 'feedDecimals',
      inputs: [],
      outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'feedId',
      inputs: [],
      outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'getAuthorisedSignerIndex',
      inputs: [{ name: 'signerAddress', type: 'address', internalType: 'address' }],
      outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'getDataServiceId',
      inputs: [],
      outputs: [{ name: '', type: 'string', internalType: 'string' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'getQuote',
      inputs: [
        { name: 'inAmount', type: 'uint256', internalType: 'uint256' },
        { name: 'base', type: 'address', internalType: 'address' },
        { name: 'quote', type: 'address', internalType: 'address' },
      ],
      outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'getQuotes',
      inputs: [
        { name: 'inAmount', type: 'uint256', internalType: 'uint256' },
        { name: 'base', type: 'address', internalType: 'address' },
        { name: 'quote', type: 'address', internalType: 'address' },
      ],
      outputs: [
        { name: '', type: 'uint256', internalType: 'uint256' },
        { name: '', type: 'uint256', internalType: 'uint256' },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'getUniqueSignersThreshold',
      inputs: [],
      outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'maxStaleness',
      inputs: [],
      outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'name',
      inputs: [],
      outputs: [{ name: '', type: 'string', internalType: 'string' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'quote',
      inputs: [],
      outputs: [{ name: '', type: 'address', internalType: 'address' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'updatePrice',
      inputs: [{ name: 'timestamp', type: 'uint48', internalType: 'uint48' }],
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      name: 'validateTimestamp',
      inputs: [{ name: 'timestampMillis', type: 'uint256', internalType: 'uint256' }],
      outputs: [],
      stateMutability: 'view',
    },
    {
      type: 'event',
      name: 'CacheUpdated',
      inputs: [
        {
          name: 'price',
          type: 'uint256',
          indexed: false,
          internalType: 'uint256',
        },
        {
          name: 'priceTimestamp',
          type: 'uint256',
          indexed: false,
          internalType: 'uint256',
        },
      ],
      anonymous: false,
    },
    { type: 'error', name: 'CalldataMustHaveValidPayload', inputs: [] },
    { type: 'error', name: 'CalldataOverOrUnderFlow', inputs: [] },
    { type: 'error', name: 'CanNotPickMedianOfEmptyArray', inputs: [] },
    { type: 'error', name: 'DataPackageTimestampMustNotBeZero', inputs: [] },
    { type: 'error', name: 'DataPackageTimestampsMustBeEqual', inputs: [] },
    { type: 'error', name: 'EachSignerMustProvideTheSameValue', inputs: [] },
    { type: 'error', name: 'EmptyCalldataPointersArr', inputs: [] },
    { type: 'error', name: 'GetDataServiceIdNotImplemented', inputs: [] },
    { type: 'error', name: 'IncorrectUnsignedMetadataSize', inputs: [] },
    {
      type: 'error',
      name: 'InsufficientNumberOfUniqueSigners',
      inputs: [
        {
          name: 'receivedSignersCount',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'requiredSignersCount',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
    { type: 'error', name: 'InvalidCalldataPointer', inputs: [] },
    { type: 'error', name: 'PriceOracle_InvalidAnswer', inputs: [] },
    { type: 'error', name: 'PriceOracle_InvalidConfiguration', inputs: [] },
    {
      type: 'error',
      name: 'PriceOracle_NotSupported',
      inputs: [
        { name: 'base', type: 'address', internalType: 'address' },
        { name: 'quote', type: 'address', internalType: 'address' },
      ],
    },
    { type: 'error', name: 'PriceOracle_Overflow', inputs: [] },
    {
      type: 'error',
      name: 'PriceOracle_TooStale',
      inputs: [
        { name: 'staleness', type: 'uint256', internalType: 'uint256' },
        { name: 'maxStaleness', type: 'uint256', internalType: 'uint256' },
      ],
    },
    {
      type: 'error',
      name: 'RedstonePayloadMustHaveAtLeastOneDataPackage',
      inputs: [],
    },
    {
      type: 'error',
      name: 'SignerNotAuthorised',
      inputs: [{ name: 'receivedSigner', type: 'address', internalType: 'address' }],
    },
  ],
  bytecode: {
    object:
      '',
    sourceMap:
      '611:6514:84:-:0;;;3052:547;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1077:9;3170:13;:41;3166:95;;;3220:41;;-1:-1:-1;;;3220:41:84;;;;;;;;;;;3166:95;-1:-1:-1;;;;;3272:12:84;;;;;;;3294:14;;;;;3318:16;;;;3344:28;;;;;3382;;;;3420:18;;3441;;:12;:18::i;:::-;3420:39;;3469:19;3491;3504:5;;3491:12;;;:19;;:::i;:::-;3469:41;-1:-1:-1;3528:64:84;3549:12;3469:41;3578:13;3528:20;:64::i;:::-;3520:72;;-1:-1:-1;611:6514:84;;-1:-1:-1;;;;;;611:6514:84;1798:316:66;1858:5;709:10;1887:5;-1:-1:-1;;;;;1879:40:66;;1875:55;;-1:-1:-1;1928:2:66;;1798:316;-1:-1:-1;1798:316:66:o;1875:55::-;1993:35;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1993:35:66;-1:-1:-1;;;1993:35:66;;;1976:53;;1941:12;;;;-1:-1:-1;;;;;1976:16:66;;;:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:89;;;;2046:7;:28;;;;;2057:4;:11;2072:2;2057:17;2046:28;:61;;2105:2;2046:61;;;2088:4;2077:25;;;;;;;;;;;;:::i;:::-;2039:68;1798:316;-1:-1:-1;;;;1798:316:66:o;2551:182:89:-;2654:5;2678:48;2683:13;2698:27;2713:12;2698;:27;:::i;:::-;1192:5;727:2;1213:13;:28;;;:59;;;;727:2;1245:12;:27;;;1213:59;1209:126;;;1295:29;;-1:-1:-1;;;1295:29:89;;;;;;;;;;;1209:126;1392:19;1398:13;1392:2;:19;:::i;:::-;1385:3;1363:18;1369:12;1363:2;:18;:::i;:::-;:25;;1362:49;1344:68;;1114:305;;;;;:::o;14:177:456:-;93:13;;-1:-1:-1;;;;;135:31:456;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:160::-;273:13;;326:4;315:16;;305:27;;295:55;;346:1;343;336:12;361:498;465:6;473;481;489;497;550:3;538:9;529:7;525:23;521:33;518:53;;;567:1;564;557:12;518:53;590:40;620:9;590:40;:::i;:::-;580:50;;649:49;694:2;683:9;679:18;649:49;:::i;:::-;639:59;;738:2;727:9;723:18;717:25;707:35;;761:47;804:2;793:9;789:18;761:47;:::i;:::-;751:57;;848:3;837:9;833:19;827:26;817:36;;361:498;;;;;;;;:::o;864:412::-;993:3;1031:6;1025:13;1056:1;1066:129;1080:6;1077:1;1074:13;1066:129;;;1178:4;1162:14;;;1158:25;;1152:32;1139:11;;;1132:53;1095:12;1066:129;;;-1:-1:-1;1250:1:456;1214:16;;1239:13;;;-1:-1:-1;1214:16:456;864:412;-1:-1:-1;864:412:456:o;1281:204::-;1349:6;1402:2;1390:9;1381:7;1377:23;1373:32;1370:52;;;1418:1;1415;1408:12;1370:52;1441:38;1469:9;1441:38;:::i;:::-;1431:48;1281:204;-1:-1:-1;;;1281:204:456:o;1490:127::-;1551:10;1546:3;1542:20;1539:1;1532:31;1582:4;1579:1;1572:15;1606:4;1603:1;1596:15;1622:148;1710:4;1689:12;;;1703;;;1685:31;;1728:13;;1725:39;;;1744:18;;:::i;1775:416::-;1864:1;1901:5;1864:1;1915:270;1936:7;1926:8;1923:21;1915:270;;;1995:4;1991:1;1987:6;1983:17;1977:4;1974:27;1971:53;;;2004:18;;:::i;:::-;2054:7;2044:8;2040:22;2037:55;;;2074:16;;;;2037:55;2153:22;;;;2113:15;;;;1915:270;;;1919:3;1775:416;;;;;:::o;2196:806::-;2245:5;2275:8;2265:80;;-1:-1:-1;2316:1:456;2330:5;;2265:80;2364:4;2354:76;;-1:-1:-1;2401:1:456;2415:5;;2354:76;2446:4;2464:1;2459:59;;;;2532:1;2527:130;;;;2439:218;;2459:59;2489:1;2480:10;;2503:5;;;2527:130;2564:3;2554:8;2551:17;2548:43;;;2571:18;;:::i;:::-;-1:-1:-1;;2627:1:456;2613:16;;2642:5;;2439:218;;2741:2;2731:8;2728:16;2722:3;2716:4;2713:13;2709:36;2703:2;2693:8;2690:16;2685:2;2679:4;2676:12;2672:35;2669:77;2666:159;;;-1:-1:-1;2778:19:456;;;2810:5;;2666:159;2857:34;2882:8;2876:4;2857:34;:::i;:::-;2927:6;2923:1;2919:6;2915:19;2906:7;2903:32;2900:58;;;2938:18;;:::i;:::-;2976:20;;2196:806;-1:-1:-1;;;2196:806:456:o;3007:140::-;3065:5;3094:47;3135:4;3125:8;3121:19;3115:4;3094:47;:::i;3007:140::-;611:6514:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;',
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      '0x608060405234801561000f575f80fd5b50600436106100fb575f3560e01c806387cf469611610093578063c23953d011610063578063c23953d014610332578063c274583a14610359578063f50b2efe14610392578063f90c4924146103a5575f80fd5b806387cf4696146102be578063999b93af146102e5578063ae68676c1461030c578063b24ebfcc1461031f575f80fd5b80634a643499116100ce5780634a643499146101af5780635001f3b5146101e457806355a547d51461023057806360c7d29514610238575f80fd5b80630579e61f146100ff57806306fdde031461012c578063259b0ec5146101755780633ce142f51461018a575b5f80fd5b61011261010d36600461185f565b6103ac565b604080519283526020830191909152015b60405180910390f35b6101686040518060400160405280601281526020017f52656473746f6e65436f72654f7261636c65000000000000000000000000000081525081565b6040516101239190611898565b610188610183366004611902565b6103c6565b005b61019d610198366004611927565b6106d9565b60405160ff9091168152602001610123565b6101d67f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610123565b61020b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610123565b6101d6610845565b5f546102859079ffffffffffffffffffffffffffffffffffffffffffffffffffff8116907a010000000000000000000000000000000000000000000000000000900465ffffffffffff1682565b6040805179ffffffffffffffffffffffffffffffffffffffffffffffffffff909316835265ffffffffffff909116602083015201610123565b6101d67f000000000000000000000000000000000000000000000000000000000000000081565b61020b7f000000000000000000000000000000000000000000000000000000000000000081565b6101d661031a36600461185f565b610998565b6101d661032d36600461196d565b6109ae565b61019d7f000000000000000000000000000000000000000000000000000000000000000081565b60408051808201909152601581527f72656473746f6e652d7072696d6172792d70726f6400000000000000000000006020820152610168565b6101886103a0366004611a38565b6109be565b600361019d565b5f805f6103ba868686610a32565b96879650945050505050565b604080518082019091525f5479ffffffffffffffffffffffffffffffffffffffffffffffffffff8116825265ffffffffffff7a0100000000000000000000000000000000000000000000000000009091048116602083018190529083161161042c575050565b8165ffffffffffff164211156104df575f61044f65ffffffffffff841642611a7c565b90507f00000000000000000000000000000000000000000000000000000000000000008111156104d9576040517fa6e68d63000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000060248201526044015b60405180910390fd5b5061052b565b603c6104f34265ffffffffffff8516611a7c565b111561052b576040517fd743df6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152815179ffffffffffffffffffffffffffffffffffffffffffffffffffff1680825265ffffffffffff841660209092018290527a010000000000000000000000000000000000000000000000000000909102175f9081556105b47f0000000000000000000000000000000000000000000000000000000000000000610bd8565b9050805f036105ef576040517fd743df6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b79ffffffffffffffffffffffffffffffffffffffffffffffffffff811115610643576040517f52a1f2a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201825279ffffffffffffffffffffffffffffffffffffffffffffffffffff831680825265ffffffffffff861660209283018190527a01000000000000000000000000000000000000000000000000000081029091175f558251848152918201527fcd09d0389356491201615b3b1316645c50c3ed811c1fe5cee81a84c939011302910160405180910390a1505050565b5f73ffffffffffffffffffffffffffffffffffffffff8216738bb8f32df04c8b654987daaed53d6b6091e3b7740361071257505f919050565b73ffffffffffffffffffffffffffffffffffffffff821673deb22f54738d54976c4c0fe5ce6d408e40d884990361074b57506001919050565b73ffffffffffffffffffffffffffffffffffffffff82167351ce04be4b3e32572c4ec9135221d0691ba7d2020361078457506002919050565b73ffffffffffffffffffffffffffffffffffffffff821673dd682daec5a90dd295d14da4b0bec9281017b5be036107bd57506003919050565b73ffffffffffffffffffffffffffffffffffffffff8216739c5ae89c4af6aa32ce58588dbaf90d18a855b6de036107f657506004919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016104d0565b919050565b5f8061084f610c45565b90505f61085b82610d70565b61ffff169050805f0361089a576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a5600283611a8f565b91505f5b81811015610992575f6108bb84610dc2565b90505f806108ca606887611a8f565b90505f6108d78236611a7c565b9050803592508265ffffffffffff165f0361091e576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b875f03610935578265ffffffffffff169750610976565b878365ffffffffffff1614610976576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109808488611a8f565b965050600190930192506108a9915050565b50505090565b5f6109a4848484610a32565b90505b9392505050565b5f6109b882610dfc565b92915050565b5f6109cb6103e883611acf565b5f549091507a010000000000000000000000000000000000000000000000000000900465ffffffffffff168114610a2e576040517fd743df6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b5f80610a80847f0000000000000000000000000000000000000000000000000000000000000000857f0000000000000000000000000000000000000000000000000000000000000000610e06565b604080518082019091525f5479ffffffffffffffffffffffffffffffffffffffffffffffffffff811682527a010000000000000000000000000000000000000000000000000000900465ffffffffffff166020820181905291925090421115610b83575f816020015165ffffffffffff1642610afc9190611a7c565b90507f0000000000000000000000000000000000000000000000000000000000000000811115610b81576040517fa6e68d63000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000060248201526044016104d0565b505b610bce86825f015179ffffffffffffffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000085610f3e565b9695505050505050565b6040805160018082528183019092525f918291906020808301908036833701905050905082815f81518110610c0f57610c0f611ae2565b602002602001018181525050610c2481610f8e565b5f81518110610c3557610c35611ae2565b6020026020010151915050919050565b5f6602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610cac576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f3660291115610ce8576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd73601355f6009610d20600362ffffff8516611a8f565b610d2a9190611a8f565b905036610d38600283611a8f565b11156109a7576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80610d7d602084611a8f565b905036811115610db9576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36033592915050565b5f805f610dce84610f99565b9092509050604e610de0826020611a8f565b610dea9084611b0f565b610df49190611a8f565b949350505050565b5f6109b882610fee565b5f8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610e6d57508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b15610e7957505f610df4565b8173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610edf57508373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b15610eec57506001610df4565b6040517f4ca22af000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8087166004830152841660248201526044016104d0565b5f6fffffffffffffffffffffffffffffffff8316608084901c8315610f7a57610f718782610f6c8986611b0f565b6110bd565b92505050610df4565b610f7187610f888885611b0f565b836110bd565b60606109b882611178565b5f80808080610fa9604187611a8f565b90505f610fc1610fba602084611a8f565b3690611320565b803594509050610fd2816003611320565b62ffffff9490941697933563ffffffff16965092945050505050565b5f81515f03611029576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110328261132b565b5f600283516110419190611acf565b9050600283516110519190611b26565b5f036110ab575f61109e84611067600185611a7c565b8151811061107757611077611ae2565b602002602001015185848151811061109157611091611ae2565b6020026020010151611379565b9050610df4600282611acf565b828181518110610c3557610c35611ae2565b8282027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff838509818110820190038061110b57826111025763ae47f7025f526004601cfd5b508190046109a7565b80831161111f5763ae47f7025f526004601cfd5b828486095f84810385169485900494848311909303908390038390046001010292030417600260038302811880840282030280840282030280840282030280840282030280840282030280840290910302029392505050565b60605f825167ffffffffffffffff81111561119557611195611940565b6040519080825280602002602001820160405280156111be578160200160208202803683370190505b5090505f835167ffffffffffffffff8111156111dc576111dc611940565b604051908082528060200260200182016040528015611205578160200160208202803683370190505b5090505f845167ffffffffffffffff81111561122357611223611940565b60405190808252806020026020018201604052801561125657816020015b60608152602001906001900390816112415790505b5090505f5b85518110156112a8576040805160038082526080820190925290602082016060803683370190505082828151811061129557611295611ae2565b602090810291909101015260010161125b565b505f6112b2610c45565b90505f6112be82610d70565b61ffff1690506112cf600283611a8f565b6040519092505f5b82811015611309575f6112ed8a89898989611384565b90506112f98186611a8f565b60408490529450506001016112d7565b50611314848761161d565b98975050505050505050565b5f6109a78284611a7c565b8051602082016020820281019150805b8281101561137357815b8181101561136a578151815180821015611360578084528183525b5050602001611345565b5060200161133b565b50505050565b5f6109a78284611a8f565b5f805f8061139185610f99565b90925090505f8080606081600d6113b36113ac602089611a8f565b8990611742565b6113bd9190611a8f565b90505f6113ce610fba60688d611a8f565b90505f6113ea836113e060418f611a8f565b610fba9190611a8f565b90506113f68382611409565b935082602085012094508135965061144a565b60408051838152602081850181019092525f9101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b61145b8765ffffffffffff166109be565b61146f8561146a60418f611a8f565b61174d565b955061147a866106d9565b60ff169950505050505050505f805f5b848110156115ea5761149d8885836117e0565b90935091505f5b8c518110156115e1578c81815181106114bf576114bf611ae2565b602002602001015184036115d9575f8b82815181106114e0576114e0611ae2565b602002602001015190506114f981896001901b16151590565b1580156115225750600360ff168d838151811061151857611518611ae2565b6020026020010151105b156115d3578c828151811061153957611539611ae2565b60200260200101805180919061154e90611b39565b81525050838b838151811061156557611565611ae2565b602002602001015160018f858151811061158157611581611ae2565b60200260200101516115939190611a7c565b815181106115a3576115a3611ae2565b60209081029190910101526001881b81178c83815181106115c6576115c6611ae2565b6020026020010181815250505b506115e1565b6001016114a4565b5060010161148a565b505050816020826115fb9190611a8f565b6116059190611b0f565b61161090604e611a8f565b9998505050505050505050565b60605f835167ffffffffffffffff81111561163a5761163a611940565b604051908082528060200260200182016040528015611663578160200160208202803683370190505b50905060035f5b8551811015611738578185828151811061168657611686611ae2565b602002602001015110156116ec578481815181106116a6576116a6611ae2565b6020026020010151826040517f2b13aef50000000000000000000000000000000000000000000000000000000081526004016104d0929190918252602082015260400190565b5f61170f87838151811061170257611702611ae2565b60200260200101516109ae565b90508084838151811061172457611724611ae2565b60209081029190910101525060010161166a565b5090949350505050565b5f6109a78284611b0f565b604080515f80825260208083018085528690523685900380850135831a948401859052803560608501819052910135608084018190529193909260019060a0016020604051602081039080840390855afa1580156117ad573d5f803e3d5ffd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00151979650505050505050565b5f80806117ee604e87611a8f565b90505f61181a611813611802602089611a8f565b61180d886001611a8f565b90611742565b8390611379565b90505f6118273683611320565b80359960209091013598509650505050505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610840575f80fd5b5f805f60608486031215611871575f80fd5b833592506118816020850161183c565b915061188f6040850161183c565b90509250925092565b5f602080835283518060208501525f5b818110156118c4578581018301518582016040015282016118a8565b505f6040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b5f60208284031215611912575f80fd5b813565ffffffffffff811681146109a7575f80fd5b5f60208284031215611937575f80fd5b6109a78261183c565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f602080838503121561197e575f80fd5b823567ffffffffffffffff80821115611995575f80fd5b818501915085601f8301126119a8575f80fd5b8135818111156119ba576119ba611940565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156119fd576119fd611940565b604052918252848201925083810185019188831115611a1a575f80fd5b938501935b8285101561131457843584529385019392850192611a1f565b5f60208284031215611a48575f80fd5b5035919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b818103818111156109b8576109b8611a4f565b808201808211156109b8576109b8611a4f565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f82611add57611add611aa2565b500490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b80820281158282048414176109b8576109b8611a4f565b5f82611b3457611b34611aa2565b500690565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b6957611b69611a4f565b506001019056fea26469706673582212201cbe81e5ee677805ae933cb0545c23de4baf28201716b4d4de1c25e4733f1c5664736f6c63430008180033',
    sourceMap:
      '611:6514:84:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:215:66;;;;;;:::i;:::-;;:::i;:::-;;;;722:25:456;;;778:2;763:18;;756:34;;;;695:18;1003:215:66;;;;;;;;1125:50:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4202:1433::-;;;;;;:::i;:::-;;:::i;:::-;;424:646:48;;;;;;:::i;:::-;;:::i;:::-;;;2061:4:456;2049:17;;;2031:36;;2019:2;2004:18;424:646:48;1889:184:456;1537:31:84;;;;;;;;2224:25:456;;;2212:2;2197:18;1537:31:84;2078:177:456;1254:29:84;;;;;;;;2436:42:456;2424:55;;;2406:74;;2394:2;2379:18;1254:29:84;2260:226:456;634:1416:43;;;:::i;2185:18:84:-;;;;;;;;;;;;;;;;;;;;2875:54:456;2863:67;;;2845:86;;2979:14;2967:27;;;2962:2;2947:18;;2940:55;2818:18;2185::84;2673:328:456;1923:37:84;;;;;1363:30;;;;;759:153:66;;;;;;:::i;:::-;;:::i;2786:149:45:-;;;;;;:::i;:::-;;:::i;1727:35:84:-;;;;;193:122:48;280:30;;;;;;;;;;;;;;;;;193:122;;5886:230:84;;;;;;:::i;:::-;;:::i;319:101:48:-;414:1;319:101;;1003:215:66;1092:7;1101;1120:17;1140:32;1150:8;1160:4;1166:5;1140:9;:32::i;:::-;1120:52;;;-1:-1:-1;1003:215:66;-1:-1:-1;;;;;1003:215:66:o;4202:1433:84:-;4336:27;;;;;;;;;:19;:27;;;;;;;;;;;;;;;;;;;4377:34;;;;4373:47;;4413:7;4202:1433;:::o;4373:47::-;4491:9;4473:27;;:15;:27;4469:584;;;4575:17;4595:27;;;;:15;:27;:::i;:::-;4575:47;;4652:12;4640:9;:24;4636:122;;;4691:52;;;;;;;;722:25:456;;;4730:12:84;763:18:456;;;756:34;695:18;;4691:52:84;;;;;;;;4636:122;4502:266;4469:584;;;390:9:47;4778:27:84;4790:15;4778:27;;;;:::i;:::-;:90;4774:279;;;5008:34;;;;;;;;;;;;;;4774:279;5125:55;;;;;;;;;5139:12;;5125:55;;;;;;;;;;;;;;;5117:63;;;;;-1:-1:-1;5117:63:84;;;5326:38;5357:6;5326:30;:38::i;:::-;5310:54;;5378:5;5387:1;5378:10;5374:57;;5397:34;;;;;;;;;;;;;;5374:57;5453:17;5445:25;;5441:67;;;5479:29;;;;;;;;;;;;;;5441:67;5526:57;;;;;;;;;;;;;;;;;;;;;;;;5518:65;;;;;;-1:-1:-1;5518:65:84;5598:30;;5054:25:456;;;5095:18;;;5088:55;5598:30:84;;5027:18:456;5598:30:84;;;;;;;4250:1385;;4202:1433;:::o;424:646:48:-;527:5;544:59;;;561:42;544:59;540:526;;-1:-1:-1;620:1:48;;424:646;-1:-1:-1;424:646:48:o;540:526::-;638:59;;;655:42;638:59;634:432;;-1:-1:-1;714:1:48;;424:646;-1:-1:-1;424:646:48:o;634:432::-;732:59;;;749:42;732:59;728:338;;-1:-1:-1;808:1:48;;424:646;-1:-1:-1;424:646:48:o;728:338::-;826:59;;;843:42;826:59;822:244;;-1:-1:-1;902:1:48;;424:646;-1:-1:-1;424:646:48:o;822:244::-;920:59;;;937:42;920:59;916:150;;-1:-1:-1;996:1:48;;424:646;-1:-1:-1;424:646:48:o;916:150::-;1025:34;;;;;2436:42:456;2424:55;;1025:34:48;;;2406:74:456;2379:18;;1025:34:48;2260:226:456;916:150:48;424:646;;;:::o;634:1416:43:-;704:26;738:30;771:36;:34;:36::i;:::-;738:69;;813:25;841:61;879:22;841:37;:61::i;:::-;813:89;;;;913:17;934:1;913:22;909:96;;952:46;;;;;;;;;;;;;;909:96;1011:48;1129:1:44;1011:48:43;;:::i;:::-;;;1070:24;1065:981;1119:17;1100:16;:36;1065:981;;;1166:27;1196:47;1220:22;1196:23;:47::i;:::-;1166:77;-1:-1:-1;1311:27:43;;1423:88;1771:3:44;1423:22:43;:88;:::i;:::-;1388:124;-1:-1:-1;1520:23:43;1546:41;1388:124;1546:8;:41;:::i;:::-;1520:67;;1651:15;1638:29;1614:53;;1687:20;:25;;1711:1;1687:25;1683:92;;1731:35;;;;;;;;;;;;;;1683:92;1787:18;1809:1;1787:23;1783:203;;1843:20;1822:41;;;;1783:203;;;1906:18;1882:20;:42;;;1878:108;;1943:34;;;;;;;;;;;;;;1878:108;1994:45;2020:19;1994:45;;:::i;:::-;;-1:-1:-1;;1138:18:43;;;;;-1:-1:-1;1065:981:43;;-1:-1:-1;;1065:981:43;;;732:1318;;634:1416;:::o;759:153:66:-;847:7;873:32;883:8;893:4;899:5;873:9;:32::i;:::-;866:39;;759:153;;;;;;:::o;2786:149:45:-;2865:7;2887:43;2923:6;2887:35;:43::i;:::-;2880:50;2786:149;-1:-1:-1;;2786:149:45:o;5886:230:84:-;5977:17;5997:22;6015:4;5997:15;:22;:::i;:::-;6046:5;:20;5977:42;;-1:-1:-1;6046:20:84;;;;;6033:33;;6029:80;;6075:34;;;;;;;;;;;;;;6029:80;5967:149;5886:230;:::o;6409:714::-;6509:7;6528:12;6543:59;6575:5;6582:4;6588:6;6596:5;6543:31;:59::i;:::-;6613:27;;;;;;;;;-1:-1:-1;6613:27:84;;;;;;;;;;;;;;;;;6528:74;;-1:-1:-1;6613:27:84;6654:15;:39;6650:386;;;6816:22;6859:6;:21;;;6841:39;;:15;:39;;;;:::i;:::-;6816:64;;6915:12;6898:14;:29;6894:132;;;6954:57;;;;;;;;722:25:456;;;6998:12:84;763:18:456;;;756:34;695:18;;6954:57:84;548:248:456;6894:132:84;6695:341;6650:386;7052:64;7077:8;7087:6;:12;;;7052:64;;7101:5;7108:7;7052:24;:64::i;:::-;7045:71;6409:714;-1:-1:-1;;;;;;6409:714:84:o;1257:269:46:-;1412:16;;;1426:1;1412:16;;;;;;;;;1364:7;;;;1412:16;;;;;;;;;;;;-1:-1:-1;1412:16:46;1381:47;;1451:10;1434:11;1446:1;1434:14;;;;;;;;:::i;:::-;;;;;;:27;;;;;1474:44;1506:11;1474:31;:44::i;:::-;1519:1;1474:47;;;;;;;;:::i;:::-;;;;;;;1467:54;;;1257:269;;;:::o;2450:1169:43:-;2519:7;2824:20;2686:37;2690:14;2686:37;2673:51;2799:46;;2757:96;;2864:81;;2908:30;;;;;;;;;;;;;;2864:81;3027:31;3111:8;2230:2:44;3068:58:43;3064:111;;;3143:25;;;;;;;;;;;;;;3064:111;-1:-1:-1;3247:61:43;3251:14;3247:61;3225:91;3327:30;1479:1:44;3360:63:43;1427:1:44;3360:63:43;;;;:::i;:::-;:90;;;;:::i;:::-;3327:123;-1:-1:-1;3510:8:43;3460:47;1129:1:44;3327:123:43;3460:47;:::i;:::-;:65;3456:124;;;3542:31;;;;;;;;;;;;;;3701:525;3815:24;;3898:41;524:2:44;3898:22:43;:41;:::i;:::-;3849:90;-1:-1:-1;3990:8:43;3949:56;;3945:109;;;4022:25;;;;;;;;;;;;;;3945:109;4123:14;4119:59;4097:89;;3701:525;-1:-1:-1;;3701:525:43:o;2054:392::-;2142:7;2165:23;2196:34;2239:63;2279:22;2239:39;:63::i;:::-;2157:145;;-1:-1:-1;2157:145:43;-1:-1:-1;1926:2:44;2347:49:43;2157:145;1300:2:44;2347:49:43;:::i;:::-;2322:75;;:15;:75;:::i;:::-;:119;;;;:::i;:::-;2309:132;2054:392;-1:-1:-1;;;;2054:392:43:o;1547:134:47:-;1620:7;1642:34;1669:6;1642:26;:34::i;1829:368:89:-;1974:4;2011;1998:17;;:9;:17;;;:40;;;;;2033:5;2019:19;;:10;:19;;;1998:40;1994:58;;;-1:-1:-1;2047:5:89;2040:12;;1994:58;2079:5;2066:18;;:9;:18;;;:40;;;;;2102:4;2088:18;;:10;:18;;;2066:40;2062:57;;;-1:-1:-1;2115:4:89;2108:11;;2062:57;2136:54;;;;;6144:42:456;6213:15;;;2136:54:89;;;6195:34:456;6265:15;;6245:18;;;6238:43;6107:18;;2136:54:89;5960:327:456;3090:645:89;3224:7;470:66;3268:38;;3359:3;3336:26;;;3372:357;;;;3471:73;3500:8;3510:9;3521:22;3534:9;3521:10;:22;:::i;:::-;3471:28;:73::i;:::-;3464:80;;;;;;3372:357;3645:73;3674:8;3684:22;3697:9;3684:10;:22;:::i;:::-;3708:9;3645:28;:73::i;2373:206:46:-;2491:16;2524:50;2562:11;2524:37;:50::i;5035:1026:43:-;5165:23;;;;;5515:45;1026:2:44;5515:36:43;:45;:::i;:::-;5482:78;-1:-1:-1;5566:22:43;5591:62;5611:41;524:2:44;5482:78:43;5611:41;:::i;:::-;5591:8;;:19;:62::i;:::-;5696:28;;;-1:-1:-1;5566:87:43;-1:-1:-1;5795:40:43;5566:87;1183:1:44;5795:18:43;:40::i;:::-;5960:34;;;;;;5889:28;;6000:56;;;-1:-1:-1;5960:34:43;;-1:-1:-1;;;;;5035:1026:43:o;448:391:50:-;513:7;532:3;:10;546:1;532:15;528:73;;564:30;;;;;;;;;;;;;;528:73;606:9;611:3;606:4;:9::i;:::-;621:19;656:1;643:3;:10;:14;;;;:::i;:::-;621:36;;680:1;667:3;:10;:14;;;;:::i;:::-;685:1;667:19;663:172;;696:11;710:52;723:3;727:15;741:1;727:11;:15;:::i;:::-;723:20;;;;;;;;:::i;:::-;;;;;;;745:3;749:11;745:16;;;;;;;;:::i;:::-;;;;;;;710:12;:52::i;:::-;696:66;-1:-1:-1;777:7:50;783:1;696:66;777:7;:::i;663:172::-;812:3;816:11;812:16;;;;;;;;:::i;20285:3569:52:-;20897:9;;;20995:6;20904:1;20901;20982:20;21110:14;;;21098:27;;21090:36;;;21211:278;;21257:1;21247:153;;21299:10;21293:4;21286:24;21373:4;21367;21360:18;21247:153;-1:-1:-1;21431:14:52;;;21466:5;;21211:278;21610:2;21607:1;21604:9;21594:149;;21650:10;21644:4;21637:24;21720:4;21714;21707:18;21594:149;22000:1;21997;21994;21987:15;22148:1;22144:9;;;22137:17;;22239:9;;;;;23559:13;;;23551:22;;;23583:9;;;;23579:17;;;23598:1;23575:25;23547:54;23635:14;;23631:22;23515:164;22614:1;22621;22617:9;;22610:17;;22896:11;;;22889:19;;22880:29;22969:11;;;22962:19;;22953:29;23043:11;;;23036:19;;23027:29;23117:11;;;23110:19;;23101:29;23191:11;;;23184:19;;23175:29;23767:11;;;23760:19;;;23751:29;23273:529;20285:3569;;;;;:::o;3834:2023:45:-;3946:16;4032:48;4097:11;:18;4083:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4083:33:45;;4032:84;;4122:44;4183:11;:18;4169:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4169:33:45;;4122:80;;4208:37;4264:11;:18;4248:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4208:75;;4294:9;4289:345;4313:11;:18;4309:1;:22;4289:345;;;4585:42;;;414:1:48;4585:42:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4585:42:45;4561:18;4580:1;4561:21;;;;;;;;:::i;:::-;;;;;;;;;;:66;4333:3;;4289:345;;;;4700:30;4733:36;:34;:36::i;:::-;4700:69;;4775:25;4803:61;4841:22;4803:37;:61::i;:::-;4775:89;;;-1:-1:-1;4870:48:45;1129:1:44;4870:48:45;;:::i;:::-;5028:15;5022:22;4870:48;;-1:-1:-1;4967:18:45;5098:570;5152:17;5133:16;:36;5098:570;;;5264:27;5294:186;5323:11;5344:31;5385:27;5422:18;5450:22;5294:19;:186::i;:::-;5264:216;-1:-1:-1;5488:45:45;5264:216;5488:45;;:::i;:::-;5626:15;5619:35;;;5488:45;-1:-1:-1;;5171:18:45;;5098:570;;;;5779:73;5800:18;5820:31;5779:20;:73::i;:::-;5772:80;3834:2023;-1:-1:-1;;;;;;;;3834:2023:45:o;3122:96:23:-;3180:7;3206:5;3210:1;3206;:5;:::i;843:750:50:-;939:3;933:10;976:20;971:3;967:30;1048:16;1037:9;1033:32;1022:9;1018:48;1004:62;;1102:9;1073:510;1132:6;1123:7;1120:19;1073:510;;;1258:9;1227:348;1290:7;1281;1278:20;1227:348;;;1410:7;1404:14;1447:7;1441:14;1478:4;1472;1469:14;1466:99;;;1514:4;1505:7;1498:21;1548:4;1539:7;1532:21;1466:99;-1:-1:-1;;1335:16:50;1322:30;1227:348;;;-1:-1:-1;1174:16:50;1161:30;1073:510;;;1077:42;;;843:750;:::o;2755:96:23:-;2813:7;2839:5;2843:1;2839;:5;:::i;6655:4481:45:-;6927:7;6942:19;6976:23;7007:34;7050:63;7090:22;7050:39;:63::i;:::-;6968:145;;-1:-1:-1;6968:145:45;-1:-1:-1;7188:25:45;;;7276:26;7188:25;2084:2:44;7376:70:45;7396:49;1300:2:44;6968:145:45;7396:49;:::i;:::-;7376:15;;:19;:70::i;:::-;:124;;;;:::i;:::-;7350:150;-1:-1:-1;7579:31:45;7613:118;7642:88;1771:3:44;7642:22:45;:88;:::i;7613:118::-;7579:152;-1:-1:-1;7740:35:45;7778:87;7841:23;7807:31;1026:2:44;7807:22:45;:31;:::i;:::-;:57;;;;:::i;7778:87::-;7740:125;;7951:108;8026:23;7987:27;7951:108;:::i;:::-;7934:125;;8173:23;8150:20;8135:13;8131:40;8121:76;8107:90;;8274:23;8261:37;8239:59;;8308:231;;8549:342;8375:15;8369:22;;8402:23;;;8452:20;8508;;;;;8484:45;;;8606:14;;8443:30;8781:10;8761:6;8725:22;8699:104;8832:49;;;8549:342;-1:-1:-1;;;8549:342:45:o;:::-;8937:37;8955:18;8937:37;;:17;:37::i;:::-;9071:102;9114:10;9134:31;1026:2:44;9134:22:45;:31;:::i;:::-;9071:33;:102::i;:::-;9055:118;;9195:39;9220:13;9195:24;:39::i;:::-;9181:53;;;;7180:2061;;;;;;;9286:27;9321:22;9356;9351:1593;9401:15;9384:14;:32;9351:1593;;;9558:143;9605:22;9639:26;9677:14;9558:35;:143::i;:::-;9518:183;;-1:-1:-1;9518:183:45;-1:-1:-1;9728:23:45;9712:1224;9785:11;:18;9767:15;:36;9712:1224;;;9882:11;9894:15;9882:28;;;;;;;;:::i;:::-;;;;;;;9859:19;:51;9855:1071;;9926:34;9963:27;9991:15;9963:44;;;;;;;;:::i;:::-;;;;;;;9926:81;;10042:67;10069:26;10097:11;342:1:49;:13;;332:24;369:14;;;216:172;10042:67:45;10041:68;:224;;;;-1:-1:-1;414:1:48;10187:78:45;;:31;10219:15;10187:48;;;;;;;;:::i;:::-;;;;;;;:78;10041:224;10022:789;;;10344:31;10376:15;10344:48;;;;;;;;:::i;:::-;;;;;;:50;;;;;;;;:::i;:::-;;;;;10566:14;10442:18;10461:15;10442:35;;;;;;;;:::i;:::-;;;;;;;10546:1;10495:31;10527:15;10495:48;;;;;;;;:::i;:::-;;;;;;;:52;;;;:::i;:::-;10442:121;;;;;;;;:::i;:::-;;;;;;;;;;:138;193:1:49;:13;;183:24;;10636:27:45;10664:15;10636:44;;;;;;;;:::i;:::-;;;;;;:160;;;;;10022:789;10908:5;;;9855:1071;9815:17;;9712:1224;;;-1:-1:-1;9418:16:45;;9351:1593;;;;9278:1672;;11116:15;1300:2:44;11057:26:45;:49;;;;:::i;:::-;11056:75;;;;:::i;:::-;11012:119;;1926:2:44;11012:119:45;:::i;:::-;10999:132;6655:4481;-1:-1:-1;;;;;;;;;6655:4481:45:o;11605:862::-;11758:16;11782:33;11832:18;:25;11818:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11818:40:45;-1:-1:-1;11782:76:45;-1:-1:-1;414:1:48;11864:30:45;11931:502;11979:18;:25;11963:13;:41;11931:502;;;12084:22;12035:31;12067:13;12035:46;;;;;;;;:::i;:::-;;;;;;;:71;12031:229;;;12170:31;12202:13;12170:46;;;;;;;;:::i;:::-;;;;;;;12228:22;12125:126;;;;;;;;;;;722:25:456;;;778:2;763:18;;756:34;710:2;695:18;;548:248;12031:229:45;12267:36;12306:50;12322:18;12341:13;12322:33;;;;;;;;:::i;:::-;;;;;;;12306:15;:50::i;:::-;12267:89;;12398:28;12364:16;12381:13;12364:31;;;;;;;;:::i;:::-;;;;;;;;;;:62;-1:-1:-1;12006:15:45;;11931:502;;;-1:-1:-1;12446:16:45;;11605:862;-1:-1:-1;;;;11605:862:45:o;3465:96:23:-;3523:7;3549:5;3553:1;3549;:5;:::i;164:710:51:-;672:46;839:30;;290:7;839:30;;;570:14;839:30;;;;;;6836:25:456;;;404:14:51;400:52;;;672:46;;;738:39;730:48;;6877:18:456;;;6870:45;;;464:39:51;;6931:18:456;;;6924:34;;;539:46:51;;597:39;6974:18:456;;;6967:34;;;290:7:51;;464:39;;839:30;;6808:19:456;;839:30:51;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;839:30:51;;;;;;164:710;-1:-1:-1;;;;;;;164:710:51:o;4230:801:43:-;4431:27;;;4527:74;1926:2:44;4527:36:43;:74;:::i;:::-;4490:111;-1:-1:-1;4607:31:43;4641:124;4679:80;4705:52;1300:2:44;4705:29:43;:52;:::i;:::-;4680:18;4684:14;4680:1;:18;:::i;:::-;4679:24;;:80::i;:::-;4641:26;;:30;:124::i;:::-;4607:158;-1:-1:-1;4771:31:43;4805:44;:8;4607:158;4805:19;:44::i;:::-;4895:37;;;4999:20;4970:50;;;4957:64;;-1:-1:-1;4230:801:43;-1:-1:-1;;;;;;;4230:801:43:o;14:196:456:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;215:328;292:6;300;308;361:2;349:9;340:7;336:23;332:32;329:52;;;377:1;374;367:12;329:52;413:9;400:23;390:33;;442:38;476:2;465:9;461:18;442:38;:::i;:::-;432:48;;499:38;533:2;522:9;518:18;499:38;:::i;:::-;489:48;;215:328;;;;;:::o;801:607::-;913:4;942:2;971;960:9;953:21;1003:6;997:13;1046:6;1041:2;1030:9;1026:18;1019:34;1071:1;1081:140;1095:6;1092:1;1089:13;1081:140;;;1190:14;;;1186:23;;1180:30;1156:17;;;1175:2;1152:26;1145:66;1110:10;;1081:140;;;1085:3;1270:1;1265:2;1256:6;1245:9;1241:22;1237:31;1230:42;1399:2;1329:66;1324:2;1316:6;1312:15;1308:88;1297:9;1293:104;1289:113;1281:121;;;;801:607;;;;:::o;1413:280::-;1471:6;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1579:9;1566:23;1629:14;1622:5;1618:26;1611:5;1608:37;1598:65;;1659:1;1656;1649:12;1698:186;1757:6;1810:2;1798:9;1789:7;1785:23;1781:32;1778:52;;;1826:1;1823;1816:12;1778:52;1849:29;1868:9;1849:29;:::i;3006:184::-;3058:77;3055:1;3048:88;3155:4;3152:1;3145:15;3179:4;3176:1;3169:15;3195:1174;3279:6;3310:2;3353;3341:9;3332:7;3328:23;3324:32;3321:52;;;3369:1;3366;3359:12;3321:52;3409:9;3396:23;3438:18;3479:2;3471:6;3468:14;3465:34;;;3495:1;3492;3485:12;3465:34;3533:6;3522:9;3518:22;3508:32;;3578:7;3571:4;3567:2;3563:13;3559:27;3549:55;;3600:1;3597;3590:12;3549:55;3636:2;3623:16;3658:2;3654;3651:10;3648:36;;;3664:18;;:::i;:::-;3710:2;3707:1;3703:10;3742:2;3736:9;3801:66;3796:2;3792;3788:11;3784:84;3776:6;3772:97;3919:6;3907:10;3904:22;3899:2;3887:10;3884:18;3881:46;3878:72;;;3930:18;;:::i;:::-;3966:2;3959:22;4016:18;;;4050:15;;;;-1:-1:-1;4092:11:456;;;4088:20;;;4120:19;;;4117:39;;;4152:1;4149;4142:12;4117:39;4176:11;;;;4196:142;4212:6;4207:3;4204:15;4196:142;;;4278:17;;4266:30;;4229:12;;;;4316;;;;4196:142;;4374:180;4433:6;4486:2;4474:9;4465:7;4461:23;4457:32;4454:52;;;4502:1;4499;4492:12;4454:52;-1:-1:-1;4525:23:456;;4374:180;-1:-1:-1;4374:180:456:o;4559:184::-;4611:77;4608:1;4601:88;4708:4;4705:1;4698:15;4732:4;4729:1;4722:15;4748:128;4815:9;;;4836:11;;;4833:37;;;4850:18;;:::i;5154:125::-;5219:9;;;5240:10;;;5237:36;;;5253:18;;:::i;5284:184::-;5336:77;5333:1;5326:88;5433:4;5430:1;5423:15;5457:4;5454:1;5447:15;5473:120;5513:1;5539;5529:35;;5544:18;;:::i;:::-;-1:-1:-1;5578:9:456;;5473:120::o;5598:184::-;5650:77;5647:1;5640:88;5747:4;5744:1;5737:15;5771:4;5768:1;5761:15;5787:168;5860:9;;;5891;;5908:15;;;5902:22;;5888:37;5878:71;;5929:18;;:::i;6292:112::-;6324:1;6350;6340:35;;6355:18;;:::i;:::-;-1:-1:-1;6389:9:456;;6292:112::o;6409:195::-;6448:3;6479:66;6472:5;6469:77;6466:103;;6549:18;;:::i;:::-;-1:-1:-1;6596:1:456;6585:13;;6409:195::o',
    linkReferences: {},
    immutableReferences: {
      '21162': [
        { start: 489, length: 32 },
        { start: 2618, length: 32 },
      ],
      '21165': [
        { start: 746, length: 32 },
        { start: 2652, length: 32 },
      ],
      '21168': [
        { start: 436, length: 32 },
        { start: 1424, length: 32 },
      ],
      '21171': [{ start: 823, length: 32 }],
      '21174': [
        { start: 707, length: 32 },
        { start: 1107, length: 32 },
        { start: 1192, length: 32 },
        { start: 2816, length: 32 },
        { start: 2901, length: 32 },
      ],
      '21178': [{ start: 2985, length: 32 }],
    },
  },
  methodIdentifiers: {
    'aggregateValues(uint256[])': 'b24ebfcc',
    'base()': '5001f3b5',
    'cache()': '60c7d295',
    'extractTimestampsAndAssertAllAreEqual()': '55a547d5',
    'feedDecimals()': 'c23953d0',
    'feedId()': '4a643499',
    'getAuthorisedSignerIndex(address)': '3ce142f5',
    'getDataServiceId()': 'c274583a',
    'getQuote(uint256,address,address)': 'ae68676c',
    'getQuotes(uint256,address,address)': '0579e61f',
    'getUniqueSignersThreshold()': 'f90c4924',
    'maxStaleness()': '87cf4696',
    'name()': '06fdde03',
    'quote()': '999b93af',
    'updatePrice(uint48)': '259b0ec5',
    'validateTimestamp(uint256)': 'f50b2efe',
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_base","type":"address"},{"internalType":"address","name":"_quote","type":"address"},{"internalType":"bytes32","name":"_feedId","type":"bytes32"},{"internalType":"uint8","name":"_feedDecimals","type":"uint8"},{"internalType":"uint256","name":"_maxStaleness","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CalldataMustHaveValidPayload","type":"error"},{"inputs":[],"name":"CalldataOverOrUnderFlow","type":"error"},{"inputs":[],"name":"CanNotPickMedianOfEmptyArray","type":"error"},{"inputs":[],"name":"DataPackageTimestampMustNotBeZero","type":"error"},{"inputs":[],"name":"DataPackageTimestampsMustBeEqual","type":"error"},{"inputs":[],"name":"EachSignerMustProvideTheSameValue","type":"error"},{"inputs":[],"name":"EmptyCalldataPointersArr","type":"error"},{"inputs":[],"name":"GetDataServiceIdNotImplemented","type":"error"},{"inputs":[],"name":"IncorrectUnsignedMetadataSize","type":"error"},{"inputs":[{"internalType":"uint256","name":"receivedSignersCount","type":"uint256"},{"internalType":"uint256","name":"requiredSignersCount","type":"uint256"}],"name":"InsufficientNumberOfUniqueSigners","type":"error"},{"inputs":[],"name":"InvalidCalldataPointer","type":"error"},{"inputs":[],"name":"PriceOracle_InvalidAnswer","type":"error"},{"inputs":[],"name":"PriceOracle_InvalidConfiguration","type":"error"},{"inputs":[{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"}],"name":"PriceOracle_NotSupported","type":"error"},{"inputs":[],"name":"PriceOracle_Overflow","type":"error"},{"inputs":[{"internalType":"uint256","name":"staleness","type":"uint256"},{"internalType":"uint256","name":"maxStaleness","type":"uint256"}],"name":"PriceOracle_TooStale","type":"error"},{"inputs":[],"name":"RedstonePayloadMustHaveAtLeastOneDataPackage","type":"error"},{"inputs":[{"internalType":"address","name":"receivedSigner","type":"address"}],"name":"SignerNotAuthorised","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"priceTimestamp","type":"uint256"}],"name":"CacheUpdated","type":"event"},{"inputs":[{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"aggregateValues","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"base","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cache","outputs":[{"internalType":"uint208","name":"price","type":"uint208"},{"internalType":"uint48","name":"priceTimestamp","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"extractTimestampsAndAssertAllAreEqual","outputs":[{"internalType":"uint256","name":"extractedTimestamp","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"feedDecimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feedId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"signerAddress","type":"address"}],"name":"getAuthorisedSignerIndex","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDataServiceId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"inAmount","type":"uint256"},{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"}],"name":"getQuote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"inAmount","type":"uint256"},{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"}],"name":"getQuotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniqueSignersThreshold","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxStaleness","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quote","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint48","name":"timestamp","type":"uint48"}],"name":"updatePrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timestampMillis","type":"uint256"}],"name":"validateTimestamp","outputs":[],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Euler Labs (https://www.eulerlabs.com/)","custom:security-contact":"security@euler.xyz","errors":{"PriceOracle_NotSupported(address,address)":[{"params":{"base":"The address of the base asset.","quote":"The address of the quote asset."}}],"PriceOracle_TooStale(uint256,uint256)":[{"params":{"maxStaleness":"The maximum time elapsed since the last price update.","staleness":"The time elapsed since the price was updated."}}]},"events":{"CacheUpdated(uint256,uint256)":{"params":{"price":"The Redstone price.","priceTimestamp":"The timestamp contained within the price data packages."}}},"kind":"dev","methods":{"aggregateValues(uint256[])":{"details":"This function may be overridden by the child consumer contract. It should aggregate values from different signers to a single uint value. By default, it calculates the median value","params":{"values":"An array of uint256 values from different signers"},"returns":{"_0":"Result of the aggregation in the form of a single number"}},"constructor":{"details":"Since Redstone prices are verified locally, callers can pass data up to `maxStaleness` seconds old. If `maxStaleness` is too short, the update transaction may revert.","params":{"_base":"The address of the base asset corresponding to the feed.","_feedDecimals":"The decimals of the price feed.","_feedId":"The identifier of the price feed.","_maxStaleness":"The maximum allowed age of the Redstone price in `updatePrice`.","_quote":"The address of the quote asset corresponding to the feed."}},"getDataServiceId()":{"details":"This function must be implemented by the child consumer contract. It should return dataServiceId which DataServiceWrapper will use if not provided explicitly . If not overridden, value will always have to be provided explicitly in DataServiceWrapper.","returns":{"_0":"dataServiceId being consumed by contract"}},"getQuote(uint256,address,address)":{"params":{"base":"The token that is being priced.","inAmount":"The amount of `base` to convert.","quote":"The token that is the unit of account."},"returns":{"_0":"The amount of `quote` that is equivalent to `inAmount` of `base`."}},"getQuotes(uint256,address,address)":{"details":"Does not support true bid/ask pricing.","params":{"base":"The token that is being priced.","inAmount":"The amount of `base` to convert.","quote":"The token that is the unit of account."},"returns":{"_0":"The amount of `quote` you would get for selling `inAmount` of `base`.","_1":"The amount of `quote` you would spend for buying `inAmount` of `base`."}},"getUniqueSignersThreshold()":{"details":"This function should be overridden by the child consumer contract.","returns":{"_0":"The minimum required value of unique authorised signers"}},"updatePrice(uint48)":{"details":"Redstone payload must be appended at the end of the abi-encoded calldata to this function. Decoding and validation inherited from `PrimaryProdDataServiceConsumerBase`. The price timestamp must lie in the defined acceptance range relative to `block.timestamp`. Note: The Redstone SDK allows the price timestamp to be up to 1 minute in the future.","params":{"timestamp":"The expected timestamp of the Redstone payload. All data packages must have this timestamp."}},"validateTimestamp(uint256)":{"details":"Internally called in `updatePrice` for every signed data package in the payload.","params":{"timestampMillis":"Data package timestamp in milliseconds."}}},"stateVariables":{"cache":{"details":"The cache is updated in `updatePrice`."},"feedDecimals":{"details":"Redstone price feeds have 8 decimals by default, however certain exceptions exist."},"feedId":{"details":"See https://app.redstone.finance/#/app/data-services/redstone-primary-prod"},"maxStaleness":{"details":"Compares `block.timestamp` against the timestamp of the Redstone data package."},"name":{"return":"The name of the oracle.","returns":{"_0":"The name of the oracle."}}},"title":"RedstoneCoreOracle","version":1},"userdoc":{"errors":{"PriceOracle_InvalidAnswer()":[{"notice":"The external feed returned an invalid answer."}],"PriceOracle_InvalidConfiguration()":[{"notice":"The configuration parameters for the PriceOracle are invalid."}],"PriceOracle_NotSupported(address,address)":[{"notice":"The base/quote path is not supported."}],"PriceOracle_Overflow()":[{"notice":"The quote cannot be completed due to overflow."}],"PriceOracle_TooStale(uint256,uint256)":[{"notice":"The price is too stale."}]},"events":{"CacheUpdated(uint256,uint256)":{"notice":"The cache timestamp was updated."}},"kind":"user","methods":{"base()":{"notice":"The address of the base asset corresponding to the feed."},"cache()":{"notice":"The last updated Redstone price and its timestamp."},"constructor":{"notice":"Deploy a RedstoneCoreOracle."},"feedDecimals()":{"notice":"The decimals of the Redstone price feed."},"feedId()":{"notice":"The identifier of the price feed."},"getQuote(uint256,address,address)":{"notice":"One-sided price: How much quote token you would get for inAmount of base token, assuming no price spread."},"getQuotes(uint256,address,address)":{"notice":"Two-sided price: How much quote token you would get/spend for selling/buying inAmount of base token."},"maxStaleness()":{"notice":"The maximum allowed age of the Redstone price."},"name()":{"notice":"Get the name of the oracle."},"quote()":{"notice":"The address of the quote asset corresponding to the feed."},"updatePrice(uint48)":{"notice":"Ingest a Redstone payload, decode and verify it, and cache the price in storage."},"validateTimestamp(uint256)":{"notice":"Validate the timestamp of a Redstone signed price data package."}},"notice":"Adapter for Redstone pull-based price feeds.","version":1}},"settings":{"compilationTarget":{"lib/euler-price-oracle/src/adapter/redstone/RedstoneCoreOracle.sol":"RedstoneCoreOracle"},"evmVersion":"cancun","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":20000},"remappings":[":@axiom-crypto/v2-periphery/=lib/euler-price-oracle/lib/axiom-std/lib/axiom-v2-periphery/src/",":@openzeppelin-upgradeable/=lib/euler-earn/lib/openzeppelin-contracts-upgradeable/contracts/",":@openzeppelin/=lib/openzeppelin-contracts/contracts/",":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":@pendle/core-v2/=lib/euler-price-oracle/lib/pendle-core-v2-public/contracts/",":@pyth/=lib/euler-price-oracle/lib/pyth-sdk-solidity/",":@redstone/evm-connector/=lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/",":@solady/=lib/euler-price-oracle/lib/solady/src/",":@uniswap/v3-core/=lib/euler-price-oracle/lib/v3-core/",":@uniswap/v3-periphery/=lib/euler-price-oracle/lib/v3-periphery/",":ERC4626/=lib/euler-earn/lib/properties/lib/ERC4626/contracts/",":axiom-std/=lib/euler-price-oracle/lib/axiom-std/src/",":axiom-v2-periphery/=lib/euler-price-oracle/lib/axiom-v2-periphery/src/",":crytic-properties/=lib/euler-earn/lib/properties/contracts/",":ds-test/=lib/ethereum-vault-connector/lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",":ethereum-vault-connector/=lib/ethereum-vault-connector/src/",":euler-earn/=lib/euler-earn/src/",":euler-price-oracle-test/=lib/euler-price-oracle/test/",":euler-price-oracle/=lib/euler-price-oracle/src/",":euler-vault-kit/=lib/euler-vault-kit/src/",":evc/=lib/ethereum-vault-connector/src/",":evk-test/=lib/euler-vault-kit/test/",":evk/=lib/euler-vault-kit/src/",":fee-flow/=lib/fee-flow/src/",":forge-gas-snapshot/=lib/euler-vault-kit/lib/permit2/lib/forge-gas-snapshot/src/",":forge-std/=lib/forge-std/src/",":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/",":native-token-transfers/=lib/native-token-transfers/evm/src/",":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",":openzeppelin/=lib/ethereum-vault-connector/lib/openzeppelin-contracts/contracts/",":pendle-core-v2-public/=lib/euler-price-oracle/lib/pendle-core-v2-public/contracts/",":permit2/=lib/euler-vault-kit/lib/permit2/",":properties/=lib/euler-earn/lib/properties/contracts/",":pyth-sdk-solidity/=lib/euler-price-oracle/lib/pyth-sdk-solidity/",":redstone-oracles-monorepo/=lib/euler-price-oracle/lib/",":reward-streams/=lib/reward-streams/src/",":solady/=lib/euler-price-oracle/lib/solady/src/",":solidity-bytes-utils/=lib/native-token-transfers/evm/lib/solidity-bytes-utils/contracts/",":solmate/=lib/fee-flow/lib/solmate/src/",":v3-core/=lib/euler-price-oracle/lib/v3-core/contracts/",":v3-periphery/=lib/euler-price-oracle/lib/v3-periphery/contracts/",":wormhole-solidity-sdk/=lib/native-token-transfers/evm/lib/wormhole-solidity-sdk/src/","lib/euler-price-oracle:@openzeppelin/contracts/=lib/euler-price-oracle/lib/openzeppelin-contracts/contracts/","lib/native-token-transfers/evm:openzeppelin-contracts/contracts/=lib/native-token-transfers/evm/lib/openzeppelin-contracts/contracts/"]},"sources":{"lib/euler-price-oracle/lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol":{"keccak256":"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a","license":"MIT","urls":["bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b","dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"]},"lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/CalldataExtractor.sol":{"keccak256":"0x7a381362d355b7c2eff8cf9a2b0e0836d7b7c950b32f0fb65f1e4fc43c0c7379","license":"BUSL-1.1","urls":["bzz-raw://2e395c76dcdf725a268103052be7127ea2da7b7e394a1abb267192a87dc1bd2b","dweb:/ipfs/QmdAvALKcVDYXuJTpy54caPGpVGsZZqiJ2Emesr7Pt6JLj"]},"lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/RedstoneConstants.sol":{"keccak256":"0x82ab78ed59f4a811f5ab5c32064099235d753f98df42c087476ddabbf0348f21","license":"BUSL-1.1","urls":["bzz-raw://7c4b78b95bff4fbe0c57747c812c22c0f3b9581f4cf2cbf8af0c21aad6ca880f","dweb:/ipfs/QmdRBJUpdPUZPF4mwy6M4EivSQsWBvH4qbmtnaau3ft9V3"]},"lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/RedstoneConsumerBase.sol":{"keccak256":"0x9f67e176ef49bc988486de896bddce913dc0679b6f3f2cf9fd9803e683927d42","license":"BUSL-1.1","urls":["bzz-raw://2497ae8faafbb5bc2f5b14e9ce77f94687842472a4b69416cfd73465b315f4f8","dweb:/ipfs/QmUAmQqsoUGNpsEpMGFUMvRA1n2LWMifgCk2VenuzKok9d"]},"lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol":{"keccak256":"0xe8e70ed8bb3efc527dccaf5919587c7ff3980836256d7d8db8f632721a3cf956","license":"BUSL-1.1","urls":["bzz-raw://550168f845b478dbb81f3f5dcf71cc61d64558a6dd676d95d2c46008b5e3e380","dweb:/ipfs/Qmc2F5p3NdVubj733YqBGHyhA4TBnvEbqRRadkedboKw8Y"]},"lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/RedstoneDefaultsLib.sol":{"keccak256":"0xe39ee1618d15944d6f44918f02f71d0d604fb678dbdbf36ca1eeecc86858ff25","license":"BUSL-1.1","urls":["bzz-raw://2bcb45b6abee6ba18742a9e4374afc04f4be16de11d154ca846e96a37f3b6e73","dweb:/ipfs/QmYUqJyfdj7YwvGthGKxzryC2mGQGTGZy7SYZZt7m7w3oo"]},"lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/data-services/PrimaryProdDataServiceConsumerBase.sol":{"keccak256":"0x355c0c729aa063b77ad7c35d65087330711eeaa03a83786d3071213532c5824f","license":"BUSL-1.1","urls":["bzz-raw://8765f25b61093c4f507c795589cc67773ef32c375d061a4197453063dc69defd","dweb:/ipfs/QmQVC2uPWDoKotQV9WL7qXMjqBDnXUEBrub1NrHgLRbNmQ"]},"lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/libs/BitmapLib.sol":{"keccak256":"0x9762198cae997eebad303a7a43a6133908646ed30811285085c9ea9cbd2a5e07","license":"MIT","urls":["bzz-raw://29f56e08f523a11d5f1ab083f5c613e7654a74613b2270f9e8860fa493bf2ceb","dweb:/ipfs/QmUpD9U3GV7ZpjFEVvqSXGYfvwkBdeV5CoTiH1EzH8woJa"]},"lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/libs/NumericArrayLib.sol":{"keccak256":"0x9b1a3a433a450cbe90e85801ddf891ab26deeda02d45a2d67e24443cdc33e764","license":"MIT","urls":["bzz-raw://967761b57c78ea600ba6efa5a49cdd0c020339596871c22ada9d309eaa4d8acd","dweb:/ipfs/QmUeGHZkXdovDYwhwUKj5pPfdS4hVv68tzhjVXieWCQtUt"]},"lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/libs/SignatureLib.sol":{"keccak256":"0x06037b440e5eab52d550718543c463da00ac7231f303a503178ad5191e154310","license":"MIT","urls":["bzz-raw://7bfb27ed76efa93423e40c276d2caefeab957561946f808169511b87d127e4c4","dweb:/ipfs/QmT3wt6FhAf7PFDZ1Z2mNx1671Yudz7UCjqnoFkEKCgt92"]},"lib/euler-price-oracle/lib/solady/src/utils/FixedPointMathLib.sol":{"keccak256":"0xd890a3c47fd08d2d663890af4561045edc531ca1d7687bbf9dd7a2d1f15f1a3e","license":"MIT","urls":["bzz-raw://b8a4777858cb1c9ffa53f9c1f115d6e9c9af547cf02e06ab9e175da373b46da4","dweb:/ipfs/QmQSKB7DZnatj6eJtugzUvKxrxFrdzFwRMJxQpsTbtup1P"]},"lib/euler-price-oracle/src/adapter/BaseAdapter.sol":{"keccak256":"0x1ca090708d2c03edd58fdb6c22638fce41e93c5f4021b382940d088ae49c81e3","license":"GPL-2.0-or-later","urls":["bzz-raw://d00bbb80bdb34321bea2055bcb1364cd860e7662ec513254ffa61698c09526b4","dweb:/ipfs/QmeCE976ZZy6oLCP2emgBjvx8vJxKvoEJ4yF65QKLjQJDo"]},"lib/euler-price-oracle/src/adapter/redstone/RedstoneCoreOracle.sol":{"keccak256":"0x2de496eb13975b4e1de4789e4e2753bb3993109bfc4b4877c772115e86be8392","license":"GPL-2.0-or-later","urls":["bzz-raw://2ff742a00e9c76a76fa7c909591df50c46e0d4c293511bc912b8453ac9c1c50e","dweb:/ipfs/QmXAvKdNc8v1vzigWip2ZwT5Pie9zmYXah9QXnkh1pmWHQ"]},"lib/euler-price-oracle/src/interfaces/IPriceOracle.sol":{"keccak256":"0x03567dd4084dc74a9e2f9eeffce4d9047989b0d2122820716c3bc75891484308","license":"GPL-2.0-or-later","urls":["bzz-raw://23965a79475c85a0a8a3a137a76424f60debd9e592bc9127d463392fad7df30f","dweb:/ipfs/QmPc1bV3kZ3ynLGTqG6xRbZ3E5AstYdfipXbysSqYGhJYA"]},"lib/euler-price-oracle/src/lib/Errors.sol":{"keccak256":"0x2551662bcef8d4a5cb7cdc8cd404f28c726af1bcfe7ef371b22d53322a932698","license":"GPL-2.0-or-later","urls":["bzz-raw://1641b99e0c907950448d62205fc23b5550c44899ba8c0bc0274a6b0a501981b9","dweb:/ipfs/QmZvDhw4Ao3m8jRjNjT8Xq8imCPecJyytUTtCUjt5RoB4v"]},"lib/euler-price-oracle/src/lib/ScaleUtils.sol":{"keccak256":"0x9bd1ac81aab20c82eacbdda286996571530cdb1505d74299b56fd51fef0be9f8","license":"GPL-2.0-or-later","urls":["bzz-raw://5be0485ea15aff9b321012c1a1102425b7c63375d4a378d2a81ae55f60038bf3","dweb:/ipfs/QmZwg2KtMWzjc6PMxJ98iTYcEVj8Bbs8YdNQNNHRq3pwfM"]},"lib/forge-std/src/interfaces/IERC20.sol":{"keccak256":"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947","license":"MIT","urls":["bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7","dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"]}},"version":1}',
  metadata: {
    compiler: { version: '0.8.24+commit.e11b9ed9' },
    language: 'Solidity',
    output: {
      abi: [
        {
          inputs: [
            { internalType: 'address', name: '_base', type: 'address' },
            { internalType: 'address', name: '_quote', type: 'address' },
            { internalType: 'bytes32', name: '_feedId', type: 'bytes32' },
            { internalType: 'uint8', name: '_feedDecimals', type: 'uint8' },
            { internalType: 'uint256', name: '_maxStaleness', type: 'uint256' },
          ],
          stateMutability: 'nonpayable',
          type: 'constructor',
        },
        { inputs: [], type: 'error', name: 'CalldataMustHaveValidPayload' },
        { inputs: [], type: 'error', name: 'CalldataOverOrUnderFlow' },
        { inputs: [], type: 'error', name: 'CanNotPickMedianOfEmptyArray' },
        {
          inputs: [],
          type: 'error',
          name: 'DataPackageTimestampMustNotBeZero',
        },
        { inputs: [], type: 'error', name: 'DataPackageTimestampsMustBeEqual' },
        {
          inputs: [],
          type: 'error',
          name: 'EachSignerMustProvideTheSameValue',
        },
        { inputs: [], type: 'error', name: 'EmptyCalldataPointersArr' },
        { inputs: [], type: 'error', name: 'GetDataServiceIdNotImplemented' },
        { inputs: [], type: 'error', name: 'IncorrectUnsignedMetadataSize' },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'receivedSignersCount',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'requiredSignersCount',
              type: 'uint256',
            },
          ],
          type: 'error',
          name: 'InsufficientNumberOfUniqueSigners',
        },
        { inputs: [], type: 'error', name: 'InvalidCalldataPointer' },
        { inputs: [], type: 'error', name: 'PriceOracle_InvalidAnswer' },
        { inputs: [], type: 'error', name: 'PriceOracle_InvalidConfiguration' },
        {
          inputs: [
            { internalType: 'address', name: 'base', type: 'address' },
            { internalType: 'address', name: 'quote', type: 'address' },
          ],
          type: 'error',
          name: 'PriceOracle_NotSupported',
        },
        { inputs: [], type: 'error', name: 'PriceOracle_Overflow' },
        {
          inputs: [
            { internalType: 'uint256', name: 'staleness', type: 'uint256' },
            { internalType: 'uint256', name: 'maxStaleness', type: 'uint256' },
          ],
          type: 'error',
          name: 'PriceOracle_TooStale',
        },
        {
          inputs: [],
          type: 'error',
          name: 'RedstonePayloadMustHaveAtLeastOneDataPackage',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'receivedSigner',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'SignerNotAuthorised',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'price',
              type: 'uint256',
              indexed: false,
            },
            {
              internalType: 'uint256',
              name: 'priceTimestamp',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'CacheUpdated',
          anonymous: false,
        },
        {
          inputs: [{ internalType: 'uint256[]', name: 'values', type: 'uint256[]' }],
          stateMutability: 'view',
          type: 'function',
          name: 'aggregateValues',
          outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'base',
          outputs: [{ internalType: 'address', name: '', type: 'address' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'cache',
          outputs: [
            { internalType: 'uint208', name: 'price', type: 'uint208' },
            { internalType: 'uint48', name: 'priceTimestamp', type: 'uint48' },
          ],
        },
        {
          inputs: [],
          stateMutability: 'pure',
          type: 'function',
          name: 'extractTimestampsAndAssertAllAreEqual',
          outputs: [
            {
              internalType: 'uint256',
              name: 'extractedTimestamp',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'feedDecimals',
          outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'feedId',
          outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        },
        {
          inputs: [{ internalType: 'address', name: 'signerAddress', type: 'address' }],
          stateMutability: 'view',
          type: 'function',
          name: 'getAuthorisedSignerIndex',
          outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'getDataServiceId',
          outputs: [{ internalType: 'string', name: '', type: 'string' }],
        },
        {
          inputs: [
            { internalType: 'uint256', name: 'inAmount', type: 'uint256' },
            { internalType: 'address', name: 'base', type: 'address' },
            { internalType: 'address', name: 'quote', type: 'address' },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'getQuote',
          outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        },
        {
          inputs: [
            { internalType: 'uint256', name: 'inAmount', type: 'uint256' },
            { internalType: 'address', name: 'base', type: 'address' },
            { internalType: 'address', name: 'quote', type: 'address' },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'getQuotes',
          outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'getUniqueSignersThreshold',
          outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'maxStaleness',
          outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'name',
          outputs: [{ internalType: 'string', name: '', type: 'string' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'quote',
          outputs: [{ internalType: 'address', name: '', type: 'address' }],
        },
        {
          inputs: [{ internalType: 'uint48', name: 'timestamp', type: 'uint48' }],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'updatePrice',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'timestampMillis',
              type: 'uint256',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'validateTimestamp',
        },
      ],
      devdoc: {
        kind: 'dev',
        methods: {
          'aggregateValues(uint256[])': {
            details:
              'This function may be overridden by the child consumer contract. It should aggregate values from different signers to a single uint value. By default, it calculates the median value',
            params: {
              values: 'An array of uint256 values from different signers',
            },
            returns: {
              _0: 'Result of the aggregation in the form of a single number',
            },
          },
          constructor: {
            details:
              'Since Redstone prices are verified locally, callers can pass data up to `maxStaleness` seconds old. If `maxStaleness` is too short, the update transaction may revert.',
            params: {
              _base: 'The address of the base asset corresponding to the feed.',
              _feedDecimals: 'The decimals of the price feed.',
              _feedId: 'The identifier of the price feed.',
              _maxStaleness: 'The maximum allowed age of the Redstone price in `updatePrice`.',
              _quote: 'The address of the quote asset corresponding to the feed.',
            },
          },
          'getDataServiceId()': {
            details:
              'This function must be implemented by the child consumer contract. It should return dataServiceId which DataServiceWrapper will use if not provided explicitly . If not overridden, value will always have to be provided explicitly in DataServiceWrapper.',
            returns: { _0: 'dataServiceId being consumed by contract' },
          },
          'getQuote(uint256,address,address)': {
            params: {
              base: 'The token that is being priced.',
              inAmount: 'The amount of `base` to convert.',
              quote: 'The token that is the unit of account.',
            },
            returns: {
              _0: 'The amount of `quote` that is equivalent to `inAmount` of `base`.',
            },
          },
          'getQuotes(uint256,address,address)': {
            details: 'Does not support true bid/ask pricing.',
            params: {
              base: 'The token that is being priced.',
              inAmount: 'The amount of `base` to convert.',
              quote: 'The token that is the unit of account.',
            },
            returns: {
              _0: 'The amount of `quote` you would get for selling `inAmount` of `base`.',
              _1: 'The amount of `quote` you would spend for buying `inAmount` of `base`.',
            },
          },
          'getUniqueSignersThreshold()': {
            details: 'This function should be overridden by the child consumer contract.',
            returns: {
              _0: 'The minimum required value of unique authorised signers',
            },
          },
          'updatePrice(uint48)': {
            details:
              'Redstone payload must be appended at the end of the abi-encoded calldata to this function. Decoding and validation inherited from `PrimaryProdDataServiceConsumerBase`. The price timestamp must lie in the defined acceptance range relative to `block.timestamp`. Note: The Redstone SDK allows the price timestamp to be up to 1 minute in the future.',
            params: {
              timestamp:
                'The expected timestamp of the Redstone payload. All data packages must have this timestamp.',
            },
          },
          'validateTimestamp(uint256)': {
            details:
              'Internally called in `updatePrice` for every signed data package in the payload.',
            params: {
              timestampMillis: 'Data package timestamp in milliseconds.',
            },
          },
        },
        version: 1,
      },
      userdoc: {
        kind: 'user',
        methods: {
          'base()': {
            notice: 'The address of the base asset corresponding to the feed.',
          },
          'cache()': {
            notice: 'The last updated Redstone price and its timestamp.',
          },
          constructor: { notice: 'Deploy a RedstoneCoreOracle.' },
          'feedDecimals()': {
            notice: 'The decimals of the Redstone price feed.',
          },
          'feedId()': { notice: 'The identifier of the price feed.' },
          'getQuote(uint256,address,address)': {
            notice:
              'One-sided price: How much quote token you would get for inAmount of base token, assuming no price spread.',
          },
          'getQuotes(uint256,address,address)': {
            notice:
              'Two-sided price: How much quote token you would get/spend for selling/buying inAmount of base token.',
          },
          'maxStaleness()': {
            notice: 'The maximum allowed age of the Redstone price.',
          },
          'name()': { notice: 'Get the name of the oracle.' },
          'quote()': {
            notice: 'The address of the quote asset corresponding to the feed.',
          },
          'updatePrice(uint48)': {
            notice:
              'Ingest a Redstone payload, decode and verify it, and cache the price in storage.',
          },
          'validateTimestamp(uint256)': {
            notice: 'Validate the timestamp of a Redstone signed price data package.',
          },
        },
        version: 1,
      },
    },
    settings: {
      remappings: [
        '@axiom-crypto/v2-periphery/=lib/euler-price-oracle/lib/axiom-std/lib/axiom-v2-periphery/src/',
        '@openzeppelin-upgradeable/=lib/euler-earn/lib/openzeppelin-contracts-upgradeable/contracts/',
        '@openzeppelin/=lib/openzeppelin-contracts/contracts/',
        '@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/',
        '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
        '@pendle/core-v2/=lib/euler-price-oracle/lib/pendle-core-v2-public/contracts/',
        '@pyth/=lib/euler-price-oracle/lib/pyth-sdk-solidity/',
        '@redstone/evm-connector/=lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/',
        '@solady/=lib/euler-price-oracle/lib/solady/src/',
        '@uniswap/v3-core/=lib/euler-price-oracle/lib/v3-core/',
        '@uniswap/v3-periphery/=lib/euler-price-oracle/lib/v3-periphery/',
        'ERC4626/=lib/euler-earn/lib/properties/lib/ERC4626/contracts/',
        'axiom-std/=lib/euler-price-oracle/lib/axiom-std/src/',
        'axiom-v2-periphery/=lib/euler-price-oracle/lib/axiom-v2-periphery/src/',
        'crytic-properties/=lib/euler-earn/lib/properties/contracts/',
        'ds-test/=lib/ethereum-vault-connector/lib/forge-std/lib/ds-test/src/',
        'erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/',
        'ethereum-vault-connector/=lib/ethereum-vault-connector/src/',
        'euler-earn/=lib/euler-earn/src/',
        'euler-price-oracle-test/=lib/euler-price-oracle/test/',
        'euler-price-oracle/=lib/euler-price-oracle/src/',
        'euler-vault-kit/=lib/euler-vault-kit/src/',
        'evc/=lib/ethereum-vault-connector/src/',
        'evk-test/=lib/euler-vault-kit/test/',
        'evk/=lib/euler-vault-kit/src/',
        'fee-flow/=lib/fee-flow/src/',
        'forge-gas-snapshot/=lib/euler-vault-kit/lib/permit2/lib/forge-gas-snapshot/src/',
        'forge-std/=lib/forge-std/src/',
        'halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/',
        'native-token-transfers/=lib/native-token-transfers/evm/src/',
        'openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/',
        'openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/',
        'openzeppelin/=lib/ethereum-vault-connector/lib/openzeppelin-contracts/contracts/',
        'pendle-core-v2-public/=lib/euler-price-oracle/lib/pendle-core-v2-public/contracts/',
        'permit2/=lib/euler-vault-kit/lib/permit2/',
        'properties/=lib/euler-earn/lib/properties/contracts/',
        'pyth-sdk-solidity/=lib/euler-price-oracle/lib/pyth-sdk-solidity/',
        'redstone-oracles-monorepo/=lib/euler-price-oracle/lib/',
        'reward-streams/=lib/reward-streams/src/',
        'solady/=lib/euler-price-oracle/lib/solady/src/',
        'solidity-bytes-utils/=lib/native-token-transfers/evm/lib/solidity-bytes-utils/contracts/',
        'solmate/=lib/fee-flow/lib/solmate/src/',
        'v3-core/=lib/euler-price-oracle/lib/v3-core/contracts/',
        'v3-periphery/=lib/euler-price-oracle/lib/v3-periphery/contracts/',
        'wormhole-solidity-sdk/=lib/native-token-transfers/evm/lib/wormhole-solidity-sdk/src/',
        'lib/euler-price-oracle:@openzeppelin/contracts/=lib/euler-price-oracle/lib/openzeppelin-contracts/contracts/',
        'lib/native-token-transfers/evm:openzeppelin-contracts/contracts/=lib/native-token-transfers/evm/lib/openzeppelin-contracts/contracts/',
      ],
      optimizer: { enabled: true, runs: 20000 },
      metadata: { bytecodeHash: 'ipfs' },
      compilationTarget: {
        'lib/euler-price-oracle/src/adapter/redstone/RedstoneCoreOracle.sol': 'RedstoneCoreOracle',
      },
      evmVersion: 'cancun',
      libraries: {},
    },
    sources: {
      'lib/euler-price-oracle/lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol': {
        keccak256: '0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a',
        urls: [
          'bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b',
          'dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ',
        ],
        license: 'MIT',
      },
      'lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/CalldataExtractor.sol':
        {
          keccak256: '0x7a381362d355b7c2eff8cf9a2b0e0836d7b7c950b32f0fb65f1e4fc43c0c7379',
          urls: [
            'bzz-raw://2e395c76dcdf725a268103052be7127ea2da7b7e394a1abb267192a87dc1bd2b',
            'dweb:/ipfs/QmdAvALKcVDYXuJTpy54caPGpVGsZZqiJ2Emesr7Pt6JLj',
          ],
          license: 'BUSL-1.1',
        },
      'lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/RedstoneConstants.sol':
        {
          keccak256: '0x82ab78ed59f4a811f5ab5c32064099235d753f98df42c087476ddabbf0348f21',
          urls: [
            'bzz-raw://7c4b78b95bff4fbe0c57747c812c22c0f3b9581f4cf2cbf8af0c21aad6ca880f',
            'dweb:/ipfs/QmdRBJUpdPUZPF4mwy6M4EivSQsWBvH4qbmtnaau3ft9V3',
          ],
          license: 'BUSL-1.1',
        },
      'lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/RedstoneConsumerBase.sol':
        {
          keccak256: '0x9f67e176ef49bc988486de896bddce913dc0679b6f3f2cf9fd9803e683927d42',
          urls: [
            'bzz-raw://2497ae8faafbb5bc2f5b14e9ce77f94687842472a4b69416cfd73465b315f4f8',
            'dweb:/ipfs/QmUAmQqsoUGNpsEpMGFUMvRA1n2LWMifgCk2VenuzKok9d',
          ],
          license: 'BUSL-1.1',
        },
      'lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/RedstoneConsumerNumericBase.sol':
        {
          keccak256: '0xe8e70ed8bb3efc527dccaf5919587c7ff3980836256d7d8db8f632721a3cf956',
          urls: [
            'bzz-raw://550168f845b478dbb81f3f5dcf71cc61d64558a6dd676d95d2c46008b5e3e380',
            'dweb:/ipfs/Qmc2F5p3NdVubj733YqBGHyhA4TBnvEbqRRadkedboKw8Y',
          ],
          license: 'BUSL-1.1',
        },
      'lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/core/RedstoneDefaultsLib.sol':
        {
          keccak256: '0xe39ee1618d15944d6f44918f02f71d0d604fb678dbdbf36ca1eeecc86858ff25',
          urls: [
            'bzz-raw://2bcb45b6abee6ba18742a9e4374afc04f4be16de11d154ca846e96a37f3b6e73',
            'dweb:/ipfs/QmYUqJyfdj7YwvGthGKxzryC2mGQGTGZy7SYZZt7m7w3oo',
          ],
          license: 'BUSL-1.1',
        },
      'lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/data-services/PrimaryProdDataServiceConsumerBase.sol':
        {
          keccak256: '0x355c0c729aa063b77ad7c35d65087330711eeaa03a83786d3071213532c5824f',
          urls: [
            'bzz-raw://8765f25b61093c4f507c795589cc67773ef32c375d061a4197453063dc69defd',
            'dweb:/ipfs/QmQVC2uPWDoKotQV9WL7qXMjqBDnXUEBrub1NrHgLRbNmQ',
          ],
          license: 'BUSL-1.1',
        },
      'lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/libs/BitmapLib.sol':
        {
          keccak256: '0x9762198cae997eebad303a7a43a6133908646ed30811285085c9ea9cbd2a5e07',
          urls: [
            'bzz-raw://29f56e08f523a11d5f1ab083f5c613e7654a74613b2270f9e8860fa493bf2ceb',
            'dweb:/ipfs/QmUpD9U3GV7ZpjFEVvqSXGYfvwkBdeV5CoTiH1EzH8woJa',
          ],
          license: 'MIT',
        },
      'lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/libs/NumericArrayLib.sol':
        {
          keccak256: '0x9b1a3a433a450cbe90e85801ddf891ab26deeda02d45a2d67e24443cdc33e764',
          urls: [
            'bzz-raw://967761b57c78ea600ba6efa5a49cdd0c020339596871c22ada9d309eaa4d8acd',
            'dweb:/ipfs/QmUeGHZkXdovDYwhwUKj5pPfdS4hVv68tzhjVXieWCQtUt',
          ],
          license: 'MIT',
        },
      'lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/libs/SignatureLib.sol':
        {
          keccak256: '0x06037b440e5eab52d550718543c463da00ac7231f303a503178ad5191e154310',
          urls: [
            'bzz-raw://7bfb27ed76efa93423e40c276d2caefeab957561946f808169511b87d127e4c4',
            'dweb:/ipfs/QmT3wt6FhAf7PFDZ1Z2mNx1671Yudz7UCjqnoFkEKCgt92',
          ],
          license: 'MIT',
        },
      'lib/euler-price-oracle/lib/solady/src/utils/FixedPointMathLib.sol': {
        keccak256: '0xd890a3c47fd08d2d663890af4561045edc531ca1d7687bbf9dd7a2d1f15f1a3e',
        urls: [
          'bzz-raw://b8a4777858cb1c9ffa53f9c1f115d6e9c9af547cf02e06ab9e175da373b46da4',
          'dweb:/ipfs/QmQSKB7DZnatj6eJtugzUvKxrxFrdzFwRMJxQpsTbtup1P',
        ],
        license: 'MIT',
      },
      'lib/euler-price-oracle/src/adapter/BaseAdapter.sol': {
        keccak256: '0x1ca090708d2c03edd58fdb6c22638fce41e93c5f4021b382940d088ae49c81e3',
        urls: [
          'bzz-raw://d00bbb80bdb34321bea2055bcb1364cd860e7662ec513254ffa61698c09526b4',
          'dweb:/ipfs/QmeCE976ZZy6oLCP2emgBjvx8vJxKvoEJ4yF65QKLjQJDo',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/euler-price-oracle/src/adapter/redstone/RedstoneCoreOracle.sol': {
        keccak256: '0x2de496eb13975b4e1de4789e4e2753bb3993109bfc4b4877c772115e86be8392',
        urls: [
          'bzz-raw://2ff742a00e9c76a76fa7c909591df50c46e0d4c293511bc912b8453ac9c1c50e',
          'dweb:/ipfs/QmXAvKdNc8v1vzigWip2ZwT5Pie9zmYXah9QXnkh1pmWHQ',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/euler-price-oracle/src/interfaces/IPriceOracle.sol': {
        keccak256: '0x03567dd4084dc74a9e2f9eeffce4d9047989b0d2122820716c3bc75891484308',
        urls: [
          'bzz-raw://23965a79475c85a0a8a3a137a76424f60debd9e592bc9127d463392fad7df30f',
          'dweb:/ipfs/QmPc1bV3kZ3ynLGTqG6xRbZ3E5AstYdfipXbysSqYGhJYA',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/euler-price-oracle/src/lib/Errors.sol': {
        keccak256: '0x2551662bcef8d4a5cb7cdc8cd404f28c726af1bcfe7ef371b22d53322a932698',
        urls: [
          'bzz-raw://1641b99e0c907950448d62205fc23b5550c44899ba8c0bc0274a6b0a501981b9',
          'dweb:/ipfs/QmZvDhw4Ao3m8jRjNjT8Xq8imCPecJyytUTtCUjt5RoB4v',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/euler-price-oracle/src/lib/ScaleUtils.sol': {
        keccak256: '0x9bd1ac81aab20c82eacbdda286996571530cdb1505d74299b56fd51fef0be9f8',
        urls: [
          'bzz-raw://5be0485ea15aff9b321012c1a1102425b7c63375d4a378d2a81ae55f60038bf3',
          'dweb:/ipfs/QmZwg2KtMWzjc6PMxJ98iTYcEVj8Bbs8YdNQNNHRq3pwfM',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/forge-std/src/interfaces/IERC20.sol': {
        keccak256: '0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947',
        urls: [
          'bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7',
          'dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9',
        ],
        license: 'MIT',
      },
    },
    version: 1,
  },
  id: 84,
} as const;
