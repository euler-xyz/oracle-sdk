export default {
  abi: [
    {
      type: 'constructor',
      inputs: [
        { name: '_tokenA', type: 'address', internalType: 'address' },
        { name: '_tokenB', type: 'address', internalType: 'address' },
        { name: '_fee', type: 'uint24', internalType: 'uint24' },
        { name: '_twapWindow', type: 'uint32', internalType: 'uint32' },
        { name: '_uniswapV3Factory', type: 'address', internalType: 'address' },
      ],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      name: 'fee',
      inputs: [],
      outputs: [{ name: '', type: 'uint24', internalType: 'uint24' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'getQuote',
      inputs: [
        { name: 'inAmount', type: 'uint256', internalType: 'uint256' },
        { name: 'base', type: 'address', internalType: 'address' },
        { name: 'quote', type: 'address', internalType: 'address' },
      ],
      outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'getQuotes',
      inputs: [
        { name: 'inAmount', type: 'uint256', internalType: 'uint256' },
        { name: 'base', type: 'address', internalType: 'address' },
        { name: 'quote', type: 'address', internalType: 'address' },
      ],
      outputs: [
        { name: '', type: 'uint256', internalType: 'uint256' },
        { name: '', type: 'uint256', internalType: 'uint256' },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'name',
      inputs: [],
      outputs: [{ name: '', type: 'string', internalType: 'string' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'pool',
      inputs: [],
      outputs: [{ name: '', type: 'address', internalType: 'address' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'tokenA',
      inputs: [],
      outputs: [{ name: '', type: 'address', internalType: 'address' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'tokenB',
      inputs: [],
      outputs: [{ name: '', type: 'address', internalType: 'address' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'twapWindow',
      inputs: [],
      outputs: [{ name: '', type: 'uint32', internalType: 'uint32' }],
      stateMutability: 'view',
    },
    { type: 'error', name: 'PriceOracle_InvalidConfiguration', inputs: [] },
    {
      type: 'error',
      name: 'PriceOracle_NotSupported',
      inputs: [
        { name: 'base', type: 'address', internalType: 'address' },
        { name: 'quote', type: 'address', internalType: 'address' },
      ],
    },
    { type: 'error', name: 'PriceOracle_Overflow', inputs: [] },
    { type: 'error', name: 'T', inputs: [] },
  ],
  bytecode: {
    object:
      '0x61012060405234801562000011575f80fd5b5060405162001ae538038062001ae5833981810160405281019062000037919062000336565b61012c63ffffffff168263ffffffff161080620000635750637fffffff63ffffffff168263ffffffff16115b156200009b576040517f0693059400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508262ffffff1660c08162ffffff16815250508163ffffffff1660e08163ffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff16631698ee8260805160a051866040518463ffffffff1660e01b81526004016200016c93929190620003dc565b602060405180830381865afa15801562000188573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001ae919062000417565b73ffffffffffffffffffffffffffffffffffffffff166101008173ffffffffffffffffffffffffffffffffffffffff16815250505f73ffffffffffffffffffffffffffffffffffffffff166101005173ffffffffffffffffffffffffffffffffffffffff16036200024b576040517f0693059400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505062000447565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000285826200025a565b9050919050565b620002978162000279565b8114620002a2575f80fd5b50565b5f81519050620002b5816200028c565b92915050565b5f62ffffff82169050919050565b620002d481620002bb565b8114620002df575f80fd5b50565b5f81519050620002f281620002c9565b92915050565b5f63ffffffff82169050919050565b6200031281620002f8565b81146200031d575f80fd5b50565b5f81519050620003308162000307565b92915050565b5f805f805f60a0868803121562000352576200035162000256565b5b5f6200036188828901620002a5565b95505060206200037488828901620002a5565b94505060406200038788828901620002e2565b93505060606200039a8882890162000320565b9250506080620003ad88828901620002a5565b9150509295509295909350565b620003c58162000279565b82525050565b620003d681620002bb565b82525050565b5f606082019050620003f15f830186620003ba565b620004006020830185620003ba565b6200040f6040830184620003cb565b949350505050565b5f602082840312156200042f576200042e62000256565b5b5f6200043e84828501620002a5565b91505092915050565b60805160a05160c05160e05161010051611628620004bd5f395f818161021d015261054101525f8181610265015281816104f201528181610624015261066601525f61029e01525f818161024101528181610319015261036f01525f81816101f9015281816102c301526103c501526116285ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c80635f64b55b116100595780635f64b55b146101155780638107e13314610133578063ae68676c14610151578063ddca3f431461018157610086565b80630579e61f1461008a57806306fdde03146100bb5780630fc63d10146100d957806316f0115b146100f7575b5f80fd5b6100a4600480360381019061009f9190610e2f565b61019f565b6040516100b2929190610e8e565b60405180910390f35b6100c36101be565b6040516100d09190610f3f565b60405180910390f35b6100e16101f7565b6040516100ee9190610f6e565b60405180910390f35b6100ff61021b565b60405161010c9190610f6e565b60405180910390f35b61011d61023f565b60405161012a9190610f6e565b60405180910390f35b61013b610263565b6040516101489190610fa5565b60405180910390f35b61016b60048036038101906101669190610e2f565b610287565b6040516101789190610fbe565b60405180910390f35b61018961029c565b6040516101969190610ff4565b60405180910390f35b5f805f6101ad8686866102c0565b905080819250925050935093915050565b6040518060400160405280600f81526020017f556e697377617056334f7261636c65000000000000000000000000000000000081525081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f6102938484846102c0565b90509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561036757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061041457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561041357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b5b6104575782826040517f4ca22af000000000000000000000000000000000000000000000000000000000815260040161044e92919061100d565b60405180910390fd5b6fffffffffffffffffffffffffffffffff80168411156104a3576040517f52a1f2a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600267ffffffffffffffff8111156104bf576104be611034565b5b6040519080825280602002602001820160405280156104ed5781602001602082028036833780820191505090505b5090507f0000000000000000000000000000000000000000000000000000000000000000815f8151811061052457610523611061565b5b602002602001019063ffffffff16908163ffffffff16815250505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663883bdbfd836040518263ffffffff1660e01b81526004016105989190611145565b5f60405180830381865afa1580156105b2573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906105da9190611398565b5090505f815f815181106105f1576105f0611061565b5b60200260200101518260018151811061060d5761060c611061565b5b602002602001015161061f919061143b565b90505f7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168261065491906114c6565b90505f8260060b12801561069c57505f7f000000000000000000000000000000000000000000000000000000000000000063ffffffff1683610696919061152e565b60060b14155b156106b05780806106ac9061156a565b9150505b6106bc818989896106c9565b9450505050509392505050565b5f806106d4866108d2565b90506fffffffffffffffffffffffffffffffff80168173ffffffffffffffffffffffffffffffffffffffff16116107ed575f8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1661073e91906115b1565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106107ae576107a97801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610cc3565b6107e5565b6107e481876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000610cc3565b5b9250506108c9565b5f61082e8273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1668010000000000000000610cc3565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061089657610891700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610cc3565b6108c5565b6108c481876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000610cc3565b5b9250505b50949350505050565b5f805f8360020b126108e7578260020b6108ee565b8260020b5f035b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276185f0360020b81111561094f576040517f2bc80f3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80600183160361097157700100000000000000000000000000000000610983565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690505f60028316146109bc5760806ffff97272373d413259a46990580e213a8202901c90505b5f60048316146109e05760806ffff2e50f5f656932ef12357cf3c7fdcc8202901c90505b5f6008831614610a045760806fffe5caca7e10e4e61c3624eaa0941cd08202901c90505b5f6010831614610a285760806fffcb9843d60f6159c9db58835c9266448202901c90505b5f6020831614610a4c5760806fff973b41fa98c081472e6896dfb254c08202901c90505b5f6040831614610a705760806fff2ea16466c96a3843ec78b326b528618202901c90505b5f6080831614610a945760806ffe5dee046a99a2a811c461f1969c30538202901c90505b5f610100831614610ab95760806ffcbe86c7900a88aedcffc83b479aa3a48202901c90505b5f610200831614610ade5760806ff987a7253ac413176f2b074cf7815e548202901c90505b5f610400831614610b035760806ff3392b0822b70005940c7a398e4b70f38202901c90505b5f610800831614610b285760806fe7159475a2c29b7443b29c7fa6e889d98202901c90505b5f611000831614610b4d5760806fd097f3bdfd2022b8845ad8f792aa58258202901c90505b5f612000831614610b725760806fa9f746462d870fdf8a65dc1f90e061e58202901c90505b5f614000831614610b975760806f70d869a156d2a1b890bb3df62baf32f78202901c90505b5f618000831614610bbc5760806f31be135f97d08fd981231505542fcfa68202901c90505b5f62010000831614610be25760806f09aa508b5b7a84e1c677de54f3e99bc98202901c90505b5f62020000831614610c075760806e5d6af8dedb81196699c329225ee6048202901c90505b5f62040000831614610c2b5760806d2216e584f5fa1ea926041bedfe988202901c90505b5f62080000831614610c4d5760806b048a170391f7dc42444e8fa28202901c90505b5f8460020b1315610c8c57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610c8857610c87611499565b5b0490505b5f6401000000008281610ca257610ca1611499565b5b0614610caf576001610cb1565b5f5b60ff16602082901c0192505050919050565b5f805f80198587098587029250828110838203039150505f8103610cf8575f8411610cec575f80fd5b83820492505050610d8a565b808411610d03575f80fd5b5f8486880990508281118203915080830392505f85865f0316905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610db481610da2565b8114610dbe575f80fd5b50565b5f81359050610dcf81610dab565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dfe82610dd5565b9050919050565b610e0e81610df4565b8114610e18575f80fd5b50565b5f81359050610e2981610e05565b92915050565b5f805f60608486031215610e4657610e45610d9a565b5b5f610e5386828701610dc1565b9350506020610e6486828701610e1b565b9250506040610e7586828701610e1b565b9150509250925092565b610e8881610da2565b82525050565b5f604082019050610ea15f830185610e7f565b610eae6020830184610e7f565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610eec578082015181840152602081019050610ed1565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610f1182610eb5565b610f1b8185610ebf565b9350610f2b818560208601610ecf565b610f3481610ef7565b840191505092915050565b5f6020820190508181035f830152610f578184610f07565b905092915050565b610f6881610df4565b82525050565b5f602082019050610f815f830184610f5f565b92915050565b5f63ffffffff82169050919050565b610f9f81610f87565b82525050565b5f602082019050610fb85f830184610f96565b92915050565b5f602082019050610fd15f830184610e7f565b92915050565b5f62ffffff82169050919050565b610fee81610fd7565b82525050565b5f6020820190506110075f830184610fe5565b92915050565b5f6040820190506110205f830185610f5f565b61102d6020830184610f5f565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6110c081610f87565b82525050565b5f6110d183836110b7565b60208301905092915050565b5f602082019050919050565b5f6110f38261108e565b6110fd8185611098565b9350611108836110a8565b805f5b8381101561113857815161111f88826110c6565b975061112a836110dd565b92505060018101905061110b565b5085935050505092915050565b5f6020820190508181035f83015261115d81846110e9565b905092915050565b5f80fd5b61117282610ef7565b810181811067ffffffffffffffff8211171561119157611190611034565b5b80604052505050565b5f6111a3610d91565b90506111af8282611169565b919050565b5f67ffffffffffffffff8211156111ce576111cd611034565b5b602082029050602081019050919050565b5f80fd5b5f8160060b9050919050565b6111f8816111e3565b8114611202575f80fd5b50565b5f81519050611213816111ef565b92915050565b5f61122b611226846111b4565b61119a565b9050808382526020820190506020840283018581111561124e5761124d6111df565b5b835b8181101561127757806112638882611205565b845260208401935050602081019050611250565b5050509392505050565b5f82601f83011261129557611294611165565b5b81516112a5848260208601611219565b91505092915050565b5f67ffffffffffffffff8211156112c8576112c7611034565b5b602082029050602081019050919050565b6112e281610dd5565b81146112ec575f80fd5b50565b5f815190506112fd816112d9565b92915050565b5f611315611310846112ae565b61119a565b90508083825260208201905060208402830185811115611338576113376111df565b5b835b81811015611361578061134d88826112ef565b84526020840193505060208101905061133a565b5050509392505050565b5f82601f83011261137f5761137e611165565b5b815161138f848260208601611303565b91505092915050565b5f80604083850312156113ae576113ad610d9a565b5b5f83015167ffffffffffffffff8111156113cb576113ca610d9e565b5b6113d785828601611281565b925050602083015167ffffffffffffffff8111156113f8576113f7610d9e565b5b6114048582860161136b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611445826111e3565b9150611450836111e3565b92508282039050667fffffffffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000821217156114935761149261140e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114d0826111e3565b91506114db836111e3565b9250826114eb576114ea611499565b5b60015f0383147fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000831416156115235761152261140e565b5b828205905092915050565b5f611538826111e3565b9150611543836111e3565b92508261155357611552611499565b5b828207905092915050565b5f8160020b9050919050565b5f6115748261155e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000082036115a6576115a561140e565b5b600182039050919050565b5f6115bb82610da2565b91506115c683610da2565b92508282026115d481610da2565b915082820484148315176115eb576115ea61140e565b5b509291505056fea2646970667358221220739a6435ca4bf5d20b8b869a1018e8ebec84fbe88a29deb6436a6cf76f446cd964736f6c63430008170033',
    sourceMap:
      '1543:2947:88:-:0;;;2619:542;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1684:9;2739:29;;:11;:29;;;:70;;;;2793:15;2772:37;;:11;:37;;;2739:70;2735:149;;;2832:41;;;;;;;;;;;;;;2735:149;2902:7;2893:16;;;;;;;;;;2928:7;2919:16;;;;;;;;;;2951:4;2945:10;;;;;;;;;;2978:11;2965:24;;;;;;;;;;3024:17;3006:44;;;3051:6;;3059;;3067:4;3006:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2999:73;;;;;;;;;;3102:1;3086:18;;:4;;:18;;;3082:72;;3113:41;;;;;;;;;;;;;;3082:72;2619:542;;;;;1543:2947;;88:117:165;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:91::-;881:7;921:8;914:5;910:20;899:31;;845:91;;;:::o;942:120::-;1014:23;1031:5;1014:23;:::i;:::-;1007:5;1004:34;994:62;;1052:1;1049;1042:12;994:62;942:120;:::o;1068:141::-;1124:5;1155:6;1149:13;1140:22;;1171:32;1197:5;1171:32;:::i;:::-;1068:141;;;;:::o;1215:93::-;1251:7;1291:10;1284:5;1280:22;1269:33;;1215:93;;;:::o;1314:120::-;1386:23;1403:5;1386:23;:::i;:::-;1379:5;1376:34;1366:62;;1424:1;1421;1414:12;1366:62;1314:120;:::o;1440:141::-;1496:5;1527:6;1521:13;1512:22;;1543:32;1569:5;1543:32;:::i;:::-;1440:141;;;;:::o;1587:973::-;1691:6;1699;1707;1715;1723;1772:3;1760:9;1751:7;1747:23;1743:33;1740:120;;;1779:79;;:::i;:::-;1740:120;1899:1;1924:64;1980:7;1971:6;1960:9;1956:22;1924:64;:::i;:::-;1914:74;;1870:128;2037:2;2063:64;2119:7;2110:6;2099:9;2095:22;2063:64;:::i;:::-;2053:74;;2008:129;2176:2;2202:63;2257:7;2248:6;2237:9;2233:22;2202:63;:::i;:::-;2192:73;;2147:128;2314:2;2340:63;2395:7;2386:6;2375:9;2371:22;2340:63;:::i;:::-;2330:73;;2285:128;2452:3;2479:64;2535:7;2526:6;2515:9;2511:22;2479:64;:::i;:::-;2469:74;;2423:130;1587:973;;;;;;;;:::o;2566:118::-;2653:24;2671:5;2653:24;:::i;:::-;2648:3;2641:37;2566:118;;:::o;2690:115::-;2775:23;2792:5;2775:23;:::i;:::-;2770:3;2763:36;2690:115;;:::o;2811:438::-;2958:4;2996:2;2985:9;2981:18;2973:26;;3009:71;3077:1;3066:9;3062:17;3053:6;3009:71;:::i;:::-;3090:72;3158:2;3147:9;3143:18;3134:6;3090:72;:::i;:::-;3172:70;3238:2;3227:9;3223:18;3214:6;3172:70;:::i;:::-;2811:438;;;;;;:::o;3255:351::-;3325:6;3374:2;3362:9;3353:7;3349:23;3345:32;3342:119;;;3380:79;;:::i;:::-;3342:119;3500:1;3525:64;3581:7;3572:6;3561:9;3557:22;3525:64;:::i;:::-;3515:74;;3471:128;3255:351;;;;:::o;1543:2947:88:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;',
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      '0x608060405234801561000f575f80fd5b5060043610610086575f3560e01c80635f64b55b116100595780635f64b55b146101155780638107e13314610133578063ae68676c14610151578063ddca3f431461018157610086565b80630579e61f1461008a57806306fdde03146100bb5780630fc63d10146100d957806316f0115b146100f7575b5f80fd5b6100a4600480360381019061009f9190610e2f565b61019f565b6040516100b2929190610e8e565b60405180910390f35b6100c36101be565b6040516100d09190610f3f565b60405180910390f35b6100e16101f7565b6040516100ee9190610f6e565b60405180910390f35b6100ff61021b565b60405161010c9190610f6e565b60405180910390f35b61011d61023f565b60405161012a9190610f6e565b60405180910390f35b61013b610263565b6040516101489190610fa5565b60405180910390f35b61016b60048036038101906101669190610e2f565b610287565b6040516101789190610fbe565b60405180910390f35b61018961029c565b6040516101969190610ff4565b60405180910390f35b5f805f6101ad8686866102c0565b905080819250925050935093915050565b6040518060400160405280600f81526020017f556e697377617056334f7261636c65000000000000000000000000000000000081525081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f6102938484846102c0565b90509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561036757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061041457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614801561041357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b5b6104575782826040517f4ca22af000000000000000000000000000000000000000000000000000000000815260040161044e92919061100d565b60405180910390fd5b6fffffffffffffffffffffffffffffffff80168411156104a3576040517f52a1f2a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f600267ffffffffffffffff8111156104bf576104be611034565b5b6040519080825280602002602001820160405280156104ed5781602001602082028036833780820191505090505b5090507f0000000000000000000000000000000000000000000000000000000000000000815f8151811061052457610523611061565b5b602002602001019063ffffffff16908163ffffffff16815250505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663883bdbfd836040518263ffffffff1660e01b81526004016105989190611145565b5f60405180830381865afa1580156105b2573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906105da9190611398565b5090505f815f815181106105f1576105f0611061565b5b60200260200101518260018151811061060d5761060c611061565b5b602002602001015161061f919061143b565b90505f7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168261065491906114c6565b90505f8260060b12801561069c57505f7f000000000000000000000000000000000000000000000000000000000000000063ffffffff1683610696919061152e565b60060b14155b156106b05780806106ac9061156a565b9150505b6106bc818989896106c9565b9450505050509392505050565b5f806106d4866108d2565b90506fffffffffffffffffffffffffffffffff80168173ffffffffffffffffffffffffffffffffffffffff16116107ed575f8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1661073e91906115b1565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106107ae576107a97801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610cc3565b6107e5565b6107e481876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000610cc3565b5b9250506108c9565b5f61082e8273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1668010000000000000000610cc3565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061089657610891700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610cc3565b6108c5565b6108c481876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000610cc3565b5b9250505b50949350505050565b5f805f8360020b126108e7578260020b6108ee565b8260020b5f035b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276185f0360020b81111561094f576040517f2bc80f3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80600183160361097157700100000000000000000000000000000000610983565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690505f60028316146109bc5760806ffff97272373d413259a46990580e213a8202901c90505b5f60048316146109e05760806ffff2e50f5f656932ef12357cf3c7fdcc8202901c90505b5f6008831614610a045760806fffe5caca7e10e4e61c3624eaa0941cd08202901c90505b5f6010831614610a285760806fffcb9843d60f6159c9db58835c9266448202901c90505b5f6020831614610a4c5760806fff973b41fa98c081472e6896dfb254c08202901c90505b5f6040831614610a705760806fff2ea16466c96a3843ec78b326b528618202901c90505b5f6080831614610a945760806ffe5dee046a99a2a811c461f1969c30538202901c90505b5f610100831614610ab95760806ffcbe86c7900a88aedcffc83b479aa3a48202901c90505b5f610200831614610ade5760806ff987a7253ac413176f2b074cf7815e548202901c90505b5f610400831614610b035760806ff3392b0822b70005940c7a398e4b70f38202901c90505b5f610800831614610b285760806fe7159475a2c29b7443b29c7fa6e889d98202901c90505b5f611000831614610b4d5760806fd097f3bdfd2022b8845ad8f792aa58258202901c90505b5f612000831614610b725760806fa9f746462d870fdf8a65dc1f90e061e58202901c90505b5f614000831614610b975760806f70d869a156d2a1b890bb3df62baf32f78202901c90505b5f618000831614610bbc5760806f31be135f97d08fd981231505542fcfa68202901c90505b5f62010000831614610be25760806f09aa508b5b7a84e1c677de54f3e99bc98202901c90505b5f62020000831614610c075760806e5d6af8dedb81196699c329225ee6048202901c90505b5f62040000831614610c2b5760806d2216e584f5fa1ea926041bedfe988202901c90505b5f62080000831614610c4d5760806b048a170391f7dc42444e8fa28202901c90505b5f8460020b1315610c8c57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610c8857610c87611499565b5b0490505b5f6401000000008281610ca257610ca1611499565b5b0614610caf576001610cb1565b5f5b60ff16602082901c0192505050919050565b5f805f80198587098587029250828110838203039150505f8103610cf8575f8411610cec575f80fd5b83820492505050610d8a565b808411610d03575f80fd5b5f8486880990508281118203915080830392505f85865f0316905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610db481610da2565b8114610dbe575f80fd5b50565b5f81359050610dcf81610dab565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dfe82610dd5565b9050919050565b610e0e81610df4565b8114610e18575f80fd5b50565b5f81359050610e2981610e05565b92915050565b5f805f60608486031215610e4657610e45610d9a565b5b5f610e5386828701610dc1565b9350506020610e6486828701610e1b565b9250506040610e7586828701610e1b565b9150509250925092565b610e8881610da2565b82525050565b5f604082019050610ea15f830185610e7f565b610eae6020830184610e7f565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610eec578082015181840152602081019050610ed1565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610f1182610eb5565b610f1b8185610ebf565b9350610f2b818560208601610ecf565b610f3481610ef7565b840191505092915050565b5f6020820190508181035f830152610f578184610f07565b905092915050565b610f6881610df4565b82525050565b5f602082019050610f815f830184610f5f565b92915050565b5f63ffffffff82169050919050565b610f9f81610f87565b82525050565b5f602082019050610fb85f830184610f96565b92915050565b5f602082019050610fd15f830184610e7f565b92915050565b5f62ffffff82169050919050565b610fee81610fd7565b82525050565b5f6020820190506110075f830184610fe5565b92915050565b5f6040820190506110205f830185610f5f565b61102d6020830184610f5f565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6110c081610f87565b82525050565b5f6110d183836110b7565b60208301905092915050565b5f602082019050919050565b5f6110f38261108e565b6110fd8185611098565b9350611108836110a8565b805f5b8381101561113857815161111f88826110c6565b975061112a836110dd565b92505060018101905061110b565b5085935050505092915050565b5f6020820190508181035f83015261115d81846110e9565b905092915050565b5f80fd5b61117282610ef7565b810181811067ffffffffffffffff8211171561119157611190611034565b5b80604052505050565b5f6111a3610d91565b90506111af8282611169565b919050565b5f67ffffffffffffffff8211156111ce576111cd611034565b5b602082029050602081019050919050565b5f80fd5b5f8160060b9050919050565b6111f8816111e3565b8114611202575f80fd5b50565b5f81519050611213816111ef565b92915050565b5f61122b611226846111b4565b61119a565b9050808382526020820190506020840283018581111561124e5761124d6111df565b5b835b8181101561127757806112638882611205565b845260208401935050602081019050611250565b5050509392505050565b5f82601f83011261129557611294611165565b5b81516112a5848260208601611219565b91505092915050565b5f67ffffffffffffffff8211156112c8576112c7611034565b5b602082029050602081019050919050565b6112e281610dd5565b81146112ec575f80fd5b50565b5f815190506112fd816112d9565b92915050565b5f611315611310846112ae565b61119a565b90508083825260208201905060208402830185811115611338576113376111df565b5b835b81811015611361578061134d88826112ef565b84526020840193505060208101905061133a565b5050509392505050565b5f82601f83011261137f5761137e611165565b5b815161138f848260208601611303565b91505092915050565b5f80604083850312156113ae576113ad610d9a565b5b5f83015167ffffffffffffffff8111156113cb576113ca610d9e565b5b6113d785828601611281565b925050602083015167ffffffffffffffff8111156113f8576113f7610d9e565b5b6114048582860161136b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611445826111e3565b9150611450836111e3565b92508282039050667fffffffffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000821217156114935761149261140e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114d0826111e3565b91506114db836111e3565b9250826114eb576114ea611499565b5b60015f0383147fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000831416156115235761152261140e565b5b828205905092915050565b5f611538826111e3565b9150611543836111e3565b92508261155357611552611499565b5b828207905092915050565b5f8160020b9050919050565b5f6115748261155e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000082036115a6576115a561140e565b5b600182039050919050565b5f6115bb82610da2565b91506115c683610da2565b92508282026115d481610da2565b915082820484148315176115eb576115ea61140e565b5b509291505056fea2646970667358221220739a6435ca4bf5d20b8b869a1018e8ebec84fbe88a29deb6436a6cf76f446cd964736f6c63430008170033',
    sourceMap:
      '1543:2947:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:215:72;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1732:47:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1832:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2173:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1914:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;759:153:72;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1993:27:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1003:215:72;1092:7;1101;1120:17;1140:32;1150:8;1160:4;1166:5;1140:9;:32::i;:::-;1120:52;;1190:9;1201;1182:29;;;;;1003:215;;;;;;:::o;1732:47:88:-;;;;;;;;;;;;;;;;;;;:::o;1832:31::-;;;:::o;2173:29::-;;;:::o;1914:31::-;;;:::o;2081:34::-;;;:::o;759:153:72:-;847:7;873:32;883:8;893:4;899:5;873:9;:32::i;:::-;866:39;;759:153;;;;;:::o;1993:27:88:-;;;:::o;3495:993::-;3593:7;3627:6;3619:14;;:4;:14;;;:33;;;;;3646:6;3637:15;;:5;:15;;;3619:33;3618:74;;;;3666:6;3658:14;;:4;:14;;;:33;;;;;3685:6;3676:15;;:5;:15;;;3658:33;3618:74;3612:159;;3748:4;3754:5;3716:44;;;;;;;;;;;;:::i;:::-;;;;;;;;3612:159;3844:17;3833:28;;:8;:28;3829:70;;;3870:29;;;;;;;;;;;;;;3829:70;3910:27;3953:1;3940:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3910:45;;3982:10;3965:11;3977:1;3965:14;;;;;;;;:::i;:::-;;;;;;;:27;;;;;;;;;;;4061:30;4111:4;4096:28;;;4125:11;4096:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4060:77;;;4147:26;4197:15;4213:1;4197:18;;;;;;;;:::i;:::-;;;;;;;;4176:15;4192:1;4176:18;;;;;;;;:::i;:::-;;;;;;;;:39;;;;:::i;:::-;4147:68;;4225:10;4280;4273:18;;4244:20;:48;;;;:::i;:::-;4225:68;;4330:1;4307:20;:24;;;:83;;;;;4388:1;4372:10;4365:18;;4336:20;:48;;;;:::i;:::-;:53;;;;4307:83;4303:95;;;4392:6;;;;;:::i;:::-;;;;4303:95;4415:66;4444:4;4458:8;4469:4;4475:5;4415:28;:66::i;:::-;4408:73;;;;;;3495:993;;;;;:::o;2647:955:70:-;2803:19;2834:20;2857:33;2885:4;2857:27;:33::i;:::-;2834:56;;3025:17;3009:33;;:12;:33;;;3005:591;;3058:17;3102:12;3078:36;;3086:12;3078:21;;:36;;;;:::i;:::-;3058:56;;3154:10;3142:22;;:9;:22;;;:156;;3250:48;3266:8;3276:10;3250:48;;3288:9;3250:15;:48::i;:::-;3142:156;;;3183:48;3199:9;3210:10;3183:48;;3222:8;3183:15;:48::i;:::-;3142:156;3128:170;;3044:265;3005:591;;;3329:17;3349:52;3365:12;3349:52;;3379:12;3349:52;;3393:7;3349:15;:52::i;:::-;3329:72;;3441:10;3429:22;;:9;:22;;;:156;;3537:48;3553:8;3563:10;3537:48;;3575:9;3537:15;:48::i;:::-;3429:156;;;3470:48;3486:9;3497:10;3470:48;;3509:8;3470:15;:48::i;:::-;3429:156;3415:170;;3315:281;3005:591;2824:778;2647:955;;;;;;:::o;1385:2759:69:-;1448:20;1504:15;1529:1;1522:4;:8;;;:57;;1573:4;1566:12;;1522:57;;;1549:4;1542:12;;1541:13;;1522:57;1504:75;;507:7;667:9;;1615:16;;1597:7;:35;1593:51;;;1641:3;;;;;;;;;;;;;;1593:51;1659:13;1692:1;1685:3;1675:7;:13;:18;:125;;1765:35;1675:125;;;1712:34;1675:125;1659:141;;;;1835:1;1828:3;1818:7;:13;:18;1814:83;;1894:3;1855:34;1847:5;:42;1846:51;;1838:59;;1814:83;1932:1;1925:3;1915:7;:13;:18;1911:83;;1991:3;1952:34;1944:5;:42;1943:51;;1935:59;;1911:83;2029:1;2022:3;2012:7;:13;:18;2008:83;;2088:3;2049:34;2041:5;:42;2040:51;;2032:59;;2008:83;2127:1;2119:4;2109:7;:14;:19;2105:84;;2186:3;2147:34;2139:5;:42;2138:51;;2130:59;;2105:84;2225:1;2217:4;2207:7;:14;:19;2203:84;;2284:3;2245:34;2237:5;:42;2236:51;;2228:59;;2203:84;2323:1;2315:4;2305:7;:14;:19;2301:84;;2382:3;2343:34;2335:5;:42;2334:51;;2326:59;;2301:84;2421:1;2413:4;2403:7;:14;:19;2399:84;;2480:3;2441:34;2433:5;:42;2432:51;;2424:59;;2399:84;2520:1;2511:5;2501:7;:15;:20;2497:85;;2579:3;2540:34;2532:5;:42;2531:51;;2523:59;;2497:85;2619:1;2610:5;2600:7;:15;:20;2596:85;;2678:3;2639:34;2631:5;:42;2630:51;;2622:59;;2596:85;2718:1;2709:5;2699:7;:15;:20;2695:85;;2777:3;2738:34;2730:5;:42;2729:51;;2721:59;;2695:85;2817:1;2808:5;2798:7;:15;:20;2794:85;;2876:3;2837:34;2829:5;:42;2828:51;;2820:59;;2794:85;2917:1;2907:6;2897:7;:16;:21;2893:86;;2976:3;2937:34;2929:5;:42;2928:51;;2920:59;;2893:86;3017:1;3007:6;2997:7;:16;:21;2993:86;;3076:3;3037:34;3029:5;:42;3028:51;;3020:59;;2993:86;3117:1;3107:6;3097:7;:16;:21;3093:86;;3176:3;3137:34;3129:5;:42;3128:51;;3120:59;;3093:86;3217:1;3207:6;3197:7;:16;:21;3193:86;;3276:3;3237:34;3229:5;:42;3228:51;;3220:59;;3193:86;3318:1;3307:7;3297;:17;:22;3293:86;;3376:3;3338:33;3330:5;:41;3329:50;;3321:58;;3293:86;3418:1;3407:7;3397;:17;:22;3393:85;;3475:3;3438:32;3430:5;:40;3429:49;;3421:57;;3393:85;3517:1;3506:7;3496;:17;:22;3492:83;;3572:3;3537:30;3529:5;:38;3528:47;;3520:55;;3492:83;3614:1;3603:7;3593;:17;:22;3589:78;;3664:3;3634:25;3626:5;:33;3625:42;;3617:50;;3589:78;3693:1;3686:4;:8;;;3682:47;;;3724:5;3704:17;:25;;;;;:::i;:::-;;;3696:33;;3682:47;4116:1;4104:7;4095:5;:17;;;;;:::i;:::-;;;:22;:30;;4124:1;4095:30;;;4120:1;4095:30;4078:48;;4088:2;4079:5;:11;;4078:48;4055:72;;1480:2658;;1385:2759;;;:::o;741:4127:68:-;853:14;1226:13;1298;1423:1;1419:6;1416:1;1413;1406:20;1459:1;1456;1452:9;1443:18;;1514:5;1510:2;1507:13;1499:5;1495:2;1491:14;1487:34;1478:43;;1378:157;1624:1;1615:5;:10;1611:203;;1667:1;1653:11;:15;1645:24;;;;;;1739:11;1732:5;1728:23;1718:33;;1786:13;;;;1611:203;1953:5;1939:11;:19;1931:28;;;;;;2260:17;2344:11;2341:1;2338;2331:25;2318:38;;2503:5;2492:9;2489:20;2482:5;2478:32;2469:41;;2547:9;2540:5;2536:21;2527:30;;2736:12;2771:11;2756;2752:1;:15;2751:31;2736:46;;2905:4;2892:11;2888:22;2873:37;;3043:4;3036:5;3032:16;3023:25;;3321:1;3314:4;3307;3304:1;3300:12;3296:23;3292:31;3284:39;;3367:4;3359:5;:12;3350:21;;;;3729:11;3763:1;3748:11;3744:1;:15;3743:21;3729:35;;4020:3;4006:11;:17;4002:1;:21;3995:28;;;;4082:3;4068:11;:17;4064:1;:21;4057:28;;;;4145:3;4131:11;:17;4127:1;:21;4120:28;;;;4208:3;4194:11;:17;4190:1;:21;4183:28;;;;4271:3;4257:11;:17;4253:1;:21;4246:28;;;;4335:3;4321:11;:17;4317:1;:21;4310:28;;;;4821:3;4813:5;:11;4804:20;;4838:13;;;;;741:4127;;;;;;:::o;7:75:165:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:118::-;1909:24;1927:5;1909:24;:::i;:::-;1904:3;1897:37;1822:118;;:::o;1946:332::-;2067:4;2105:2;2094:9;2090:18;2082:26;;2118:71;2186:1;2175:9;2171:17;2162:6;2118:71;:::i;:::-;2199:72;2267:2;2256:9;2252:18;2243:6;2199:72;:::i;:::-;1946:332;;;;;:::o;2284:99::-;2336:6;2370:5;2364:12;2354:22;;2284:99;;;:::o;2389:169::-;2473:11;2507:6;2502:3;2495:19;2547:4;2542:3;2538:14;2523:29;;2389:169;;;;:::o;2564:246::-;2645:1;2655:113;2669:6;2666:1;2663:13;2655:113;;;2754:1;2749:3;2745:11;2739:18;2735:1;2730:3;2726:11;2719:39;2691:2;2688:1;2684:10;2679:15;;2655:113;;;2802:1;2793:6;2788:3;2784:16;2777:27;2626:184;2564:246;;;:::o;2816:102::-;2857:6;2908:2;2904:7;2899:2;2892:5;2888:14;2884:28;2874:38;;2816:102;;;:::o;2924:377::-;3012:3;3040:39;3073:5;3040:39;:::i;:::-;3095:71;3159:6;3154:3;3095:71;:::i;:::-;3088:78;;3175:65;3233:6;3228:3;3221:4;3214:5;3210:16;3175:65;:::i;:::-;3265:29;3287:6;3265:29;:::i;:::-;3260:3;3256:39;3249:46;;3016:285;2924:377;;;;:::o;3307:313::-;3420:4;3458:2;3447:9;3443:18;3435:26;;3507:9;3501:4;3497:20;3493:1;3482:9;3478:17;3471:47;3535:78;3608:4;3599:6;3535:78;:::i;:::-;3527:86;;3307:313;;;;:::o;3626:118::-;3713:24;3731:5;3713:24;:::i;:::-;3708:3;3701:37;3626:118;;:::o;3750:222::-;3843:4;3881:2;3870:9;3866:18;3858:26;;3894:71;3962:1;3951:9;3947:17;3938:6;3894:71;:::i;:::-;3750:222;;;;:::o;3978:93::-;4014:7;4054:10;4047:5;4043:22;4032:33;;3978:93;;;:::o;4077:115::-;4162:23;4179:5;4162:23;:::i;:::-;4157:3;4150:36;4077:115;;:::o;4198:218::-;4289:4;4327:2;4316:9;4312:18;4304:26;;4340:69;4406:1;4395:9;4391:17;4382:6;4340:69;:::i;:::-;4198:218;;;;:::o;4422:222::-;4515:4;4553:2;4542:9;4538:18;4530:26;;4566:71;4634:1;4623:9;4619:17;4610:6;4566:71;:::i;:::-;4422:222;;;;:::o;4650:91::-;4686:7;4726:8;4719:5;4715:20;4704:31;;4650:91;;;:::o;4747:115::-;4832:23;4849:5;4832:23;:::i;:::-;4827:3;4820:36;4747:115;;:::o;4868:218::-;4959:4;4997:2;4986:9;4982:18;4974:26;;5010:69;5076:1;5065:9;5061:17;5052:6;5010:69;:::i;:::-;4868:218;;;;:::o;5092:332::-;5213:4;5251:2;5240:9;5236:18;5228:26;;5264:71;5332:1;5321:9;5317:17;5308:6;5264:71;:::i;:::-;5345:72;5413:2;5402:9;5398:18;5389:6;5345:72;:::i;:::-;5092:332;;;;;:::o;5430:180::-;5478:77;5475:1;5468:88;5575:4;5572:1;5565:15;5599:4;5596:1;5589:15;5616:180;5664:77;5661:1;5654:88;5761:4;5758:1;5751:15;5785:4;5782:1;5775:15;5802:113;5868:6;5902:5;5896:12;5886:22;;5802:113;;;:::o;5921:183::-;6019:11;6053:6;6048:3;6041:19;6093:4;6088:3;6084:14;6069:29;;5921:183;;;;:::o;6110:131::-;6176:4;6199:3;6191:11;;6229:4;6224:3;6220:14;6212:22;;6110:131;;;:::o;6247:105::-;6322:23;6339:5;6322:23;:::i;:::-;6317:3;6310:36;6247:105;;:::o;6358:175::-;6425:10;6446:44;6486:3;6478:6;6446:44;:::i;:::-;6522:4;6517:3;6513:14;6499:28;;6358:175;;;;:::o;6539:112::-;6608:4;6640;6635:3;6631:14;6623:22;;6539:112;;;:::o;6685:724::-;6802:3;6831:53;6878:5;6831:53;:::i;:::-;6900:85;6978:6;6973:3;6900:85;:::i;:::-;6893:92;;7009:55;7058:5;7009:55;:::i;:::-;7087:7;7118:1;7103:281;7128:6;7125:1;7122:13;7103:281;;;7204:6;7198:13;7231:61;7288:3;7273:13;7231:61;:::i;:::-;7224:68;;7315:59;7367:6;7315:59;:::i;:::-;7305:69;;7163:221;7150:1;7147;7143:9;7138:14;;7103:281;;;7107:14;7400:3;7393:10;;6807:602;;;6685:724;;;;:::o;7415:369::-;7556:4;7594:2;7583:9;7579:18;7571:26;;7643:9;7637:4;7633:20;7629:1;7618:9;7614:17;7607:47;7671:106;7772:4;7763:6;7671:106;:::i;:::-;7663:114;;7415:369;;;;:::o;7790:117::-;7899:1;7896;7889:12;7913:281;7996:27;8018:4;7996:27;:::i;:::-;7988:6;7984:40;8126:6;8114:10;8111:22;8090:18;8078:10;8075:34;8072:62;8069:88;;;8137:18;;:::i;:::-;8069:88;8177:10;8173:2;8166:22;7956:238;7913:281;;:::o;8200:129::-;8234:6;8261:20;;:::i;:::-;8251:30;;8290:33;8318:4;8310:6;8290:33;:::i;:::-;8200:129;;;:::o;8335:309::-;8410:4;8500:18;8492:6;8489:30;8486:56;;;8522:18;;:::i;:::-;8486:56;8572:4;8564:6;8560:17;8552:25;;8632:4;8626;8622:15;8614:23;;8335:309;;;:::o;8650:117::-;8759:1;8756;8749:12;8773:90;8808:7;8851:5;8848:1;8837:20;8826:31;;8773:90;;;:::o;8869:118::-;8940:22;8956:5;8940:22;:::i;:::-;8933:5;8930:33;8920:61;;8977:1;8974;8967:12;8920:61;8869:118;:::o;8993:139::-;9048:5;9079:6;9073:13;9064:22;;9095:31;9120:5;9095:31;:::i;:::-;8993:139;;;;:::o;9153:726::-;9258:5;9283:79;9299:62;9354:6;9299:62;:::i;:::-;9283:79;:::i;:::-;9274:88;;9382:5;9411:6;9404:5;9397:21;9445:4;9438:5;9434:16;9427:23;;9498:4;9490:6;9486:17;9478:6;9474:30;9527:3;9519:6;9516:15;9513:122;;;9546:79;;:::i;:::-;9513:122;9661:6;9644:229;9678:6;9673:3;9670:15;9644:229;;;9753:3;9782:46;9824:3;9812:10;9782:46;:::i;:::-;9777:3;9770:59;9858:4;9853:3;9849:14;9842:21;;9720:153;9704:4;9699:3;9695:14;9688:21;;9644:229;;;9648:21;9264:615;;9153:726;;;;;:::o;9900:381::-;9980:5;10029:3;10022:4;10014:6;10010:17;10006:27;9996:122;;10037:79;;:::i;:::-;9996:122;10147:6;10141:13;10172:103;10271:3;10263:6;10256:4;10248:6;10244:17;10172:103;:::i;:::-;10163:112;;9986:295;9900:381;;;;:::o;10287:311::-;10364:4;10454:18;10446:6;10443:30;10440:56;;;10476:18;;:::i;:::-;10440:56;10526:4;10518:6;10514:17;10506:25;;10586:4;10580;10576:15;10568:23;;10287:311;;;:::o;10604:122::-;10677:24;10695:5;10677:24;:::i;:::-;10670:5;10667:35;10657:63;;10716:1;10713;10706:12;10657:63;10604:122;:::o;10732:143::-;10789:5;10820:6;10814:13;10805:22;;10836:33;10863:5;10836:33;:::i;:::-;10732:143;;;;:::o;10898:732::-;11005:5;11030:81;11046:64;11103:6;11046:64;:::i;:::-;11030:81;:::i;:::-;11021:90;;11131:5;11160:6;11153:5;11146:21;11194:4;11187:5;11183:16;11176:23;;11247:4;11239:6;11235:17;11227:6;11223:30;11276:3;11268:6;11265:15;11262:122;;;11295:79;;:::i;:::-;11262:122;11410:6;11393:231;11427:6;11422:3;11419:15;11393:231;;;11502:3;11531:48;11575:3;11563:10;11531:48;:::i;:::-;11526:3;11519:61;11609:4;11604:3;11600:14;11593:21;;11469:155;11453:4;11448:3;11444:14;11437:21;;11393:231;;;11397:21;11011:619;;10898:732;;;;;:::o;11653:385::-;11735:5;11784:3;11777:4;11769:6;11765:17;11761:27;11751:122;;11792:79;;:::i;:::-;11751:122;11902:6;11896:13;11927:105;12028:3;12020:6;12013:4;12005:6;12001:17;11927:105;:::i;:::-;11918:114;;11741:297;11653:385;;;;:::o;12044:909::-;12171:6;12179;12228:2;12216:9;12207:7;12203:23;12199:32;12196:119;;;12234:79;;:::i;:::-;12196:119;12375:1;12364:9;12360:17;12354:24;12405:18;12397:6;12394:30;12391:117;;;12427:79;;:::i;:::-;12391:117;12532:87;12611:7;12602:6;12591:9;12587:22;12532:87;:::i;:::-;12522:97;;12325:304;12689:2;12678:9;12674:18;12668:25;12720:18;12712:6;12709:30;12706:117;;;12742:79;;:::i;:::-;12706:117;12847:89;12928:7;12919:6;12908:9;12904:22;12847:89;:::i;:::-;12837:99;;12639:307;12044:909;;;;;:::o;12959:180::-;13007:77;13004:1;12997:88;13104:4;13101:1;13094:15;13128:4;13125:1;13118:15;13145:321;13183:4;13203:18;13219:1;13203:18;:::i;:::-;13198:23;;13235:18;13251:1;13235:18;:::i;:::-;13230:23;;13277:1;13274;13270:9;13262:17;;13409:16;13403:4;13399:27;13318:66;13312:4;13308:77;13292:144;13289:170;;;13439:18;;:::i;:::-;13289:170;13145:321;;;;:::o;13472:180::-;13520:77;13517:1;13510:88;13617:4;13614:1;13607:15;13641:4;13638:1;13631:15;13658:382;13696:1;13713:18;13729:1;13713:18;:::i;:::-;13708:23;;13745:18;13761:1;13745:18;:::i;:::-;13740:23;;13782:1;13772:35;;13787:18;;:::i;:::-;13772:35;13973:1;13970;13966:9;13963:1;13960:16;13879:66;13876:1;13873:73;13856:130;13853:156;;;13989:18;;:::i;:::-;13853:156;14032:1;14029;14024:10;14019:15;;13658:382;;;;:::o;14046:171::-;14076:1;14093:18;14109:1;14093:18;:::i;:::-;14088:23;;14125:18;14141:1;14125:18;:::i;:::-;14120:23;;14162:1;14152:35;;14167:18;;:::i;:::-;14152:35;14209:1;14206;14201:10;14196:15;;14046:171;;;;:::o;14223:90::-;14258:7;14301:5;14298:1;14287:20;14276:31;;14223:90;;;:::o;14319:229::-;14356:3;14379:22;14395:5;14379:22;:::i;:::-;14370:31;;14423:66;14416:5;14413:77;14410:103;;14493:18;;:::i;:::-;14410:103;14540:1;14533:5;14529:13;14522:20;;14319:229;;;:::o;14554:410::-;14594:7;14617:20;14635:1;14617:20;:::i;:::-;14612:25;;14651:20;14669:1;14651:20;:::i;:::-;14646:25;;14706:1;14703;14699:9;14728:30;14746:11;14728:30;:::i;:::-;14717:41;;14907:1;14898:7;14894:15;14891:1;14888:22;14868:1;14861:9;14841:83;14818:139;;14937:18;;:::i;:::-;14818:139;14602:362;14554:410;;;;:::o',
    linkReferences: {},
    immutableReferences: {
      '53309': [
        { start: 505, length: 32 },
        { start: 707, length: 32 },
        { start: 965, length: 32 },
      ],
      '53312': [
        { start: 577, length: 32 },
        { start: 793, length: 32 },
        { start: 879, length: 32 },
      ],
      '53315': [{ start: 670, length: 32 }],
      '53318': [
        { start: 613, length: 32 },
        { start: 1266, length: 32 },
        { start: 1572, length: 32 },
        { start: 1638, length: 32 },
      ],
      '53321': [
        { start: 541, length: 32 },
        { start: 1345, length: 32 },
      ],
    },
  },
  methodIdentifiers: {
    'fee()': 'ddca3f43',
    'getQuote(uint256,address,address)': 'ae68676c',
    'getQuotes(uint256,address,address)': '0579e61f',
    'name()': '06fdde03',
    'pool()': '16f0115b',
    'tokenA()': '0fc63d10',
    'tokenB()': '5f64b55b',
    'twapWindow()': '8107e133',
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint24","name":"_fee","type":"uint24"},{"internalType":"uint32","name":"_twapWindow","type":"uint32"},{"internalType":"address","name":"_uniswapV3Factory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"PriceOracle_InvalidConfiguration","type":"error"},{"inputs":[{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"}],"name":"PriceOracle_NotSupported","type":"error"},{"inputs":[],"name":"PriceOracle_Overflow","type":"error"},{"inputs":[],"name":"T","type":"error"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"inAmount","type":"uint256"},{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"}],"name":"getQuote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"inAmount","type":"uint256"},{"internalType":"address","name":"base","type":"address"},{"internalType":"address","name":"quote","type":"address"}],"name":"getQuotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenA","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenB","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"twapWindow","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Euler Labs (https://www.eulerlabs.com/)","custom:security-contact":"security@euler.xyz","details":"This oracle supports quoting tokenA/tokenB and tokenB/tokenA of the given pool. WARNING: READ THIS BEFORE DEPLOYING Do not use Uniswap V3 as an oracle unless you understand its security implications. Instead, consider using another provider as a primary price source. Under PoS a validator may be chosen to propose consecutive blocks, allowing risk-free multi-block manipulation. The cardinality of the observation buffer must be grown sufficiently to accommodate for the chosen TWAP window. The observation buffer must contain enough observations to accommodate for the chosen TWAP window. The chosen pool must have enough total liquidity and some full-range liquidity to resist manipulation. The chosen pool must have had sufficient liquidity when past observations were recorded in the buffer. Networks with short block times are highly susceptible to TWAP manipulation due to the reduced attack cost.","errors":{"PriceOracle_NotSupported(address,address)":[{"params":{"base":"The address of the base asset.","quote":"The address of the quote asset."}}]},"kind":"dev","methods":{"constructor":{"details":"The oracle will support tokenA/tokenB and tokenB/tokenA pricing.","params":{"_fee":"The fee tier of the pool.","_tokenA":"One of the tokens in the pool.","_tokenB":"The other token in the pool.","_twapWindow":"The desired length of the twap window.","_uniswapV3Factory":"The address of the Uniswap V3 Factory."}},"getQuote(uint256,address,address)":{"params":{"base":"The token that is being priced.","inAmount":"The amount of `base` to convert.","quote":"The token that is the unit of account."},"returns":{"_0":"The amount of `quote` that is equivalent to `inAmount` of `base`."}},"getQuotes(uint256,address,address)":{"details":"Does not support true bid/ask pricing.","params":{"base":"The token that is being priced.","inAmount":"The amount of `base` to convert.","quote":"The token that is the unit of account."},"returns":{"_0":"The amount of `quote` you would get for selling `inAmount` of `base`.","_1":"The amount of `quote` you would spend for buying `inAmount` of `base`."}}},"stateVariables":{"MIN_TWAP_WINDOW":{"details":"The minimum length of the TWAP window."},"name":{"return":"The name of the oracle.","returns":{"_0":"The name of the oracle."}}},"title":"UniswapV3Oracle","version":1},"userdoc":{"errors":{"PriceOracle_InvalidConfiguration()":[{"notice":"The configuration parameters for the PriceOracle are invalid."}],"PriceOracle_NotSupported(address,address)":[{"notice":"The base/quote path is not supported."}],"PriceOracle_Overflow()":[{"notice":"The quote cannot be completed due to overflow."}]},"kind":"user","methods":{"constructor":{"notice":"Deploy a UniswapV3Oracle."},"fee()":{"notice":"The fee tier of the pool."},"getQuote(uint256,address,address)":{"notice":"One-sided price: How much quote token you would get for inAmount of base token, assuming no price spread."},"getQuotes(uint256,address,address)":{"notice":"Two-sided price: How much quote token you would get/spend for selling/buying inAmount of base token."},"name()":{"notice":"Get the name of the oracle."},"pool()":{"notice":"The address of the Uniswap V3 pool."},"tokenA()":{"notice":"One of the tokens in the pool."},"tokenB()":{"notice":"The other token in the pool."},"twapWindow()":{"notice":"The desired length of the twap window."}},"notice":"Adapter for Uniswap V3\'s TWAP oracle.","version":1}},"settings":{"compilationTarget":{"src/adapter/uniswap/UniswapV3Oracle.sol":"UniswapV3Oracle"},"evmVersion":"shanghai","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":@pendle/core-v2/=lib/pendle-core-v2-public/contracts/",":@pyth/=lib/pyth-sdk-solidity/",":@redstone/evm-connector/=lib/redstone-oracles-monorepo/packages/evm-connector/contracts/",":@solady/=lib/solady/src/",":@uniswap/v3-core/=lib/v3-core/",":@uniswap/v3-periphery/=lib/v3-periphery/",":ds-test/=lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":ethereum-vault-connector/=lib/ethereum-vault-connector/src/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/",":openzeppelin/=lib/openzeppelin-contracts/contracts/",":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/",":pyth-sdk-solidity/=lib/pyth-sdk-solidity/",":redstone-oracles-monorepo/=lib/redstone-oracles-monorepo/",":solady/=lib/solady/",":v3-core/=lib/v3-core/contracts/",":v3-periphery/=lib/v3-periphery/contracts/"]},"sources":{"lib/forge-std/src/interfaces/IERC20.sol":{"keccak256":"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947","license":"MIT","urls":["bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7","dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"]},"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"keccak256":"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489","license":"GPL-2.0-or-later","urls":["bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2","dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"]},"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"keccak256":"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968","license":"GPL-2.0-or-later","urls":["bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e","dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"]},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"keccak256":"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634","license":"GPL-2.0-or-later","urls":["bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5","dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"]},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"keccak256":"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5","license":"GPL-2.0-or-later","urls":["bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7","dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"]},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol":{"keccak256":"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b","license":"GPL-2.0-or-later","urls":["bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa","dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"]},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"keccak256":"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd","license":"GPL-2.0-or-later","urls":["bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03","dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"]},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"keccak256":"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7","license":"GPL-2.0-or-later","urls":["bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047","dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"]},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"keccak256":"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235","license":"GPL-2.0-or-later","urls":["bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735","dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"]},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"keccak256":"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43","license":"GPL-2.0-or-later","urls":["bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea","dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"]},"lib/v3-core/contracts/libraries/FullMath.sol":{"keccak256":"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645","license":"MIT","urls":["bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125","dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"]},"lib/v3-core/contracts/libraries/TickMath.sol":{"keccak256":"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129","license":"GPL-2.0-or-later","urls":["bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c","dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"]},"lib/v3-periphery/contracts/libraries/OracleLibrary.sol":{"keccak256":"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b","license":"GPL-2.0-or-later","urls":["bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53","dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"]},"src/adapter/BaseAdapter.sol":{"keccak256":"0x1ca090708d2c03edd58fdb6c22638fce41e93c5f4021b382940d088ae49c81e3","license":"GPL-2.0-or-later","urls":["bzz-raw://d00bbb80bdb34321bea2055bcb1364cd860e7662ec513254ffa61698c09526b4","dweb:/ipfs/QmeCE976ZZy6oLCP2emgBjvx8vJxKvoEJ4yF65QKLjQJDo"]},"src/adapter/uniswap/UniswapV3Oracle.sol":{"keccak256":"0x7b8c497d806d8067ea9a4f4b7779b2f6d0f7cf9dc77e8d8fdf43d0463d558d87","license":"GPL-2.0-or-later","urls":["bzz-raw://bdbd3907f51578cac6873a2ce09b863811d22e55490157e3583ecb61fe67d40b","dweb:/ipfs/Qmf2gBpKc9dK1uvydkjKBMNKnm3RVn1W6enQfbpwaqGst4"]},"src/interfaces/IPriceOracle.sol":{"keccak256":"0x03567dd4084dc74a9e2f9eeffce4d9047989b0d2122820716c3bc75891484308","license":"GPL-2.0-or-later","urls":["bzz-raw://23965a79475c85a0a8a3a137a76424f60debd9e592bc9127d463392fad7df30f","dweb:/ipfs/QmPc1bV3kZ3ynLGTqG6xRbZ3E5AstYdfipXbysSqYGhJYA"]},"src/lib/Errors.sol":{"keccak256":"0x2551662bcef8d4a5cb7cdc8cd404f28c726af1bcfe7ef371b22d53322a932698","license":"GPL-2.0-or-later","urls":["bzz-raw://1641b99e0c907950448d62205fc23b5550c44899ba8c0bc0274a6b0a501981b9","dweb:/ipfs/QmZvDhw4Ao3m8jRjNjT8Xq8imCPecJyytUTtCUjt5RoB4v"]}},"version":1}',
  metadata: {
    compiler: { version: '0.8.23+commit.f704f362' },
    language: 'Solidity',
    output: {
      abi: [
        {
          inputs: [
            { internalType: 'address', name: '_tokenA', type: 'address' },
            { internalType: 'address', name: '_tokenB', type: 'address' },
            { internalType: 'uint24', name: '_fee', type: 'uint24' },
            { internalType: 'uint32', name: '_twapWindow', type: 'uint32' },
            {
              internalType: 'address',
              name: '_uniswapV3Factory',
              type: 'address',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'constructor',
        },
        { inputs: [], type: 'error', name: 'PriceOracle_InvalidConfiguration' },
        {
          inputs: [
            { internalType: 'address', name: 'base', type: 'address' },
            { internalType: 'address', name: 'quote', type: 'address' },
          ],
          type: 'error',
          name: 'PriceOracle_NotSupported',
        },
        { inputs: [], type: 'error', name: 'PriceOracle_Overflow' },
        { inputs: [], type: 'error', name: 'T' },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'fee',
          outputs: [{ internalType: 'uint24', name: '', type: 'uint24' }],
        },
        {
          inputs: [
            { internalType: 'uint256', name: 'inAmount', type: 'uint256' },
            { internalType: 'address', name: 'base', type: 'address' },
            { internalType: 'address', name: 'quote', type: 'address' },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'getQuote',
          outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        },
        {
          inputs: [
            { internalType: 'uint256', name: 'inAmount', type: 'uint256' },
            { internalType: 'address', name: 'base', type: 'address' },
            { internalType: 'address', name: 'quote', type: 'address' },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'getQuotes',
          outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'name',
          outputs: [{ internalType: 'string', name: '', type: 'string' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'pool',
          outputs: [{ internalType: 'address', name: '', type: 'address' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'tokenA',
          outputs: [{ internalType: 'address', name: '', type: 'address' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'tokenB',
          outputs: [{ internalType: 'address', name: '', type: 'address' }],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'twapWindow',
          outputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
        },
      ],
      devdoc: {
        kind: 'dev',
        methods: {
          constructor: {
            details: 'The oracle will support tokenA/tokenB and tokenB/tokenA pricing.',
            params: {
              _fee: 'The fee tier of the pool.',
              _tokenA: 'One of the tokens in the pool.',
              _tokenB: 'The other token in the pool.',
              _twapWindow: 'The desired length of the twap window.',
              _uniswapV3Factory: 'The address of the Uniswap V3 Factory.',
            },
          },
          'getQuote(uint256,address,address)': {
            params: {
              base: 'The token that is being priced.',
              inAmount: 'The amount of `base` to convert.',
              quote: 'The token that is the unit of account.',
            },
            returns: {
              _0: 'The amount of `quote` that is equivalent to `inAmount` of `base`.',
            },
          },
          'getQuotes(uint256,address,address)': {
            details: 'Does not support true bid/ask pricing.',
            params: {
              base: 'The token that is being priced.',
              inAmount: 'The amount of `base` to convert.',
              quote: 'The token that is the unit of account.',
            },
            returns: {
              _0: 'The amount of `quote` you would get for selling `inAmount` of `base`.',
              _1: 'The amount of `quote` you would spend for buying `inAmount` of `base`.',
            },
          },
        },
        version: 1,
      },
      userdoc: {
        kind: 'user',
        methods: {
          constructor: { notice: 'Deploy a UniswapV3Oracle.' },
          'fee()': { notice: 'The fee tier of the pool.' },
          'getQuote(uint256,address,address)': {
            notice:
              'One-sided price: How much quote token you would get for inAmount of base token, assuming no price spread.',
          },
          'getQuotes(uint256,address,address)': {
            notice:
              'Two-sided price: How much quote token you would get/spend for selling/buying inAmount of base token.',
          },
          'name()': { notice: 'Get the name of the oracle.' },
          'pool()': { notice: 'The address of the Uniswap V3 pool.' },
          'tokenA()': { notice: 'One of the tokens in the pool.' },
          'tokenB()': { notice: 'The other token in the pool.' },
          'twapWindow()': { notice: 'The desired length of the twap window.' },
        },
        version: 1,
      },
    },
    settings: {
      remappings: [
        '@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
        '@pendle/core-v2/=lib/pendle-core-v2-public/contracts/',
        '@pyth/=lib/pyth-sdk-solidity/',
        '@redstone/evm-connector/=lib/redstone-oracles-monorepo/packages/evm-connector/contracts/',
        '@solady/=lib/solady/src/',
        '@uniswap/v3-core/=lib/v3-core/',
        '@uniswap/v3-periphery/=lib/v3-periphery/',
        'ds-test/=lib/forge-std/lib/ds-test/src/',
        'erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/',
        'ethereum-vault-connector/=lib/ethereum-vault-connector/src/',
        'forge-std/=lib/forge-std/src/',
        'openzeppelin-contracts/=lib/openzeppelin-contracts/',
        'openzeppelin/=lib/openzeppelin-contracts/contracts/',
        'pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/',
        'pyth-sdk-solidity/=lib/pyth-sdk-solidity/',
        'redstone-oracles-monorepo/=lib/redstone-oracles-monorepo/',
        'solady/=lib/solady/',
        'v3-core/=lib/v3-core/contracts/',
        'v3-periphery/=lib/v3-periphery/contracts/',
      ],
      optimizer: { enabled: false, runs: 200 },
      metadata: { bytecodeHash: 'ipfs' },
      compilationTarget: {
        'src/adapter/uniswap/UniswapV3Oracle.sol': 'UniswapV3Oracle',
      },
      evmVersion: 'shanghai',
      libraries: {},
    },
    sources: {
      'lib/forge-std/src/interfaces/IERC20.sol': {
        keccak256: '0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947',
        urls: [
          'bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7',
          'dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9',
        ],
        license: 'MIT',
      },
      'lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol': {
        keccak256: '0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489',
        urls: [
          'bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2',
          'dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol': {
        keccak256: '0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968',
        urls: [
          'bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e',
          'dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol': {
        keccak256: '0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634',
        urls: [
          'bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5',
          'dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol': {
        keccak256: '0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5',
        urls: [
          'bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7',
          'dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol': {
        keccak256: '0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b',
        urls: [
          'bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa',
          'dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol': {
        keccak256: '0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd',
        urls: [
          'bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03',
          'dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol': {
        keccak256: '0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7',
        urls: [
          'bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047',
          'dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol': {
        keccak256: '0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235',
        urls: [
          'bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735',
          'dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol': {
        keccak256: '0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43',
        urls: [
          'bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea',
          'dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-core/contracts/libraries/FullMath.sol': {
        keccak256: '0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645',
        urls: [
          'bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125',
          'dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd',
        ],
        license: 'MIT',
      },
      'lib/v3-core/contracts/libraries/TickMath.sol': {
        keccak256: '0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129',
        urls: [
          'bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c',
          'dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS',
        ],
        license: 'GPL-2.0-or-later',
      },
      'lib/v3-periphery/contracts/libraries/OracleLibrary.sol': {
        keccak256: '0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b',
        urls: [
          'bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53',
          'dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM',
        ],
        license: 'GPL-2.0-or-later',
      },
      'src/adapter/BaseAdapter.sol': {
        keccak256: '0x1ca090708d2c03edd58fdb6c22638fce41e93c5f4021b382940d088ae49c81e3',
        urls: [
          'bzz-raw://d00bbb80bdb34321bea2055bcb1364cd860e7662ec513254ffa61698c09526b4',
          'dweb:/ipfs/QmeCE976ZZy6oLCP2emgBjvx8vJxKvoEJ4yF65QKLjQJDo',
        ],
        license: 'GPL-2.0-or-later',
      },
      'src/adapter/uniswap/UniswapV3Oracle.sol': {
        keccak256: '0x7b8c497d806d8067ea9a4f4b7779b2f6d0f7cf9dc77e8d8fdf43d0463d558d87',
        urls: [
          'bzz-raw://bdbd3907f51578cac6873a2ce09b863811d22e55490157e3583ecb61fe67d40b',
          'dweb:/ipfs/Qmf2gBpKc9dK1uvydkjKBMNKnm3RVn1W6enQfbpwaqGst4',
        ],
        license: 'GPL-2.0-or-later',
      },
      'src/interfaces/IPriceOracle.sol': {
        keccak256: '0x03567dd4084dc74a9e2f9eeffce4d9047989b0d2122820716c3bc75891484308',
        urls: [
          'bzz-raw://23965a79475c85a0a8a3a137a76424f60debd9e592bc9127d463392fad7df30f',
          'dweb:/ipfs/QmPc1bV3kZ3ynLGTqG6xRbZ3E5AstYdfipXbysSqYGhJYA',
        ],
        license: 'GPL-2.0-or-later',
      },
      'src/lib/Errors.sol': {
        keccak256: '0x2551662bcef8d4a5cb7cdc8cd404f28c726af1bcfe7ef371b22d53322a932698',
        urls: [
          'bzz-raw://1641b99e0c907950448d62205fc23b5550c44899ba8c0bc0274a6b0a501981b9',
          'dweb:/ipfs/QmZvDhw4Ao3m8jRjNjT8Xq8imCPecJyytUTtCUjt5RoB4v',
        ],
        license: 'GPL-2.0-or-later',
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: 'src/adapter/uniswap/UniswapV3Oracle.sol',
    id: 53538,
    exportedSymbols: {
      BaseAdapter: [51182],
      Errors: [54043],
      IPriceOracle: [54013],
      IUniswapV3Factory: [48809],
      IUniswapV3Pool: [48841],
      OracleLibrary: [50631],
      UniswapV3Oracle: [53537],
    },
    nodeType: 'SourceUnit',
    src: '45:4446:88',
    nodes: [
      {
        id: 53285,
        nodeType: 'PragmaDirective',
        src: '45:23:88',
        nodes: [],
        literals: ['solidity', '^', '0.8', '.0'],
      },
      {
        id: 53287,
        nodeType: 'ImportDirective',
        src: '70:88:88',
        nodes: [],
        absolutePath: 'lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol',
        file: '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol',
        nameLocation: '-1:-1:-1',
        scope: 53538,
        sourceUnit: 48842,
        symbolAliases: [
          {
            foreign: {
              id: 53286,
              name: 'IUniswapV3Pool',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 48841,
              src: '78:14:88',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 53289,
        nodeType: 'ImportDirective',
        src: '159:94:88',
        nodes: [],
        absolutePath: 'lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol',
        file: '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol',
        nameLocation: '-1:-1:-1',
        scope: 53538,
        sourceUnit: 48810,
        symbolAliases: [
          {
            foreign: {
              id: 53288,
              name: 'IUniswapV3Factory',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 48809,
              src: '167:17:88',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 53291,
        nodeType: 'ImportDirective',
        src: '254:90:88',
        nodes: [],
        absolutePath: 'lib/v3-periphery/contracts/libraries/OracleLibrary.sol',
        file: '@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol',
        nameLocation: '-1:-1:-1',
        scope: 53538,
        sourceUnit: 50632,
        symbolAliases: [
          {
            foreign: {
              id: 53290,
              name: 'OracleLibrary',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 50631,
              src: '262:13:88',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 53295,
        nodeType: 'ImportDirective',
        src: '345:69:88',
        nodes: [],
        absolutePath: 'src/adapter/BaseAdapter.sol',
        file: '../BaseAdapter.sol',
        nameLocation: '-1:-1:-1',
        scope: 53538,
        sourceUnit: 51183,
        symbolAliases: [
          {
            foreign: {
              id: 53292,
              name: 'BaseAdapter',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 51182,
              src: '353:11:88',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
          {
            foreign: {
              id: 53293,
              name: 'Errors',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 54043,
              src: '366:6:88',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
          {
            foreign: {
              id: 53294,
              name: 'IPriceOracle',
              nodeType: 'Identifier',
              overloadedDeclarations: [],
              referencedDeclaration: 54013,
              src: '374:12:88',
              typeDescriptions: {},
            },
            nameLocation: '-1:-1:-1',
          },
        ],
        unitAlias: '',
      },
      {
        id: 53537,
        nodeType: 'ContractDefinition',
        src: '1543:2947:88',
        nodes: [
          {
            id: 53302,
            nodeType: 'VariableDeclaration',
            src: '1641:52:88',
            nodes: [],
            constant: true,
            documentation: {
              id: 53299,
              nodeType: 'StructuredDocumentation',
              src: '1589:47:88',
              text: '@dev The minimum length of the TWAP window.',
            },
            mutability: 'constant',
            name: 'MIN_TWAP_WINDOW',
            nameLocation: '1666:15:88',
            scope: 53537,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint32',
              typeString: 'uint32',
            },
            typeName: {
              id: 53300,
              name: 'uint32',
              nodeType: 'ElementaryTypeName',
              src: '1641:6:88',
              typeDescriptions: {
                typeIdentifier: 't_uint32',
                typeString: 'uint32',
              },
            },
            value: {
              hexValue: '35',
              id: 53301,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: 'number',
              lValueRequested: false,
              nodeType: 'Literal',
              src: '1684:9:88',
              subdenomination: 'minutes',
              typeDescriptions: {
                typeIdentifier: 't_rational_300_by_1',
                typeString: 'int_const 300',
              },
              value: '5',
            },
            visibility: 'internal',
          },
          {
            id: 53306,
            nodeType: 'VariableDeclaration',
            src: '1732:47:88',
            nodes: [],
            baseFunctions: [53986],
            constant: true,
            documentation: {
              id: 53303,
              nodeType: 'StructuredDocumentation',
              src: '1699:28:88',
              text: '@inheritdoc IPriceOracle',
            },
            functionSelector: '06fdde03',
            mutability: 'constant',
            name: 'name',
            nameLocation: '1755:4:88',
            scope: 53537,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_string_memory_ptr',
              typeString: 'string',
            },
            typeName: {
              id: 53304,
              name: 'string',
              nodeType: 'ElementaryTypeName',
              src: '1732:6:88',
              typeDescriptions: {
                typeIdentifier: 't_string_storage_ptr',
                typeString: 'string',
              },
            },
            value: {
              hexValue: '556e697377617056334f7261636c65',
              id: 53305,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: 'string',
              lValueRequested: false,
              nodeType: 'Literal',
              src: '1762:17:88',
              typeDescriptions: {
                typeIdentifier:
                  't_stringliteral_32ceb3c4df7b44179c8ac0bbc71396639e9d56ff85c504f6bf6dcbfd134822bc',
                typeString: 'literal_string "UniswapV3Oracle"',
              },
              value: 'UniswapV3Oracle',
            },
            visibility: 'public',
          },
          {
            id: 53309,
            nodeType: 'VariableDeclaration',
            src: '1832:31:88',
            nodes: [],
            constant: false,
            documentation: {
              id: 53307,
              nodeType: 'StructuredDocumentation',
              src: '1785:42:88',
              text: '@notice One of the tokens in the pool.',
            },
            functionSelector: '0fc63d10',
            mutability: 'immutable',
            name: 'tokenA',
            nameLocation: '1857:6:88',
            scope: 53537,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_address',
              typeString: 'address',
            },
            typeName: {
              id: 53308,
              name: 'address',
              nodeType: 'ElementaryTypeName',
              src: '1832:7:88',
              stateMutability: 'nonpayable',
              typeDescriptions: {
                typeIdentifier: 't_address',
                typeString: 'address',
              },
            },
            visibility: 'public',
          },
          {
            id: 53312,
            nodeType: 'VariableDeclaration',
            src: '1914:31:88',
            nodes: [],
            constant: false,
            documentation: {
              id: 53310,
              nodeType: 'StructuredDocumentation',
              src: '1869:40:88',
              text: '@notice The other token in the pool.',
            },
            functionSelector: '5f64b55b',
            mutability: 'immutable',
            name: 'tokenB',
            nameLocation: '1939:6:88',
            scope: 53537,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_address',
              typeString: 'address',
            },
            typeName: {
              id: 53311,
              name: 'address',
              nodeType: 'ElementaryTypeName',
              src: '1914:7:88',
              stateMutability: 'nonpayable',
              typeDescriptions: {
                typeIdentifier: 't_address',
                typeString: 'address',
              },
            },
            visibility: 'public',
          },
          {
            id: 53315,
            nodeType: 'VariableDeclaration',
            src: '1993:27:88',
            nodes: [],
            constant: false,
            documentation: {
              id: 53313,
              nodeType: 'StructuredDocumentation',
              src: '1951:37:88',
              text: '@notice The fee tier of the pool.',
            },
            functionSelector: 'ddca3f43',
            mutability: 'immutable',
            name: 'fee',
            nameLocation: '2017:3:88',
            scope: 53537,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint24',
              typeString: 'uint24',
            },
            typeName: {
              id: 53314,
              name: 'uint24',
              nodeType: 'ElementaryTypeName',
              src: '1993:6:88',
              typeDescriptions: {
                typeIdentifier: 't_uint24',
                typeString: 'uint24',
              },
            },
            visibility: 'public',
          },
          {
            id: 53318,
            nodeType: 'VariableDeclaration',
            src: '2081:34:88',
            nodes: [],
            constant: false,
            documentation: {
              id: 53316,
              nodeType: 'StructuredDocumentation',
              src: '2026:50:88',
              text: '@notice The desired length of the twap window.',
            },
            functionSelector: '8107e133',
            mutability: 'immutable',
            name: 'twapWindow',
            nameLocation: '2105:10:88',
            scope: 53537,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_uint32',
              typeString: 'uint32',
            },
            typeName: {
              id: 53317,
              name: 'uint32',
              nodeType: 'ElementaryTypeName',
              src: '2081:6:88',
              typeDescriptions: {
                typeIdentifier: 't_uint32',
                typeString: 'uint32',
              },
            },
            visibility: 'public',
          },
          {
            id: 53321,
            nodeType: 'VariableDeclaration',
            src: '2173:29:88',
            nodes: [],
            constant: false,
            documentation: {
              id: 53319,
              nodeType: 'StructuredDocumentation',
              src: '2121:47:88',
              text: '@notice The address of the Uniswap V3 pool.',
            },
            functionSelector: '16f0115b',
            mutability: 'immutable',
            name: 'pool',
            nameLocation: '2198:4:88',
            scope: 53537,
            stateVariable: true,
            storageLocation: 'default',
            typeDescriptions: {
              typeIdentifier: 't_address',
              typeString: 'address',
            },
            typeName: {
              id: 53320,
              name: 'address',
              nodeType: 'ElementaryTypeName',
              src: '2173:7:88',
              stateMutability: 'nonpayable',
              typeDescriptions: {
                typeIdentifier: 't_address',
                typeString: 'address',
              },
            },
            visibility: 'public',
          },
          {
            id: 53396,
            nodeType: 'FunctionDefinition',
            src: '2619:542:88',
            nodes: [],
            body: {
              id: 53395,
              nodeType: 'Block',
              src: '2725:436:88',
              nodes: [],
              statements: [
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                    id: 53348,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_uint32',
                        typeString: 'uint32',
                      },
                      id: 53337,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 53335,
                        name: '_twapWindow',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53330,
                        src: '2739:11:88',
                        typeDescriptions: {
                          typeIdentifier: 't_uint32',
                          typeString: 'uint32',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '<',
                      rightExpression: {
                        id: 53336,
                        name: 'MIN_TWAP_WINDOW',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53302,
                        src: '2753:15:88',
                        typeDescriptions: {
                          typeIdentifier: 't_uint32',
                          typeString: 'uint32',
                        },
                      },
                      src: '2739:29:88',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '||',
                    rightExpression: {
                      commonType: {
                        typeIdentifier: 't_uint32',
                        typeString: 'uint32',
                      },
                      id: 53347,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 53338,
                        name: '_twapWindow',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53330,
                        src: '2772:11:88',
                        typeDescriptions: {
                          typeIdentifier: 't_uint32',
                          typeString: 'uint32',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '>',
                      rightExpression: {
                        arguments: [
                          {
                            expression: {
                              arguments: [
                                {
                                  id: 53343,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  nodeType: 'ElementaryTypeNameExpression',
                                  src: '2798:5:88',
                                  typeDescriptions: {
                                    typeIdentifier: 't_type$_t_int32_$',
                                    typeString: 'type(int32)',
                                  },
                                  typeName: {
                                    id: 53342,
                                    name: 'int32',
                                    nodeType: 'ElementaryTypeName',
                                    src: '2798:5:88',
                                    typeDescriptions: {},
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: 't_type$_t_int32_$',
                                    typeString: 'type(int32)',
                                  },
                                ],
                                id: 53341,
                                name: 'type',
                                nodeType: 'Identifier',
                                overloadedDeclarations: [],
                                referencedDeclaration: -27,
                                src: '2793:4:88',
                                typeDescriptions: {
                                  typeIdentifier: 't_function_metatype_pure$__$returns$__$',
                                  typeString: 'function () pure',
                                },
                              },
                              id: 53344,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: 'functionCall',
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: 'FunctionCall',
                              src: '2793:11:88',
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: 't_magic_meta_type_t_int32',
                                typeString: 'type(int32)',
                              },
                            },
                            id: 53345,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            memberLocation: '2805:3:88',
                            memberName: 'max',
                            nodeType: 'MemberAccess',
                            src: '2793:15:88',
                            typeDescriptions: {
                              typeIdentifier: 't_int32',
                              typeString: 'int32',
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [{ typeIdentifier: 't_int32', typeString: 'int32' }],
                          id: 53340,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '2786:6:88',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_uint32_$',
                            typeString: 'type(uint32)',
                          },
                          typeName: {
                            id: 53339,
                            name: 'uint32',
                            nodeType: 'ElementaryTypeName',
                            src: '2786:6:88',
                            typeDescriptions: {},
                          },
                        },
                        id: 53346,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '2786:23:88',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_uint32',
                          typeString: 'uint32',
                        },
                      },
                      src: '2772:37:88',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    src: '2739:70:88',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 53355,
                  nodeType: 'IfStatement',
                  src: '2735:149:88',
                  trueBody: {
                    id: 53354,
                    nodeType: 'Block',
                    src: '2811:73:88',
                    statements: [
                      {
                        errorCall: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            expression: {
                              id: 53349,
                              name: 'Errors',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 54043,
                              src: '2832:6:88',
                              typeDescriptions: {
                                typeIdentifier: 't_type$_t_contract$_Errors_$54043_$',
                                typeString: 'type(library Errors)',
                              },
                            },
                            id: 53351,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: '2839:32:88',
                            memberName: 'PriceOracle_InvalidConfiguration',
                            nodeType: 'MemberAccess',
                            referencedDeclaration: 54022,
                            src: '2832:39:88',
                            typeDescriptions: {
                              typeIdentifier: 't_function_error_pure$__$returns$__$',
                              typeString: 'function () pure',
                            },
                          },
                          id: 53352,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '2832:41:88',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()',
                          },
                        },
                        id: 53353,
                        nodeType: 'RevertStatement',
                        src: '2825:48:88',
                      },
                    ],
                  },
                },
                {
                  expression: {
                    id: 53358,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 53356,
                      name: 'tokenA',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53309,
                      src: '2893:6:88',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 53357,
                      name: '_tokenA',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53324,
                      src: '2902:7:88',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    src: '2893:16:88',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  id: 53359,
                  nodeType: 'ExpressionStatement',
                  src: '2893:16:88',
                },
                {
                  expression: {
                    id: 53362,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 53360,
                      name: 'tokenB',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53312,
                      src: '2919:6:88',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 53361,
                      name: '_tokenB',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53326,
                      src: '2928:7:88',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    src: '2919:16:88',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  id: 53363,
                  nodeType: 'ExpressionStatement',
                  src: '2919:16:88',
                },
                {
                  expression: {
                    id: 53366,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 53364,
                      name: 'fee',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53315,
                      src: '2945:3:88',
                      typeDescriptions: {
                        typeIdentifier: 't_uint24',
                        typeString: 'uint24',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 53365,
                      name: '_fee',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53328,
                      src: '2951:4:88',
                      typeDescriptions: {
                        typeIdentifier: 't_uint24',
                        typeString: 'uint24',
                      },
                    },
                    src: '2945:10:88',
                    typeDescriptions: {
                      typeIdentifier: 't_uint24',
                      typeString: 'uint24',
                    },
                  },
                  id: 53367,
                  nodeType: 'ExpressionStatement',
                  src: '2945:10:88',
                },
                {
                  expression: {
                    id: 53370,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 53368,
                      name: 'twapWindow',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53318,
                      src: '2965:10:88',
                      typeDescriptions: {
                        typeIdentifier: 't_uint32',
                        typeString: 'uint32',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 53369,
                      name: '_twapWindow',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53330,
                      src: '2978:11:88',
                      typeDescriptions: {
                        typeIdentifier: 't_uint32',
                        typeString: 'uint32',
                      },
                    },
                    src: '2965:24:88',
                    typeDescriptions: {
                      typeIdentifier: 't_uint32',
                      typeString: 'uint32',
                    },
                  },
                  id: 53371,
                  nodeType: 'ExpressionStatement',
                  src: '2965:24:88',
                },
                {
                  expression: {
                    id: 53381,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 53372,
                      name: 'pool',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53321,
                      src: '2999:4:88',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      arguments: [
                        {
                          id: 53377,
                          name: 'tokenA',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 53309,
                          src: '3051:6:88',
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        {
                          id: 53378,
                          name: 'tokenB',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 53312,
                          src: '3059:6:88',
                          typeDescriptions: {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                        },
                        {
                          id: 53379,
                          name: '_fee',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 53328,
                          src: '3067:4:88',
                          typeDescriptions: {
                            typeIdentifier: 't_uint24',
                            typeString: 'uint24',
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                          {
                            typeIdentifier: 't_address',
                            typeString: 'address',
                          },
                          { typeIdentifier: 't_uint24', typeString: 'uint24' },
                        ],
                        expression: {
                          arguments: [
                            {
                              id: 53374,
                              name: '_uniswapV3Factory',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 53332,
                              src: '3024:17:88',
                              typeDescriptions: {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            ],
                            id: 53373,
                            name: 'IUniswapV3Factory',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 48809,
                            src: '3006:17:88',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_contract$_IUniswapV3Factory_$48809_$',
                              typeString: 'type(contract IUniswapV3Factory)',
                            },
                          },
                          id: 53375,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '3006:36:88',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_contract$_IUniswapV3Factory_$48809',
                            typeString: 'contract IUniswapV3Factory',
                          },
                        },
                        id: 53376,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '3043:7:88',
                        memberName: 'getPool',
                        nodeType: 'MemberAccess',
                        referencedDeclaration: 48782,
                        src: '3006:44:88',
                        typeDescriptions: {
                          typeIdentifier:
                            't_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$',
                          typeString:
                            'function (address,address,uint24) view external returns (address)',
                        },
                      },
                      id: 53380,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '3006:66:88',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    src: '2999:73:88',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  id: 53382,
                  nodeType: 'ExpressionStatement',
                  src: '2999:73:88',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                    id: 53388,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 53383,
                      name: 'pool',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53321,
                      src: '3086:4:88',
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '==',
                    rightExpression: {
                      arguments: [
                        {
                          hexValue: '30',
                          id: 53386,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: 'number',
                          lValueRequested: false,
                          nodeType: 'Literal',
                          src: '3102:1:88',
                          typeDescriptions: {
                            typeIdentifier: 't_rational_0_by_1',
                            typeString: 'int_const 0',
                          },
                          value: '0',
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: 't_rational_0_by_1',
                            typeString: 'int_const 0',
                          },
                        ],
                        id: 53385,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: 'ElementaryTypeNameExpression',
                        src: '3094:7:88',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_address_$',
                          typeString: 'type(address)',
                        },
                        typeName: {
                          id: 53384,
                          name: 'address',
                          nodeType: 'ElementaryTypeName',
                          src: '3094:7:88',
                          typeDescriptions: {},
                        },
                      },
                      id: 53387,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: 'typeConversion',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '3094:10:88',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_address',
                        typeString: 'address',
                      },
                    },
                    src: '3086:18:88',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 53394,
                  nodeType: 'IfStatement',
                  src: '3082:72:88',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 53389,
                          name: 'Errors',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 54043,
                          src: '3113:6:88',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_contract$_Errors_$54043_$',
                            typeString: 'type(library Errors)',
                          },
                        },
                        id: 53391,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '3120:32:88',
                        memberName: 'PriceOracle_InvalidConfiguration',
                        nodeType: 'MemberAccess',
                        referencedDeclaration: 54022,
                        src: '3113:39:88',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 53392,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '3113:41:88',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 53393,
                    nodeType: 'RevertStatement',
                    src: '3106:48:88',
                  },
                },
              ],
            },
            documentation: {
              id: 53322,
              nodeType: 'StructuredDocumentation',
              src: '2209:405:88',
              text: '@notice Deploy a UniswapV3Oracle.\n @dev The oracle will support tokenA/tokenB and tokenB/tokenA pricing.\n @param _tokenA One of the tokens in the pool.\n @param _tokenB The other token in the pool.\n @param _fee The fee tier of the pool.\n @param _twapWindow The desired length of the twap window.\n @param _uniswapV3Factory The address of the Uniswap V3 Factory.',
            },
            implemented: true,
            kind: 'constructor',
            modifiers: [],
            name: '',
            nameLocation: '-1:-1:-1',
            parameters: {
              id: 53333,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 53324,
                  mutability: 'mutable',
                  name: '_tokenA',
                  nameLocation: '2639:7:88',
                  nodeType: 'VariableDeclaration',
                  scope: 53396,
                  src: '2631:15:88',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 53323,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '2631:7:88',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 53326,
                  mutability: 'mutable',
                  name: '_tokenB',
                  nameLocation: '2656:7:88',
                  nodeType: 'VariableDeclaration',
                  scope: 53396,
                  src: '2648:15:88',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 53325,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '2648:7:88',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 53328,
                  mutability: 'mutable',
                  name: '_fee',
                  nameLocation: '2672:4:88',
                  nodeType: 'VariableDeclaration',
                  scope: 53396,
                  src: '2665:11:88',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint24',
                    typeString: 'uint24',
                  },
                  typeName: {
                    id: 53327,
                    name: 'uint24',
                    nodeType: 'ElementaryTypeName',
                    src: '2665:6:88',
                    typeDescriptions: {
                      typeIdentifier: 't_uint24',
                      typeString: 'uint24',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 53330,
                  mutability: 'mutable',
                  name: '_twapWindow',
                  nameLocation: '2685:11:88',
                  nodeType: 'VariableDeclaration',
                  scope: 53396,
                  src: '2678:18:88',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint32',
                    typeString: 'uint32',
                  },
                  typeName: {
                    id: 53329,
                    name: 'uint32',
                    nodeType: 'ElementaryTypeName',
                    src: '2678:6:88',
                    typeDescriptions: {
                      typeIdentifier: 't_uint32',
                      typeString: 'uint32',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 53332,
                  mutability: 'mutable',
                  name: '_uniswapV3Factory',
                  nameLocation: '2706:17:88',
                  nodeType: 'VariableDeclaration',
                  scope: 53396,
                  src: '2698:25:88',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 53331,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '2698:7:88',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '2630:94:88',
            },
            returnParameters: {
              id: 53334,
              nodeType: 'ParameterList',
              parameters: [],
              src: '2725:0:88',
            },
            scope: 53537,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'public',
          },
          {
            id: 53536,
            nodeType: 'FunctionDefinition',
            src: '3495:993:88',
            nodes: [],
            body: {
              id: 53535,
              nodeType: 'Block',
              src: '3602:886:88',
              nodes: [],
              statements: [
                {
                  condition: {
                    id: 53427,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: 'UnaryOperation',
                    operator: '!',
                    prefix: true,
                    src: '3616:77:88',
                    subExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                          id: 53425,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            components: [
                              {
                                commonType: {
                                  typeIdentifier: 't_bool',
                                  typeString: 'bool',
                                },
                                id: 53415,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  commonType: {
                                    typeIdentifier: 't_address',
                                    typeString: 'address',
                                  },
                                  id: 53411,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  leftExpression: {
                                    id: 53409,
                                    name: 'base',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 53401,
                                    src: '3619:4:88',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                  nodeType: 'BinaryOperation',
                                  operator: '==',
                                  rightExpression: {
                                    id: 53410,
                                    name: 'tokenA',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 53309,
                                    src: '3627:6:88',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                  src: '3619:14:88',
                                  typeDescriptions: {
                                    typeIdentifier: 't_bool',
                                    typeString: 'bool',
                                  },
                                },
                                nodeType: 'BinaryOperation',
                                operator: '&&',
                                rightExpression: {
                                  commonType: {
                                    typeIdentifier: 't_address',
                                    typeString: 'address',
                                  },
                                  id: 53414,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  leftExpression: {
                                    id: 53412,
                                    name: 'quote',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 53403,
                                    src: '3637:5:88',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                  nodeType: 'BinaryOperation',
                                  operator: '==',
                                  rightExpression: {
                                    id: 53413,
                                    name: 'tokenB',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 53312,
                                    src: '3646:6:88',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                  src: '3637:15:88',
                                  typeDescriptions: {
                                    typeIdentifier: 't_bool',
                                    typeString: 'bool',
                                  },
                                },
                                src: '3619:33:88',
                                typeDescriptions: {
                                  typeIdentifier: 't_bool',
                                  typeString: 'bool',
                                },
                              },
                            ],
                            id: 53416,
                            isConstant: false,
                            isInlineArray: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: 'TupleExpression',
                            src: '3618:35:88',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                          },
                          nodeType: 'BinaryOperation',
                          operator: '||',
                          rightExpression: {
                            components: [
                              {
                                commonType: {
                                  typeIdentifier: 't_bool',
                                  typeString: 'bool',
                                },
                                id: 53423,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  commonType: {
                                    typeIdentifier: 't_address',
                                    typeString: 'address',
                                  },
                                  id: 53419,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  leftExpression: {
                                    id: 53417,
                                    name: 'base',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 53401,
                                    src: '3658:4:88',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                  nodeType: 'BinaryOperation',
                                  operator: '==',
                                  rightExpression: {
                                    id: 53418,
                                    name: 'tokenB',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 53312,
                                    src: '3666:6:88',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                  src: '3658:14:88',
                                  typeDescriptions: {
                                    typeIdentifier: 't_bool',
                                    typeString: 'bool',
                                  },
                                },
                                nodeType: 'BinaryOperation',
                                operator: '&&',
                                rightExpression: {
                                  commonType: {
                                    typeIdentifier: 't_address',
                                    typeString: 'address',
                                  },
                                  id: 53422,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  leftExpression: {
                                    id: 53420,
                                    name: 'quote',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 53403,
                                    src: '3676:5:88',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                  nodeType: 'BinaryOperation',
                                  operator: '==',
                                  rightExpression: {
                                    id: 53421,
                                    name: 'tokenA',
                                    nodeType: 'Identifier',
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 53309,
                                    src: '3685:6:88',
                                    typeDescriptions: {
                                      typeIdentifier: 't_address',
                                      typeString: 'address',
                                    },
                                  },
                                  src: '3676:15:88',
                                  typeDescriptions: {
                                    typeIdentifier: 't_bool',
                                    typeString: 'bool',
                                  },
                                },
                                src: '3658:33:88',
                                typeDescriptions: {
                                  typeIdentifier: 't_bool',
                                  typeString: 'bool',
                                },
                              },
                            ],
                            id: 53424,
                            isConstant: false,
                            isInlineArray: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: 'TupleExpression',
                            src: '3657:35:88',
                            typeDescriptions: {
                              typeIdentifier: 't_bool',
                              typeString: 'bool',
                            },
                          },
                          src: '3618:74:88',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                      ],
                      id: 53426,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'TupleExpression',
                      src: '3617:76:88',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 53436,
                  nodeType: 'IfStatement',
                  src: '3612:159:88',
                  trueBody: {
                    id: 53435,
                    nodeType: 'Block',
                    src: '3695:76:88',
                    statements: [
                      {
                        errorCall: {
                          arguments: [
                            {
                              id: 53431,
                              name: 'base',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 53401,
                              src: '3748:4:88',
                              typeDescriptions: {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            },
                            {
                              id: 53432,
                              name: 'quote',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 53403,
                              src: '3754:5:88',
                              typeDescriptions: {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                              {
                                typeIdentifier: 't_address',
                                typeString: 'address',
                              },
                            ],
                            expression: {
                              id: 53428,
                              name: 'Errors',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 54043,
                              src: '3716:6:88',
                              typeDescriptions: {
                                typeIdentifier: 't_type$_t_contract$_Errors_$54043_$',
                                typeString: 'type(library Errors)',
                              },
                            },
                            id: 53430,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: '3723:24:88',
                            memberName: 'PriceOracle_NotSupported',
                            nodeType: 'MemberAccess',
                            referencedDeclaration: 54029,
                            src: '3716:31:88',
                            typeDescriptions: {
                              typeIdentifier:
                                't_function_error_pure$_t_address_$_t_address_$returns$__$',
                              typeString: 'function (address,address) pure',
                            },
                          },
                          id: 53433,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'functionCall',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '3716:44:88',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_tuple$__$',
                            typeString: 'tuple()',
                          },
                        },
                        id: 53434,
                        nodeType: 'RevertStatement',
                        src: '3709:51:88',
                      },
                    ],
                  },
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                    id: 53443,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 53437,
                      name: 'inAmount',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53399,
                      src: '3833:8:88',
                      typeDescriptions: {
                        typeIdentifier: 't_uint256',
                        typeString: 'uint256',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '>',
                    rightExpression: {
                      expression: {
                        arguments: [
                          {
                            id: 53440,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '3849:7:88',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_uint128_$',
                              typeString: 'type(uint128)',
                            },
                            typeName: {
                              id: 53439,
                              name: 'uint128',
                              nodeType: 'ElementaryTypeName',
                              src: '3849:7:88',
                              typeDescriptions: {},
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_type$_t_uint128_$',
                              typeString: 'type(uint128)',
                            },
                          ],
                          id: 53438,
                          name: 'type',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: -27,
                          src: '3844:4:88',
                          typeDescriptions: {
                            typeIdentifier: 't_function_metatype_pure$__$returns$__$',
                            typeString: 'function () pure',
                          },
                        },
                        id: 53441,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'functionCall',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '3844:13:88',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_magic_meta_type_t_uint128',
                          typeString: 'type(uint128)',
                        },
                      },
                      id: 53442,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      memberLocation: '3858:3:88',
                      memberName: 'max',
                      nodeType: 'MemberAccess',
                      src: '3844:17:88',
                      typeDescriptions: {
                        typeIdentifier: 't_uint128',
                        typeString: 'uint128',
                      },
                    },
                    src: '3833:28:88',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 53449,
                  nodeType: 'IfStatement',
                  src: '3829:70:88',
                  trueBody: {
                    errorCall: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 53444,
                          name: 'Errors',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 54043,
                          src: '3870:6:88',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_contract$_Errors_$54043_$',
                            typeString: 'type(library Errors)',
                          },
                        },
                        id: 53446,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: '3877:20:88',
                        memberName: 'PriceOracle_Overflow',
                        nodeType: 'MemberAccess',
                        referencedDeclaration: 54032,
                        src: '3870:27:88',
                        typeDescriptions: {
                          typeIdentifier: 't_function_error_pure$__$returns$__$',
                          typeString: 'function () pure',
                        },
                      },
                      id: 53447,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: 'functionCall',
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: 'FunctionCall',
                      src: '3870:29:88',
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: 't_tuple$__$',
                        typeString: 'tuple()',
                      },
                    },
                    id: 53448,
                    nodeType: 'RevertStatement',
                    src: '3863:36:88',
                  },
                },
                {
                  assignments: [53454],
                  declarations: [
                    {
                      constant: false,
                      id: 53454,
                      mutability: 'mutable',
                      name: 'secondsAgos',
                      nameLocation: '3926:11:88',
                      nodeType: 'VariableDeclaration',
                      scope: 53535,
                      src: '3910:27:88',
                      stateVariable: false,
                      storageLocation: 'memory',
                      typeDescriptions: {
                        typeIdentifier: 't_array$_t_uint32_$dyn_memory_ptr',
                        typeString: 'uint32[]',
                      },
                      typeName: {
                        baseType: {
                          id: 53452,
                          name: 'uint32',
                          nodeType: 'ElementaryTypeName',
                          src: '3910:6:88',
                          typeDescriptions: {
                            typeIdentifier: 't_uint32',
                            typeString: 'uint32',
                          },
                        },
                        id: 53453,
                        nodeType: 'ArrayTypeName',
                        src: '3910:8:88',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint32_$dyn_storage_ptr',
                          typeString: 'uint32[]',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 53460,
                  initialValue: {
                    arguments: [
                      {
                        hexValue: '32',
                        id: 53458,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '3953:1:88',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_2_by_1',
                          typeString: 'int_const 2',
                        },
                        value: '2',
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_rational_2_by_1',
                          typeString: 'int_const 2',
                        },
                      ],
                      id: 53457,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: 'NewExpression',
                      src: '3940:12:88',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$',
                        typeString: 'function (uint256) pure returns (uint32[] memory)',
                      },
                      typeName: {
                        baseType: {
                          id: 53455,
                          name: 'uint32',
                          nodeType: 'ElementaryTypeName',
                          src: '3944:6:88',
                          typeDescriptions: {
                            typeIdentifier: 't_uint32',
                            typeString: 'uint32',
                          },
                        },
                        id: 53456,
                        nodeType: 'ArrayTypeName',
                        src: '3944:8:88',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint32_$dyn_storage_ptr',
                          typeString: 'uint32[]',
                        },
                      },
                    },
                    id: 53459,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '3940:15:88',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_array$_t_uint32_$dyn_memory_ptr',
                      typeString: 'uint32[] memory',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '3910:45:88',
                },
                {
                  expression: {
                    id: 53465,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 53461,
                        name: 'secondsAgos',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53454,
                        src: '3965:11:88',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint32_$dyn_memory_ptr',
                          typeString: 'uint32[] memory',
                        },
                      },
                      id: 53463,
                      indexExpression: {
                        hexValue: '30',
                        id: 53462,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '3977:1:88',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_0_by_1',
                          typeString: 'int_const 0',
                        },
                        value: '0',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: 'IndexAccess',
                      src: '3965:14:88',
                      typeDescriptions: {
                        typeIdentifier: 't_uint32',
                        typeString: 'uint32',
                      },
                    },
                    nodeType: 'Assignment',
                    operator: '=',
                    rightHandSide: {
                      id: 53464,
                      name: 'twapWindow',
                      nodeType: 'Identifier',
                      overloadedDeclarations: [],
                      referencedDeclaration: 53318,
                      src: '3982:10:88',
                      typeDescriptions: {
                        typeIdentifier: 't_uint32',
                        typeString: 'uint32',
                      },
                    },
                    src: '3965:27:88',
                    typeDescriptions: {
                      typeIdentifier: 't_uint32',
                      typeString: 'uint32',
                    },
                  },
                  id: 53466,
                  nodeType: 'ExpressionStatement',
                  src: '3965:27:88',
                },
                {
                  assignments: [53471, null],
                  declarations: [
                    {
                      constant: false,
                      id: 53471,
                      mutability: 'mutable',
                      name: 'tickCumulatives',
                      nameLocation: '4076:15:88',
                      nodeType: 'VariableDeclaration',
                      scope: 53535,
                      src: '4061:30:88',
                      stateVariable: false,
                      storageLocation: 'memory',
                      typeDescriptions: {
                        typeIdentifier: 't_array$_t_int56_$dyn_memory_ptr',
                        typeString: 'int56[]',
                      },
                      typeName: {
                        baseType: {
                          id: 53469,
                          name: 'int56',
                          nodeType: 'ElementaryTypeName',
                          src: '4061:5:88',
                          typeDescriptions: {
                            typeIdentifier: 't_int56',
                            typeString: 'int56',
                          },
                        },
                        id: 53470,
                        nodeType: 'ArrayTypeName',
                        src: '4061:7:88',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_int56_$dyn_storage_ptr',
                          typeString: 'int56[]',
                        },
                      },
                      visibility: 'internal',
                    },
                    null,
                  ],
                  id: 53478,
                  initialValue: {
                    arguments: [
                      {
                        id: 53476,
                        name: 'secondsAgos',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53454,
                        src: '4125:11:88',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_uint32_$dyn_memory_ptr',
                          typeString: 'uint32[] memory',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: 't_array$_t_uint32_$dyn_memory_ptr',
                          typeString: 'uint32[] memory',
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            id: 53473,
                            name: 'pool',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 53321,
                            src: '4111:4:88',
                            typeDescriptions: {
                              typeIdentifier: 't_address',
                              typeString: 'address',
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_address',
                              typeString: 'address',
                            },
                          ],
                          id: 53472,
                          name: 'IUniswapV3Pool',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 48841,
                          src: '4096:14:88',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_contract$_IUniswapV3Pool_$48841_$',
                            typeString: 'type(contract IUniswapV3Pool)',
                          },
                        },
                        id: 53474,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '4096:20:88',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_contract$_IUniswapV3Pool_$48841',
                          typeString: 'contract IUniswapV3Pool',
                        },
                      },
                      id: 53475,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '4117:7:88',
                      memberName: 'observe',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 48953,
                      src: '4096:28:88',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$',
                        typeString:
                          'function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)',
                      },
                    },
                    id: 53477,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4096:41:88',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        't_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$',
                      typeString: 'tuple(int56[] memory,uint160[] memory)',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '4060:77:88',
                },
                {
                  assignments: [53480],
                  declarations: [
                    {
                      constant: false,
                      id: 53480,
                      mutability: 'mutable',
                      name: 'tickCumulativesDelta',
                      nameLocation: '4153:20:88',
                      nodeType: 'VariableDeclaration',
                      scope: 53535,
                      src: '4147:26:88',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_int56',
                        typeString: 'int56',
                      },
                      typeName: {
                        id: 53479,
                        name: 'int56',
                        nodeType: 'ElementaryTypeName',
                        src: '4147:5:88',
                        typeDescriptions: {
                          typeIdentifier: 't_int56',
                          typeString: 'int56',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 53488,
                  initialValue: {
                    commonType: {
                      typeIdentifier: 't_int56',
                      typeString: 'int56',
                    },
                    id: 53487,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      baseExpression: {
                        id: 53481,
                        name: 'tickCumulatives',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53471,
                        src: '4176:15:88',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_int56_$dyn_memory_ptr',
                          typeString: 'int56[] memory',
                        },
                      },
                      id: 53483,
                      indexExpression: {
                        hexValue: '31',
                        id: 53482,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '4192:1:88',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_1_by_1',
                          typeString: 'int_const 1',
                        },
                        value: '1',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'IndexAccess',
                      src: '4176:18:88',
                      typeDescriptions: {
                        typeIdentifier: 't_int56',
                        typeString: 'int56',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '-',
                    rightExpression: {
                      baseExpression: {
                        id: 53484,
                        name: 'tickCumulatives',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53471,
                        src: '4197:15:88',
                        typeDescriptions: {
                          typeIdentifier: 't_array$_t_int56_$dyn_memory_ptr',
                          typeString: 'int56[] memory',
                        },
                      },
                      id: 53486,
                      indexExpression: {
                        hexValue: '30',
                        id: 53485,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '4213:1:88',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_0_by_1',
                          typeString: 'int_const 0',
                        },
                        value: '0',
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'IndexAccess',
                      src: '4197:18:88',
                      typeDescriptions: {
                        typeIdentifier: 't_int56',
                        typeString: 'int56',
                      },
                    },
                    src: '4176:39:88',
                    typeDescriptions: {
                      typeIdentifier: 't_int56',
                      typeString: 'int56',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '4147:68:88',
                },
                {
                  assignments: [53490],
                  declarations: [
                    {
                      constant: false,
                      id: 53490,
                      mutability: 'mutable',
                      name: 'tick',
                      nameLocation: '4231:4:88',
                      nodeType: 'VariableDeclaration',
                      scope: 53535,
                      src: '4225:10:88',
                      stateVariable: false,
                      storageLocation: 'default',
                      typeDescriptions: {
                        typeIdentifier: 't_int24',
                        typeString: 'int24',
                      },
                      typeName: {
                        id: 53489,
                        name: 'int24',
                        nodeType: 'ElementaryTypeName',
                        src: '4225:5:88',
                        typeDescriptions: {
                          typeIdentifier: 't_int24',
                          typeString: 'int24',
                        },
                      },
                      visibility: 'internal',
                    },
                  ],
                  id: 53503,
                  initialValue: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: 't_int56',
                          typeString: 'int56',
                        },
                        id: 53501,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 53493,
                          name: 'tickCumulativesDelta',
                          nodeType: 'Identifier',
                          overloadedDeclarations: [],
                          referencedDeclaration: 53480,
                          src: '4244:20:88',
                          typeDescriptions: {
                            typeIdentifier: 't_int56',
                            typeString: 'int56',
                          },
                        },
                        nodeType: 'BinaryOperation',
                        operator: '/',
                        rightExpression: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  id: 53498,
                                  name: 'twapWindow',
                                  nodeType: 'Identifier',
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 53318,
                                  src: '4280:10:88',
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint32',
                                    typeString: 'uint32',
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: 't_uint32',
                                    typeString: 'uint32',
                                  },
                                ],
                                id: 53497,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: 'ElementaryTypeNameExpression',
                                src: '4273:6:88',
                                typeDescriptions: {
                                  typeIdentifier: 't_type$_t_uint56_$',
                                  typeString: 'type(uint56)',
                                },
                                typeName: {
                                  id: 53496,
                                  name: 'uint56',
                                  nodeType: 'ElementaryTypeName',
                                  src: '4273:6:88',
                                  typeDescriptions: {},
                                },
                              },
                              id: 53499,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: 'typeConversion',
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: 'FunctionCall',
                              src: '4273:18:88',
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: 't_uint56',
                                typeString: 'uint56',
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: 't_uint56',
                                typeString: 'uint56',
                              },
                            ],
                            id: 53495,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: 'ElementaryTypeNameExpression',
                            src: '4267:5:88',
                            typeDescriptions: {
                              typeIdentifier: 't_type$_t_int56_$',
                              typeString: 'type(int56)',
                            },
                            typeName: {
                              id: 53494,
                              name: 'int56',
                              nodeType: 'ElementaryTypeName',
                              src: '4267:5:88',
                              typeDescriptions: {},
                            },
                          },
                          id: 53500,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: 'typeConversion',
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: 'FunctionCall',
                          src: '4267:25:88',
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: 't_int56',
                            typeString: 'int56',
                          },
                        },
                        src: '4244:48:88',
                        typeDescriptions: {
                          typeIdentifier: 't_int56',
                          typeString: 'int56',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [{ typeIdentifier: 't_int56', typeString: 'int56' }],
                      id: 53492,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: 'ElementaryTypeNameExpression',
                      src: '4238:5:88',
                      typeDescriptions: {
                        typeIdentifier: 't_type$_t_int24_$',
                        typeString: 'type(int24)',
                      },
                      typeName: {
                        id: 53491,
                        name: 'int24',
                        nodeType: 'ElementaryTypeName',
                        src: '4238:5:88',
                        typeDescriptions: {},
                      },
                    },
                    id: 53502,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'typeConversion',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4238:55:88',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_int24',
                      typeString: 'int24',
                    },
                  },
                  nodeType: 'VariableDeclarationStatement',
                  src: '4225:68:88',
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                    id: 53519,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: 't_int56',
                        typeString: 'int56',
                      },
                      id: 53506,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 53504,
                        name: 'tickCumulativesDelta',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53480,
                        src: '4307:20:88',
                        typeDescriptions: {
                          typeIdentifier: 't_int56',
                          typeString: 'int56',
                        },
                      },
                      nodeType: 'BinaryOperation',
                      operator: '<',
                      rightExpression: {
                        hexValue: '30',
                        id: 53505,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: 'number',
                        lValueRequested: false,
                        nodeType: 'Literal',
                        src: '4330:1:88',
                        typeDescriptions: {
                          typeIdentifier: 't_rational_0_by_1',
                          typeString: 'int_const 0',
                        },
                        value: '0',
                      },
                      src: '4307:24:88',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    nodeType: 'BinaryOperation',
                    operator: '&&',
                    rightExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier: 't_int56',
                            typeString: 'int56',
                          },
                          id: 53517,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: 't_int56',
                              typeString: 'int56',
                            },
                            id: 53515,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              id: 53507,
                              name: 'tickCumulativesDelta',
                              nodeType: 'Identifier',
                              overloadedDeclarations: [],
                              referencedDeclaration: 53480,
                              src: '4336:20:88',
                              typeDescriptions: {
                                typeIdentifier: 't_int56',
                                typeString: 'int56',
                              },
                            },
                            nodeType: 'BinaryOperation',
                            operator: '%',
                            rightExpression: {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      id: 53512,
                                      name: 'twapWindow',
                                      nodeType: 'Identifier',
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 53318,
                                      src: '4372:10:88',
                                      typeDescriptions: {
                                        typeIdentifier: 't_uint32',
                                        typeString: 'uint32',
                                      },
                                    },
                                  ],
                                  expression: {
                                    argumentTypes: [
                                      {
                                        typeIdentifier: 't_uint32',
                                        typeString: 'uint32',
                                      },
                                    ],
                                    id: 53511,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    lValueRequested: false,
                                    nodeType: 'ElementaryTypeNameExpression',
                                    src: '4365:6:88',
                                    typeDescriptions: {
                                      typeIdentifier: 't_type$_t_uint56_$',
                                      typeString: 'type(uint56)',
                                    },
                                    typeName: {
                                      id: 53510,
                                      name: 'uint56',
                                      nodeType: 'ElementaryTypeName',
                                      src: '4365:6:88',
                                      typeDescriptions: {},
                                    },
                                  },
                                  id: 53513,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  kind: 'typeConversion',
                                  lValueRequested: false,
                                  nameLocations: [],
                                  names: [],
                                  nodeType: 'FunctionCall',
                                  src: '4365:18:88',
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier: 't_uint56',
                                    typeString: 'uint56',
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: 't_uint56',
                                    typeString: 'uint56',
                                  },
                                ],
                                id: 53509,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: 'ElementaryTypeNameExpression',
                                src: '4359:5:88',
                                typeDescriptions: {
                                  typeIdentifier: 't_type$_t_int56_$',
                                  typeString: 'type(int56)',
                                },
                                typeName: {
                                  id: 53508,
                                  name: 'int56',
                                  nodeType: 'ElementaryTypeName',
                                  src: '4359:5:88',
                                  typeDescriptions: {},
                                },
                              },
                              id: 53514,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: 'typeConversion',
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: 'FunctionCall',
                              src: '4359:25:88',
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: 't_int56',
                                typeString: 'int56',
                              },
                            },
                            src: '4336:48:88',
                            typeDescriptions: {
                              typeIdentifier: 't_int56',
                              typeString: 'int56',
                            },
                          },
                          nodeType: 'BinaryOperation',
                          operator: '!=',
                          rightExpression: {
                            hexValue: '30',
                            id: 53516,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: 'number',
                            lValueRequested: false,
                            nodeType: 'Literal',
                            src: '4388:1:88',
                            typeDescriptions: {
                              typeIdentifier: 't_rational_0_by_1',
                              typeString: 'int_const 0',
                            },
                            value: '0',
                          },
                          src: '4336:53:88',
                          typeDescriptions: {
                            typeIdentifier: 't_bool',
                            typeString: 'bool',
                          },
                        },
                      ],
                      id: 53518,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'TupleExpression',
                      src: '4335:55:88',
                      typeDescriptions: {
                        typeIdentifier: 't_bool',
                        typeString: 'bool',
                      },
                    },
                    src: '4307:83:88',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  id: 53523,
                  nodeType: 'IfStatement',
                  src: '4303:95:88',
                  trueBody: {
                    expression: {
                      id: 53521,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: 'UnaryOperation',
                      operator: '--',
                      prefix: false,
                      src: '4392:6:88',
                      subExpression: {
                        id: 53520,
                        name: 'tick',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53490,
                        src: '4392:4:88',
                        typeDescriptions: {
                          typeIdentifier: 't_int24',
                          typeString: 'int24',
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: 't_int24',
                        typeString: 'int24',
                      },
                    },
                    id: 53522,
                    nodeType: 'ExpressionStatement',
                    src: '4392:6:88',
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 53526,
                        name: 'tick',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53490,
                        src: '4444:4:88',
                        typeDescriptions: {
                          typeIdentifier: 't_int24',
                          typeString: 'int24',
                        },
                      },
                      {
                        arguments: [
                          {
                            id: 53529,
                            name: 'inAmount',
                            nodeType: 'Identifier',
                            overloadedDeclarations: [],
                            referencedDeclaration: 53399,
                            src: '4458:8:88',
                            typeDescriptions: {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: 't_uint256',
                              typeString: 'uint256',
                            },
                          ],
                          id: 53528,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: 'ElementaryTypeNameExpression',
                          src: '4450:7:88',
                          typeDescriptions: {
                            typeIdentifier: 't_type$_t_uint128_$',
                            typeString: 'type(uint128)',
                          },
                          typeName: {
                            id: 53527,
                            name: 'uint128',
                            nodeType: 'ElementaryTypeName',
                            src: '4450:7:88',
                            typeDescriptions: {},
                          },
                        },
                        id: 53530,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: 'typeConversion',
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: 'FunctionCall',
                        src: '4450:17:88',
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: 't_uint128',
                          typeString: 'uint128',
                        },
                      },
                      {
                        id: 53531,
                        name: 'base',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53401,
                        src: '4469:4:88',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                      {
                        id: 53532,
                        name: 'quote',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 53403,
                        src: '4475:5:88',
                        typeDescriptions: {
                          typeIdentifier: 't_address',
                          typeString: 'address',
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        { typeIdentifier: 't_int24', typeString: 'int24' },
                        { typeIdentifier: 't_uint128', typeString: 'uint128' },
                        { typeIdentifier: 't_address', typeString: 'address' },
                        { typeIdentifier: 't_address', typeString: 'address' },
                      ],
                      expression: {
                        id: 53524,
                        name: 'OracleLibrary',
                        nodeType: 'Identifier',
                        overloadedDeclarations: [],
                        referencedDeclaration: 50631,
                        src: '4415:13:88',
                        typeDescriptions: {
                          typeIdentifier: 't_type$_t_contract$_OracleLibrary_$50631_$',
                          typeString: 'type(library OracleLibrary)',
                        },
                      },
                      id: 53525,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: '4429:14:88',
                      memberName: 'getQuoteAtTick',
                      nodeType: 'MemberAccess',
                      referencedDeclaration: 50257,
                      src: '4415:28:88',
                      typeDescriptions: {
                        typeIdentifier:
                          't_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$',
                        typeString:
                          'function (int24,uint128,address,address) pure returns (uint256)',
                      },
                    },
                    id: 53533,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: 'functionCall',
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: 'FunctionCall',
                    src: '4415:66:88',
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  functionReturnParameters: 53408,
                  id: 53534,
                  nodeType: 'Return',
                  src: '4408:73:88',
                },
              ],
            },
            baseFunctions: [51181],
            documentation: {
              id: 53397,
              nodeType: 'StructuredDocumentation',
              src: '3167:323:88',
              text: "@notice Get a quote by calling the pool's TWAP oracle.\n @param inAmount The amount of `base` to convert.\n @param base The token that is being priced. Either `tokenA` or `tokenB`.\n @param quote The token that is the unit of account. Either `tokenB` or `tokenA`.\n @return The converted amount.",
            },
            implemented: true,
            kind: 'function',
            modifiers: [],
            name: '_getQuote',
            nameLocation: '3504:9:88',
            overrides: {
              id: 53405,
              nodeType: 'OverrideSpecifier',
              overrides: [],
              src: '3575:8:88',
            },
            parameters: {
              id: 53404,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 53399,
                  mutability: 'mutable',
                  name: 'inAmount',
                  nameLocation: '3522:8:88',
                  nodeType: 'VariableDeclaration',
                  scope: 53536,
                  src: '3514:16:88',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 53398,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3514:7:88',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 53401,
                  mutability: 'mutable',
                  name: 'base',
                  nameLocation: '3540:4:88',
                  nodeType: 'VariableDeclaration',
                  scope: 53536,
                  src: '3532:12:88',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 53400,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '3532:7:88',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 53403,
                  mutability: 'mutable',
                  name: 'quote',
                  nameLocation: '3554:5:88',
                  nodeType: 'VariableDeclaration',
                  scope: 53536,
                  src: '3546:13:88',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 53402,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '3546:7:88',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3513:47:88',
            },
            returnParameters: {
              id: 53408,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 53407,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 53536,
                  src: '3593:7:88',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 53406,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3593:7:88',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3592:9:88',
            },
            scope: 53537,
            stateMutability: 'view',
            virtual: false,
            visibility: 'internal',
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 53297,
              name: 'BaseAdapter',
              nameLocations: ['1571:11:88'],
              nodeType: 'IdentifierPath',
              referencedDeclaration: 51182,
              src: '1571:11:88',
            },
            id: 53298,
            nodeType: 'InheritanceSpecifier',
            src: '1571:11:88',
          },
        ],
        canonicalName: 'UniswapV3Oracle',
        contractDependencies: [],
        contractKind: 'contract',
        documentation: {
          id: 53296,
          nodeType: 'StructuredDocumentation',
          src: '416:1127:88',
          text: "@title UniswapV3Oracle\n @custom:security-contact security@euler.xyz\n @author Euler Labs (https://www.eulerlabs.com/)\n @notice Adapter for Uniswap V3's TWAP oracle.\n @dev This oracle supports quoting tokenA/tokenB and tokenB/tokenA of the given pool.\n WARNING: READ THIS BEFORE DEPLOYING\n Do not use Uniswap V3 as an oracle unless you understand its security implications.\n Instead, consider using another provider as a primary price source.\n Under PoS a validator may be chosen to propose consecutive blocks, allowing risk-free multi-block manipulation.\n The cardinality of the observation buffer must be grown sufficiently to accommodate for the chosen TWAP window.\n The observation buffer must contain enough observations to accommodate for the chosen TWAP window.\n The chosen pool must have enough total liquidity and some full-range liquidity to resist manipulation.\n The chosen pool must have had sufficient liquidity when past observations were recorded in the buffer.\n Networks with short block times are highly susceptible to TWAP manipulation due to the reduced attack cost.",
        },
        fullyImplemented: true,
        linearizedBaseContracts: [53537, 51182, 54013],
        name: 'UniswapV3Oracle',
        nameLocation: '1552:15:88',
        scope: 53538,
        usedErrors: [49471, 54022, 54029, 54032],
        usedEvents: [],
      },
    ],
    license: 'GPL-2.0-or-later',
  },
  id: 88,
} as const;
